using System.Collections.Generic;
using System.Collections.ObjectModel;

namespace SqlPad.Oracle
{
	/// <summary>
	/// This class provides token constants for Oracle SQL grammar.
	/// </summary>
	public static class OracleGrammarDescription
	{
		/// <summary>
		/// This class provides all available non-terminal IDs.
		/// </summary>
		public static class NonTerminals
		{
			public const string AccessibleByClause = "AccessibleByClause";
			public const string Accessor = "Accessor";
			public const string AccessorList = "AccessorList";
			public const string AccessorListChained = "AccessorListChained";
			public const string AddColumnClause = "AddColumnClause";
			public const string AddConstraintClause = "AddConstraintClause";
			public const string AddOrDropMethodSpecification = "AddOrDropMethodSpecification";
			public const string AddPeriodClause = "AddPeriodClause";
			public const string AddSupplementalLogList = "AddSupplementalLogList";
			public const string AddSupplementalLogListChained = "AddSupplementalLogListChained";
			public const string AggregateFunction = "AggregateFunction";
			public const string AggregateFunctionCall = "AggregateFunctionCall";
			public const string AggregateFunctionParameter = "AggregateFunctionParameter";
			public const string AggregateOrPipelined = "AggregateOrPipelined";
			public const string AggregationFunctionParameters = "AggregationFunctionParameters";
			public const string AliasedExpression = "AliasedExpression";
			public const string AliasedExpressionList = "AliasedExpressionList";
			public const string AliasedExpressionListOrAliasedGroupingExpressionList = "AliasedExpressionListOrAliasedGroupingExpressionList";
			public const string AliasedExpressionListOrAliasedGroupingExpressionListChained = "AliasedExpressionListOrAliasedGroupingExpressionListChained";
			public const string AliasedExpressionOrAllTableColumns = "AliasedExpressionOrAllTableColumns";
			public const string AllFieldsOverrideTheseFields = "AllFieldsOverrideTheseFields";
			public const string AllocateExtentClause = "AllocateExtentClause";
			public const string AllocateExtentOptionList = "AllocateExtentOptionList";
			public const string AllOrDistinct = "AllOrDistinct";
			public const string AllOrQualifiedObjectIdentifierList = "AllOrQualifiedObjectIdentifierList";
			public const string AllOrUpdated = "AllOrUpdated";
			public const string AllowDisallowClustering = "AllowDisallowClustering";
			public const string AllRowsPerMatchOption = "AllRowsPerMatchOption";
			public const string AlterAttributeDefinition = "AlterAttributeDefinition";
			public const string AlterCollectionClauses = "AlterCollectionClauses";
			public const string AlterFunction = "AlterFunction";
			public const string AlterLibrary = "AlterLibrary";
			public const string AlterMaterializedView = "AlterMaterializedView";
			public const string AlterMaterializedViewOption = "AlterMaterializedViewOption";
			public const string AlterMaterializedViewOptionList = "AlterMaterializedViewOptionList";
			public const string AlterMaterializedViewRefreshOption = "AlterMaterializedViewRefreshOption";
			public const string AlterMaterializedViewRefreshOptionList = "AlterMaterializedViewRefreshOptionList";
			public const string AlterMethodSpecification = "AlterMethodSpecification";
			public const string AlterMethodSpecificationChained = "AlterMethodSpecificationChained";
			public const string AlterMultipleUsersProxyClause = "AlterMultipleUsersProxyClause";
			public const string AlterMultipleUsersProxyClauseGrantOption = "AlterMultipleUsersProxyClauseGrantOption";
			public const string AlterMultipleUsersProxyClauseRevokeOption = "AlterMultipleUsersProxyClauseRevokeOption";
			public const string AlterObjectClause = "AlterObjectClause";
			public const string AlterPackage = "AlterPackage";
			public const string AlterPackageCompileOption = "AlterPackageCompileOption";
			public const string AlterPackageOption = "AlterPackageOption";
			public const string AlterProcedure = "AlterProcedure";
			public const string AlterProfile = "AlterProfile";
			public const string AlterProgramCompileOption = "AlterProgramCompileOption";
			public const string AlterProgramOption = "AlterProgramOption";
			public const string AlterQueryRewriteClause = "AlterQueryRewriteClause";
			public const string AlterQueryRewriteClauseOrCompileOrConsiderFresh = "AlterQueryRewriteClauseOrCompileOrConsiderFresh";
			public const string AlterResourceCost = "AlterResourceCost";
			public const string AlterRole = "AlterRole";
			public const string AlterRollbackSegment = "AlterRollbackSegment";
			public const string AlterRollbackSegmentOption = "AlterRollbackSegmentOption";
			public const string AlterSequence = "AlterSequence";
			public const string AlterSequenceOption = "AlterSequenceOption";
			public const string AlterSequenceOptions = "AlterSequenceOptions";
			public const string AlterSession = "AlterSession";
			public const string AlterSessionOption = "AlterSessionOption";
			public const string AlterSessionSetOptions = "AlterSessionSetOptions";
			public const string AlterSetOptionList = "AlterSetOptionList";
			public const string AlterSingleOrMultipleUsers = "AlterSingleOrMultipleUsers";
			public const string AlterSingleUserOption = "AlterSingleUserOption";
			public const string AlterSingleUserOptionList = "AlterSingleUserOptionList";
			public const string AlterStatement = "AlterStatement";
			public const string AlterSynonym = "AlterSynonym";
			public const string AlterSynonymOption = "AlterSynonymOption";
			public const string AlterSystem = "AlterSystem";
			public const string AlterSystemDumpOption = "AlterSystemDumpOption";
			public const string AlterSystemFlushOption = "AlterSystemFlushOption";
			public const string AlterSystemOption = "AlterSystemOption";
			public const string AlterSystemResetClause = "AlterSystemResetClause";
			public const string AlterSystemResetClauseList = "AlterSystemResetClauseList";
			public const string AlterSystemResetClauseOption = "AlterSystemResetClauseOption";
			public const string AlterSystemResetClauseOptions = "AlterSystemResetClauseOptions";
			public const string AlterTable = "AlterTable";
			public const string AlterTableChainedOption = "AlterTableChainedOption";
			public const string AlterTableChainedOptions = "AlterTableChainedOptions";
			public const string AlterTableColumnClauses = "AlterTableColumnClauses";
			public const string AlterTableEnableDisableOption = "AlterTableEnableDisableOption";
			public const string AlterTableEnableDisableOptions = "AlterTableEnableDisableOptions";
			public const string AlterTableOption = "AlterTableOption";
			public const string AlterTableProperties = "AlterTableProperties";
			public const string AlterTablespace = "AlterTablespace";
			public const string AlterTablespaceOption = "AlterTablespaceOption";
			public const string AlterTableStandardProperty = "AlterTableStandardProperty";
			public const string AlterTableStandardPropertyList = "AlterTableStandardPropertyList";
			public const string AlterTrigger = "AlterTrigger";
			public const string AlterTriggerOption = "AlterTriggerOption";
			public const string AlterType = "AlterType";
			public const string AlterTypeClause = "AlterTypeClause";
			public const string AlterTypeOption = "AlterTypeOption";
			public const string AlterUser = "AlterUser";
			public const string AlterView = "AlterView";
			public const string AlterViewOption = "AlterViewOption";
			public const string AnalyticClause = "AnalyticClause";
			public const string AnalyticFunction = "AnalyticFunction";
			public const string AnalyticFunctionCall = "AnalyticFunctionCall";
			public const string AnalyticOrKeepClauseOrModelAggregateFunctionExpression = "AnalyticOrKeepClauseOrModelAggregateFunctionExpression";
			public const string AnalyzedObject = "AnalyzedObject";
			public const string AnalyzeOption = "AnalyzeOption";
			public const string AnalyzeStatement = "AnalyzeStatement";
			public const string AnalyzeStatisticsForClause = "AnalyzeStatisticsForClause";
			public const string AnalyzeStatisticsForClauseOption = "AnalyzeStatisticsForClauseOption";
			public const string AnalyzeValidateCascadeClause = "AnalyzeValidateCascadeClause";
			public const string AnalyzeValidateCascadeOption = "AnalyzeValidateCascadeOption";
			public const string AnalyzeValidateOption = "AnalyzeValidateOption";
			public const string AndOrKeepDatafiles = "AndOrKeepDatafiles";
			public const string AndQuotedStringLiteral = "AndQuotedStringLiteral";
			public const string AnyChainedList = "AnyChainedList";
			public const string ArchiveLogOption = "ArchiveLogOption";
			public const string AsAliasOrEvaluatedNameExpression = "AsAliasOrEvaluatedNameExpression";
			public const string AsDataType = "AsDataType";
			public const string AssignmentOperatorOrDefault = "AssignmentOperatorOrDefault";
			public const string AssignmentStatementTarget = "AssignmentStatementTarget";
			public const string AssignmentTriggerReferenceTarget = "AssignmentTriggerReferenceTarget";
			public const string AssociativeArrayIndexType = "AssociativeArrayIndexType";
			public const string AssociativeArrayTypeDefinition = "AssociativeArrayTypeDefinition";
			public const string AsStringLiteral = "AsStringLiteral";
			public const string AsSubquery = "AsSubquery";
			public const string AsXmlAlias = "AsXmlAlias";
			public const string AtributeDataType = "AtributeDataType";
			public const string AttributeClusteringClause = "AttributeClusteringClause";
			public const string AttributeClusteringJoinTableOnEquijoinConditionList = "AttributeClusteringJoinTableOnEquijoinConditionList";
			public const string AttributeDataTypeList = "AttributeDataTypeList";
			public const string AttributeDataTypeListChained = "AttributeDataTypeListChained";
			public const string AttributeWithOptionalDataTypeOrParenthesisEnclosedAttributeDataTypeList = "AttributeWithOptionalDataTypeOrParenthesisEnclosedAttributeDataTypeList";
			public const string AuthenticationRequired = "AuthenticationRequired";
			public const string AutoExtendClause = "AutoExtendClause";
			public const string AutoExtendOption = "AutoExtendOption";
			public const string AutomaticOrSequential = "AutomaticOrSequential";
			public const string AutomaticOrSequentialOrder = "AutomaticOrSequentialOrder";
			public const string AutoOrManual = "AutoOrManual";
			public const string BackwardCompatibilityCompressionType = "BackwardCompatibilityCompressionType";
			public const string BasicFileOrSecureFile = "BasicFileOrSecureFile";
			public const string BasicOrAdvanced = "BasicOrAdvanced";
			public const string BeforeOrAfter = "BeforeOrAfter";
			public const string BetweenFollowingClause = "BetweenFollowingClause";
			public const string BetweenPrecedingAndFollowingClause = "BetweenPrecedingAndFollowingClause";
			public const string BetweenPrecedingClause = "BetweenPrecedingClause";
			public const string BetweenSystemChangeNumberOrTimestamp = "BetweenSystemChangeNumberOrTimestamp";
			public const string BetweenSystemChangeNumberOrTimestampOrPeriodForBetween = "BetweenSystemChangeNumberOrTimestampOrPeriodForBetween";
			public const string BigFileOrSmallFile = "BigFileOrSmallFile";
			public const string BindArgumentList = "BindArgumentList";
			public const string BindArgumentListChained = "BindArgumentListChained";
			public const string BindVariableExpression = "BindVariableExpression";
			public const string BindVariableExpressionOrPlSqlTarget = "BindVariableExpressionOrPlSqlTarget";
			public const string BindVariableExpressionOrPlSqlTargetCommaChainedList = "BindVariableExpressionOrPlSqlTargetCommaChainedList";
			public const string BindVariableExpressionOrPlSqlTargetList = "BindVariableExpressionOrPlSqlTargetList";
			public const string BlockSizeClause = "BlockSizeClause";
			public const string BufferPoolType = "BufferPoolType";
			public const string BuiltInDataType = "BuiltInDataType";
			public const string BulkCollect = "BulkCollect";
			public const string ByteOrChar = "ByteOrChar";
			public const string BytesOrCharacters = "BytesOrCharacters";
			public const string ByValue = "ByValue";
			public const string CacheOrNoCache = "CacheOrNoCache";
			public const string CallIntoClause = "CallIntoClause";
			public const string CallSpecification = "CallSpecification";
			public const string CallStatement = "CallStatement";
			public const string CascadeConstraints = "CascadeConstraints";
			public const string CascadeOrSetNull = "CascadeOrSetNull";
			public const string CaseExpression = "CaseExpression";
			public const string CaseExpressionElseBranch = "CaseExpressionElseBranch";
			public const string CastFunctionParameterClause = "CastFunctionParameterClause";
			public const string CastOrXmlCast = "CastOrXmlCast";
			public const string CastOrXmlCastFunction = "CastOrXmlCastFunction";
			public const string CellAssignment = "CellAssignment";
			public const string CellReferenceOptions = "CellReferenceOptions";
			public const string ChainedCondition = "ChainedCondition";
			public const string ChainedModifyColumnPropertiesOrModifyVirtualColumnPropertiesOrModifyColumnVisibility = "ChainedModifyColumnPropertiesOrModifyVirtualColumnPropertiesOrModifyColumnVisibility";
			public const string ChainedVirtualColumnDefinitionOrColumnDefinition = "ChainedVirtualColumnDefinitionOrColumnDefinition";
			public const string CharacterCodeFunction = "CharacterCodeFunction";
			public const string CharacterCodeParameterClause = "CharacterCodeParameterClause";
			public const string CharacterOrChar = "CharacterOrChar";
			public const string CheckOrNoCheck = "CheckOrNoCheck";
			public const string CheckpointNumber = "CheckpointNumber";
			public const string ClusterClause = "ClusterClause";
			public const string ClusterColumnDefinitionList = "ClusterColumnDefinitionList";
			public const string ClusteringColumns = "ClusteringColumns";
			public const string ClusteringJoin = "ClusteringJoin";
			public const string ClusteringWhen = "ClusteringWhen";
			public const string ClusterPhysicalProperties = "ClusterPhysicalProperties";
			public const string ClusterProperties = "ClusterProperties";
			public const string ClusterProperty = "ClusterProperty";
			public const string ClusterRangePartitions = "ClusterRangePartitions";
			public const string CollectionLimitOrElementType = "CollectionLimitOrElementType";
			public const string CollectionTypeDefinition = "CollectionTypeDefinition";
			public const string ColonOrMinusIntegerLiteral = "ColonOrMinusIntegerLiteral";
			public const string ColumnAsAlias = "ColumnAsAlias";
			public const string ColumnDefinition = "ColumnDefinition";
			public const string ColumnDefinitionDefaultClause = "ColumnDefinitionDefaultClause";
			public const string ColumnDefinitionDefaultClauseOrIdentityClause = "ColumnDefinitionDefaultClauseOrIdentityClause";
			public const string ColumnDefinitionDefaultClauseOrIdentityClauseOrDropIdentity = "ColumnDefinitionDefaultClauseOrIdentityClauseOrDropIdentity";
			public const string ColumnDefinitionEncryptionClause = "ColumnDefinitionEncryptionClause";
			public const string ColumnDefinitionEncryptionClauseOrDecrypt = "ColumnDefinitionEncryptionClauseOrDecrypt";
			public const string ColumnDefinitionIdentityClause = "ColumnDefinitionIdentityClause";
			public const string ColumnDefinitionInlineConstraintDefinition = "ColumnDefinitionInlineConstraintDefinition";
			public const string ColumnIdentifierChainedList = "ColumnIdentifierChainedList";
			public const string ColumnModification = "ColumnModification";
			public const string ColumnProperties = "ColumnProperties";
			public const string ColumnProperty = "ColumnProperty";
			public const string ColumnReference = "ColumnReference";
			public const string ColumnSizeSpecificationList = "ColumnSizeSpecificationList";
			public const string ColumnStoreCompressionType = "ColumnStoreCompressionType";
			public const string CommaChainedAliasedExpressionList = "CommaChainedAliasedExpressionList";
			public const string CommaChainedAttributeClusteringJoinTableOnEquijoinConditionList = "CommaChainedAttributeClusteringJoinTableOnEquijoinConditionList";
			public const string CommaChainedClusterColumnDefinition = "CommaChainedClusterColumnDefinition";
			public const string CommaChainedConditionOrExpression = "CommaChainedConditionOrExpression";
			public const string CommaChainedConditionOrExpressionOrSingleColumnForLoopList = "CommaChainedConditionOrExpressionOrSingleColumnForLoopList";
			public const string CommaChainedExpressionWithAlias = "CommaChainedExpressionWithAlias";
			public const string CommaChainedExternalTableFileLocation = "CommaChainedExternalTableFileLocation";
			public const string CommaChainedIndividualHashSubpartitionList = "CommaChainedIndividualHashSubpartitionList";
			public const string CommaChainedIndividualListSubpartitionList = "CommaChainedIndividualListSubpartitionList";
			public const string CommaChainedIndividualRangeSubpartitionList = "CommaChainedIndividualRangeSubpartitionList";
			public const string CommaChainedJsonColumnDefinitionList = "CommaChainedJsonColumnDefinitionList";
			public const string CommaChainedLargeObjectPartitionStorageList = "CommaChainedLargeObjectPartitionStorageList";
			public const string CommaChainedListPartitionDescriptionList = "CommaChainedListPartitionDescriptionList";
			public const string CommaChainedListPartitionList = "CommaChainedListPartitionList";
			public const string CommaChainedLiteralList = "CommaChainedLiteralList";
			public const string CommaChainedLockTableList = "CommaChainedLockTableList";
			public const string CommaChainedMaterializedViewLogSpecialColumn = "CommaChainedMaterializedViewLogSpecialColumn";
			public const string CommaChainedModelRulesClauseAssignmentList = "CommaChainedModelRulesClauseAssignmentList";
			public const string CommaChainedParenthesisEnclosedIdentifierList = "CommaChainedParenthesisEnclosedIdentifierList";
			public const string CommaChainedParenthesisEnclosedLiteralList = "CommaChainedParenthesisEnclosedLiteralList";
			public const string CommaChainedRangePartitionDescriptionList = "CommaChainedRangePartitionDescriptionList";
			public const string CommaChainedRangePartitionList = "CommaChainedRangePartitionList";
			public const string CommaChainedReferencePartitionDescriptionList = "CommaChainedReferencePartitionDescriptionList";
			public const string CommaChainedRelationalProperty = "CommaChainedRelationalProperty";
			public const string CommaChainedRestrictReferencesPragma = "CommaChainedRestrictReferencesPragma";
			public const string CommaChainedSingleColumnForLoopList = "CommaChainedSingleColumnForLoopList";
			public const string CommaChainedSupplementalLogColumn = "CommaChainedSupplementalLogColumn";
			public const string CommaChainedSupplementalLogKeyList = "CommaChainedSupplementalLogKeyList";
			public const string CommaChainedTableIndexExpressionList = "CommaChainedTableIndexExpressionList";
			public const string CommaChainedViewRelationalProperty = "CommaChainedViewRelationalProperty";
			public const string CommaPrefixedXmlAttributesClause = "CommaPrefixedXmlAttributesClause";
			public const string CommaSeparatedValueOptions = "CommaSeparatedValueOptions";
			public const string CommentStatement = "CommentStatement";
			public const string CommitComment = "CommitComment";
			public const string CommitCommentOrWriteOrForce = "CommitCommentOrWriteOrForce";
			public const string CommitOrRollbackOrNothing = "CommitOrRollbackOrNothing";
			public const string CommitSetScn = "CommitSetScn";
			public const string CommitStatement = "CommitStatement";
			public const string CommitWriteClause = "CommitWriteClause";
			public const string CommonProgramModifier = "CommonProgramModifier";
			public const string CommonSequenceOption = "CommonSequenceOption";
			public const string CommonTableExpression = "CommonTableExpression";
			public const string CommonTableExpressionList = "CommonTableExpressionList";
			public const string CommonTableExpressionListChained = "CommonTableExpressionListChained";
			public const string CompoundOfDmlTrigger = "CompoundOfDmlTrigger";
			public const string CompoundTriggerBlock = "CompoundTriggerBlock";
			public const string ConcatenatedSubquery = "ConcatenatedSubquery";
			public const string Condition = "Condition";
			public const string ConditionalInsertClause = "ConditionalInsertClause";
			public const string ConditionalInsertConditionBranch = "ConditionalInsertConditionBranch";
			public const string ConditionalInsertElseBranch = "ConditionalInsertElseBranch";
			public const string ConditionOrExpression = "ConditionOrExpression";
			public const string ConditionOrExpressionList = "ConditionOrExpressionList";
			public const string ConditionOrExpressionListOrSingleColumnForLoopListOrMultiColumnForLoop = "ConditionOrExpressionListOrSingleColumnForLoopListOrMultiColumnForLoop";
			public const string ConditionOrExpressionOrSingleColumnForLoopList = "ConditionOrExpressionOrSingleColumnForLoopList";
			public const string ConstantDeclaration = "ConstantDeclaration";
			public const string ConstraintClauses = "ConstraintClauses";
			public const string ConstraintName = "ConstraintName";
			public const string ConstraintOnDeleteClause = "ConstraintOnDeleteClause";
			public const string ConstraintOrConstraints = "ConstraintOrConstraints";
			public const string ConstraintReferencesClause = "ConstraintReferencesClause";
			public const string ConstraintState = "ConstraintState";
			public const string ConstraintStateExceptionClause = "ConstraintStateExceptionClause";
			public const string ConstructorDeclaration = "ConstructorDeclaration";
			public const string ConstructorSpecification = "ConstructorSpecification";
			public const string ContainerDatabaseOption = "ContainerDatabaseOption";
			public const string ContainerDataClause = "ContainerDataClause";
			public const string CountAsteriskParameter = "CountAsteriskParameter";
			public const string CreateCluster = "CreateCluster";
			public const string CreateDatabaseLink = "CreateDatabaseLink";
			public const string CreateDirectory = "CreateDirectory";
			public const string CreateFunction = "CreateFunction";
			public const string CreateIndex = "CreateIndex";
			public const string CreateMaterializedViewLog = "CreateMaterializedViewLog";
			public const string CreatePackage = "CreatePackage";
			public const string CreatePackageBody = "CreatePackageBody";
			public const string CreateParameterFile = "CreateParameterFile";
			public const string CreatePlSqlObjectClause = "CreatePlSqlObjectClause";
			public const string CreatePlSqlStatement = "CreatePlSqlStatement";
			public const string CreateProcedure = "CreateProcedure";
			public const string CreateProfile = "CreateProfile";
			public const string CreateRestorePoint = "CreateRestorePoint";
			public const string CreateRole = "CreateRole";
			public const string CreateRoleIdentificationType = "CreateRoleIdentificationType";
			public const string CreateRollbackSegment = "CreateRollbackSegment";
			public const string CreateRollbackSegmentOption = "CreateRollbackSegmentOption";
			public const string CreateRollbackSegmentOptionList = "CreateRollbackSegmentOptionList";
			public const string CreateSchemaAuthorization = "CreateSchemaAuthorization";
			public const string CreateSequence = "CreateSequence";
			public const string CreateSequenceOption = "CreateSequenceOption";
			public const string CreateServerParameterFile = "CreateServerParameterFile";
			public const string CreateSqlObjectClause = "CreateSqlObjectClause";
			public const string CreateSqlStatement = "CreateSqlStatement";
			public const string CreateSynonym = "CreateSynonym";
			public const string CreateTable = "CreateTable";
			public const string CreateTablespace = "CreateTablespace";
			public const string CreateTableTypeClause = "CreateTableTypeClause";
			public const string CreateTrigger = "CreateTrigger";
			public const string CreateType = "CreateType";
			public const string CreateTypeBody = "CreateTypeBody";
			public const string CreateUser = "CreateUser";
			public const string CreateUserIdentificationType = "CreateUserIdentificationType";
			public const string CreateUserOption = "CreateUserOption";
			public const string CreateUserOptionList = "CreateUserOptionList";
			public const string CreateView = "CreateView";
			public const string CreateViewTypeClause = "CreateViewTypeClause";
			public const string CrossOrOuter = "CrossOrOuter";
			public const string CrossOrOuterApplyClause = "CrossOrOuterApplyClause";
			public const string CurrentEditionOrSpecificEdition = "CurrentEditionOrSpecificEdition";
			public const string CurrentOfCursorIdentifier = "CurrentOfCursorIdentifier";
			public const string CurrentOrAll = "CurrentOrAll";
			public const string CurrentUserOrDefiner = "CurrentUserOrDefiner";
			public const string CursorBooleanFunction = "CursorBooleanFunction";
			public const string CursorDeclaration = "CursorDeclaration";
			public const string CursorDefinition = "CursorDefinition";
			public const string CursorParameterDeclaration = "CursorParameterDeclaration";
			public const string CursorParameterDeclarationList = "CursorParameterDeclarationList";
			public const string CursorParameterDeclarationListChained = "CursorParameterDeclarationListChained";
			public const string CursorSource = "CursorSource";
			public const string CycleOrNoCycle = "CycleOrNoCycle";
			public const string DatabaseEvent = "DatabaseEvent";
			public const string DatabaseLink = "DatabaseLink";
			public const string DatabaseLinkAuthetication = "DatabaseLinkAuthetication";
			public const string DatabaseLinkConnectToOption = "DatabaseLinkConnectToOption";
			public const string DatabaseLinkDomain = "DatabaseLinkDomain";
			public const string DatabaseLinkInstance = "DatabaseLinkInstance";
			public const string DatabaseLinkName = "DatabaseLinkName";
			public const string DatabaseLinkOption = "DatabaseLinkOption";
			public const string DatabaseLinkOptionList = "DatabaseLinkOptionList";
			public const string DatabaseUserProxyClauses = "DatabaseUserProxyClauses";
			public const string DataDefinitionLanguageEvent = "DataDefinitionLanguageEvent";
			public const string DatafileOrTempfile = "DatafileOrTempfile";
			public const string DatafileOrTempfileSpecification = "DatafileOrTempfileSpecification";
			public const string DatafileSpecificationList = "DatafileSpecificationList";
			public const string DatafileTempfileClauses = "DatafileTempfileClauses";
			public const string DataManipulationLanguageOrDataDefinitionLanguageOrQuery = "DataManipulationLanguageOrDataDefinitionLanguageOrQuery";
			public const string DataPumpCompressionEnabledOrDisabled = "DataPumpCompressionEnabledOrDisabled";
			public const string DataPumpCompressionLevel = "DataPumpCompressionLevel";
			public const string DataPumpFormatSpecificationParameter = "DataPumpFormatSpecificationParameter";
			public const string DataPumpFormatSpecificationParameters = "DataPumpFormatSpecificationParameters";
			public const string DataPumpVersion = "DataPumpVersion";
			public const string DataSource = "DataSource";
			public const string DataSourceList = "DataSourceList";
			public const string DataSourceListChained = "DataSourceListChained";
			public const string DataType = "DataType";
			public const string DataTypeIntervalPrecisionAndScale = "DataTypeIntervalPrecisionAndScale";
			public const string DataTypeNumericPrecisionAndScale = "DataTypeNumericPrecisionAndScale";
			public const string DataTypeOrXmlType = "DataTypeOrXmlType";
			public const string DataTypeSimplePrecision = "DataTypeSimplePrecision";
			public const string DataTypeSimplePrecisionOrVaryingSize = "DataTypeSimplePrecisionOrVaryingSize";
			public const string DataTypeSpecification = "DataTypeSpecification";
			public const string DataTypeVarcharSimplePrecision = "DataTypeVarcharSimplePrecision";
			public const string DataTypeVarcharSimplePrecisionOrVaryingSize = "DataTypeVarcharSimplePrecisionOrVaryingSize";
			public const string DateFormatMask = "DateFormatMask";
			public const string DateFormatSpecification = "DateFormatSpecification";
			public const string DateFormatType = "DateFormatType";
			public const string DateOrTimestamp = "DateOrTimestamp";
			public const string DateOrTimestampMask = "DateOrTimestampMask";
			public const string DateOrTimestampSpecification = "DateOrTimestampSpecification";
			public const string DayOrHourOrMinute = "DayOrHourOrMinute";
			public const string DayOrHourOrMinuteOrSecondWithLeadingPrecision = "DayOrHourOrMinuteOrSecondWithLeadingPrecision";
			public const string DayOrHourOrMinuteOrSecondWithPrecision = "DayOrHourOrMinuteOrSecondWithPrecision";
			public const string DeallocateUnusedClause = "DeallocateUnusedClause";
			public const string DecimalOrZoned = "DecimalOrZoned";
			public const string DefaultExpression = "DefaultExpression";
			public const string DefaultNamespace = "DefaultNamespace";
			public const string DefaultOrExpressionList = "DefaultOrExpressionList";
			public const string DefaultOrForce = "DefaultOrForce";
			public const string DefaultOrIdentifier = "DefaultOrIdentifier";
			public const string DefaultRoleOption = "DefaultRoleOption";
			public const string DeferrableState = "DeferrableState";
			public const string DeleteOrEnableOrDisable = "DeleteOrEnableOrDisable";
			public const string DeleteOrPreserve = "DeleteOrPreserve";
			public const string DeleteStatement = "DeleteStatement";
			public const string DelimiterSpecification = "DelimiterSpecification";
			public const string DemandOrCommit = "DemandOrCommit";
			public const string DependentHandlingClause = "DependentHandlingClause";
			public const string DepthOrBreadth = "DepthOrBreadth";
			public const string DirectInputOutputOrNoDirectInputOutput = "DirectInputOutputOrNoDirectInputOutput";
			public const string DirectoryPrefix = "DirectoryPrefix";
			public const string DistinctModifier = "DistinctModifier";
			public const string DmlEventClause = "DmlEventClause";
			public const string DmlEventType = "DmlEventType";
			public const string DmlEventTypeList = "DmlEventTypeList";
			public const string DmlEventTypeListChained = "DmlEventTypeListChained";
			public const string DmlStatement = "DmlStatement";
			public const string DmlTableExpressionClause = "DmlTableExpressionClause";
			public const string DocumentOrContent = "DocumentOrContent";
			public const string DomainIndexClauseOrXmlIndexClause = "DomainIndexClauseOrXmlIndexClause";
			public const string DotRecordAttributeChained = "DotRecordAttributeChained";
			public const string DropCluster = "DropCluster";
			public const string DropColumnClause = "DropColumnClause";
			public const string DropColumnOption = "DropColumnOption";
			public const string DropConstraintClause = "DropConstraintClause";
			public const string DropContext = "DropContext";
			public const string DropDatabaseLink = "DropDatabaseLink";
			public const string DropIndex = "DropIndex";
			public const string DropMaterializedView = "DropMaterializedView";
			public const string DropMaterializedViewLog = "DropMaterializedViewLog";
			public const string DropObjectClause = "DropObjectClause";
			public const string DropOther = "DropOther";
			public const string DropPackage = "DropPackage";
			public const string DropPeriodClause = "DropPeriodClause";
			public const string DropStatement = "DropStatement";
			public const string DropSupplementalLoggingProperties = "DropSupplementalLoggingProperties";
			public const string DropSupplementalLogList = "DropSupplementalLogList";
			public const string DropSupplementalLogListChained = "DropSupplementalLogListChained";
			public const string DropSynonym = "DropSynonym";
			public const string DropTable = "DropTable";
			public const string DropTablespace = "DropTablespace";
			public const string DropTablespaceIncludingContentsClause = "DropTablespaceIncludingContentsClause";
			public const string DropType = "DropType";
			public const string DropUser = "DropUser";
			public const string DropView = "DropView";
			public const string DumpBlockSpecification = "DumpBlockSpecification";
			public const string DumpLogfileOption = "DumpLogfileOption";
			public const string DumpMinBlock = "DumpMinBlock";
			public const string DynamicReturningClause = "DynamicReturningClause";
			public const string EachRowOrStatement = "EachRowOrStatement";
			public const string EditionableOrNonEditionable = "EditionableOrNonEditionable";
			public const string ElementSpecification = "ElementSpecification";
			public const string ElementSpecificationList = "ElementSpecificationList";
			public const string ElementSpecificationListChained = "ElementSpecificationListChained";
			public const string ElementType = "ElementType";
			public const string EnableDisableClause = "EnableDisableClause";
			public const string EnableDisableClauseList = "EnableDisableClauseList";
			public const string EnableDisableConstraintType = "EnableDisableConstraintType";
			public const string EnabledOrDisabled = "EnabledOrDisabled";
			public const string EnableOrDisable = "EnableOrDisable";
			public const string EnableOrDisableOrForce = "EnableOrDisableOrForce";
			public const string EnableOrDisableTriggers = "EnableOrDisableTriggers";
			public const string EnclosedByClause = "EnclosedByClause";
			public const string EncryptionKeyOption = "EncryptionKeyOption";
			public const string EncryptionSalt = "EncryptionSalt";
			public const string EncryptionWalletOption = "EncryptionWalletOption";
			public const string EndTimingPoint = "EndTimingPoint";
			public const string EntityEscapingOrNoEntityEscaping = "EntityEscapingOrNoEntityEscaping";
			public const string ErrorLoggingClause = "ErrorLoggingClause";
			public const string ErrorLoggingIntoObject = "ErrorLoggingIntoObject";
			public const string ErrorLoggingRejectLimit = "ErrorLoggingRejectLimit";
			public const string ErrorNullOrDefaultStringLiteral = "ErrorNullOrDefaultStringLiteral";
			public const string ErrorOrNullOrEmpty = "ErrorOrNullOrEmpty";
			public const string ErrorOrTrueOrFalse = "ErrorOrTrueOrFalse";
			public const string EscapeClause = "EscapeClause";
			public const string EstimateStatisticsSampleClause = "EstimateStatisticsSampleClause";
			public const string EvaluationEdition = "EvaluationEdition";
			public const string EvaluationEditionClause = "EvaluationEditionClause";
			public const string ExceptionDeclaration = "ExceptionDeclaration";
			public const string ExceptionIdentifierList = "ExceptionIdentifierList";
			public const string ExceptionIdentifierListChained = "ExceptionIdentifierListChained";
			public const string ExceptRoleList = "ExceptRoleList";
			public const string ExplainPlanStatement = "ExplainPlanStatement";
			public const string ExplicitPhysicalOrganization = "ExplicitPhysicalOrganization";
			public const string ExplicitPhysicalOrganizationType = "ExplicitPhysicalOrganizationType";
			public const string Expression = "Expression";
			public const string ExpressionAsXmlAlias = "ExpressionAsXmlAlias";
			public const string ExpressionAsXmlAliasList = "ExpressionAsXmlAliasList";
			public const string ExpressionAsXmlAliasListChained = "ExpressionAsXmlAliasListChained";
			public const string ExpressionAsXmlAliasWithMandatoryAsList = "ExpressionAsXmlAliasWithMandatoryAsList";
			public const string ExpressionAsXmlAliasWithMandatoryAsListChained = "ExpressionAsXmlAliasWithMandatoryAsListChained";
			public const string ExpressionBooleanNotExtension = "ExpressionBooleanNotExtension";
			public const string ExpressionCommaChainedList = "ExpressionCommaChainedList";
			public const string ExpressionIsNullNaNOrInfinite = "ExpressionIsNullNaNOrInfinite";
			public const string ExpressionList = "ExpressionList";
			public const string ExpressionListOrNestedQuery = "ExpressionListOrNestedQuery";
			public const string ExpressionMathOperatorChainedList = "ExpressionMathOperatorChainedList";
			public const string ExpressionOrDefaultValue = "ExpressionOrDefaultValue";
			public const string ExpressionOrDefaultValueList = "ExpressionOrDefaultValueList";
			public const string ExpressionOrDefaultValueListChained = "ExpressionOrDefaultValueListChained";
			public const string ExpressionOrMultiset = "ExpressionOrMultiset";
			public const string ExpressionOrNestedQuery = "ExpressionOrNestedQuery";
			public const string ExpressionOrNestedQueryOrDefaultValue = "ExpressionOrNestedQueryOrDefaultValue";
			public const string ExpressionOrParenthesisEnclosedExpressionListOrNestedQuery = "ExpressionOrParenthesisEnclosedExpressionListOrNestedQuery";
			public const string ExpressionOrParenthesisEnclosedExpressionListWithMandatoryExpressions = "ExpressionOrParenthesisEnclosedExpressionListWithMandatoryExpressions";
			public const string ExpressionOrUnlimitedOrDefault = "ExpressionOrUnlimitedOrDefault";
			public const string ExtentManagementClause = "ExtentManagementClause";
			public const string ExternalSpecificationOrPrecisionAndScale = "ExternalSpecificationOrPrecisionAndScale";
			public const string ExternalTableAccessDriver = "ExternalTableAccessDriver";
			public const string ExternalTableAccessDriverType = "ExternalTableAccessDriverType";
			public const string ExternalTableAccessParameters = "ExternalTableAccessParameters";
			public const string ExternalTableColumnTransform = "ExternalTableColumnTransform";
			public const string ExternalTableColumnTransformLargeObjectFileAttributeList = "ExternalTableColumnTransformLargeObjectFileAttributeList";
			public const string ExternalTableColumnTransformList = "ExternalTableColumnTransformList";
			public const string ExternalTableColumnTransformListChained = "ExternalTableColumnTransformListChained";
			public const string ExternalTableColumnTransforms = "ExternalTableColumnTransforms";
			public const string ExternalTableColumnTransformType = "ExternalTableColumnTransformType";
			public const string ExternalTableCondition = "ExternalTableCondition";
			public const string ExternalTableConditionChained = "ExternalTableConditionChained";
			public const string ExternalTableConditionLogicalOperator = "ExternalTableConditionLogicalOperator";
			public const string ExternalTableDataPropeties = "ExternalTableDataPropeties";
			public const string ExternalTableField = "ExternalTableField";
			public const string ExternalTableFieldDefinitions = "ExternalTableFieldDefinitions";
			public const string ExternalTableFieldList = "ExternalTableFieldList";
			public const string ExternalTableFieldListChained = "ExternalTableFieldListChained";
			public const string ExternalTableFieldTypeYearToMonthOrDayToSecond = "ExternalTableFieldTypeYearToMonthOrDayToSecond";
			public const string ExternalTableFileLocation = "ExternalTableFileLocation";
			public const string ExternalTableRecordFormatInfo = "ExternalTableRecordFormatInfo";
			public const string ExternalTableRecordType = "ExternalTableRecordType";
			public const string ExtractElement = "ExtractElement";
			public const string ExtractFunction = "ExtractFunction";
			public const string ExtractFunctionParameterClause = "ExtractFunctionParameterClause";
			public const string FastOrCompleteOrForce = "FastOrCompleteOrForce";
			public const string FieldDefinition = "FieldDefinition";
			public const string FieldDefinitionList = "FieldDefinitionList";
			public const string FieldDefinitionListChained = "FieldDefinitionListChained";
			public const string FieldIdentifierOrConstantStringList = "FieldIdentifierOrConstantStringList";
			public const string FieldIdentifierOrConstantStringListChained = "FieldIdentifierOrConstantStringListChained";
			public const string FieldNameOption = "FieldNameOption";
			public const string FileSpecificationList = "FileSpecificationList";
			public const string FileSpecificationListChained = "FileSpecificationListChained";
			public const string FirstOrAll = "FirstOrAll";
			public const string FirstOrLast = "FirstOrLast";
			public const string FirstOrNext = "FirstOrNext";
			public const string FlashbackArchiveClause = "FlashbackArchiveClause";
			public const string FlashbackAsOfClause = "FlashbackAsOfClause";
			public const string FlashbackDatabaseBeforeOption = "FlashbackDatabaseBeforeOption";
			public const string FlashbackDatabaseOption = "FlashbackDatabaseOption";
			public const string FlashbackMaximumValue = "FlashbackMaximumValue";
			public const string FlashbackMinimumValue = "FlashbackMinimumValue";
			public const string FlashbackModeClause = "FlashbackModeClause";
			public const string FlashbackOption = "FlashbackOption";
			public const string FlashbackPeriodFor = "FlashbackPeriodFor";
			public const string FlashbackQueryClause = "FlashbackQueryClause";
			public const string FlashbackStatement = "FlashbackStatement";
			public const string FlashbackTableOption = "FlashbackTableOption";
			public const string FlashbackVersionsClause = "FlashbackVersionsClause";
			public const string FlashCachePoolType = "FlashCachePoolType";
			public const string ForAllBoundsClause = "ForAllBoundsClause";
			public const string ForAllIndicesBoundsBetweenCondition = "ForAllIndicesBoundsBetweenCondition";
			public const string ForceExceptionsClause = "ForceExceptionsClause";
			public const string ForceOrValidate = "ForceOrValidate";
			public const string ForceTransactionIdentifier = "ForceTransactionIdentifier";
			public const string ForContainerDataObject = "ForContainerDataObject";
			public const string ForEachRow = "ForEachRow";
			public const string FormatJson = "FormatJson";
			public const string ForObjectTypes = "ForObjectTypes";
			public const string ForUpdateClause = "ForUpdateClause";
			public const string ForUpdateColumn = "ForUpdateColumn";
			public const string ForUpdateColumnChained = "ForUpdateColumnChained";
			public const string ForUpdateLockingClause = "ForUpdateLockingClause";
			public const string ForUpdateOfColumnsClause = "ForUpdateOfColumnsClause";
			public const string ForUpdateWaitClause = "ForUpdateWaitClause";
			public const string ForwardOrReverse = "ForwardOrReverse";
			public const string FromClause = "FromClause";
			public const string FromClauseChained = "FromClauseChained";
			public const string FunctionDeclaration = "FunctionDeclaration";
			public const string FunctionDeclarationInType = "FunctionDeclarationInType";
			public const string FunctionDeclarationModifier = "FunctionDeclarationModifier";
			public const string FunctionDeclarationModifiers = "FunctionDeclarationModifiers";
			public const string FunctionDefinition = "FunctionDefinition";
			public const string FunctionDefinitionModifier = "FunctionDefinitionModifier";
			public const string FunctionDefinitionModifiers = "FunctionDefinitionModifiers";
			public const string FunctionHeading = "FunctionHeading";
			public const string FunctionModifier = "FunctionModifier";
			public const string FunctionModifierInType = "FunctionModifierInType";
			public const string FunctionModifierListInType = "FunctionModifierListInType";
			public const string FunctionModifiers = "FunctionModifiers";
			public const string FunctionSpecification = "FunctionSpecification";
			public const string FunctionTypeDefinition = "FunctionTypeDefinition";
			public const string GeneratedAlways = "GeneratedAlways";
			public const string GlobalTemporary = "GlobalTemporary";
			public const string GranteeClause = "GranteeClause";
			public const string GranteeClauseChained = "GranteeClauseChained";
			public const string GranteeType = "GranteeType";
			public const string GrantObjectPrivilegeDefinition = "GrantObjectPrivilegeDefinition";
			public const string GrantObjectPrivileges = "GrantObjectPrivileges";
			public const string GrantStatement = "GrantStatement";
			public const string GrantSystemPrivileges = "GrantSystemPrivileges";
			public const string GrantSystemPrivilegesOrObjectPrivileges = "GrantSystemPrivilegesOrObjectPrivileges";
			public const string GroupByClause = "GroupByClause";
			public const string GroupingClause = "GroupingClause";
			public const string GroupingClauseChained = "GroupingClauseChained";
			public const string GroupingExpressionList = "GroupingExpressionList";
			public const string GroupingExpressionListChained = "GroupingExpressionListChained";
			public const string GroupingExpressionListOrNestedQuery = "GroupingExpressionListOrNestedQuery";
			public const string GroupingExpressionListOrRollupCubeClause = "GroupingExpressionListOrRollupCubeClause";
			public const string GroupingExpressionListOrRollupCubeClauseChained = "GroupingExpressionListOrRollupCubeClauseChained";
			public const string GroupingExpressionListWithMandatoryExpressions = "GroupingExpressionListWithMandatoryExpressions";
			public const string GroupingExpressionListWithMandatoryExpressionsChained = "GroupingExpressionListWithMandatoryExpressionsChained";
			public const string GroupingSetsClause = "GroupingSetsClause";
			public const string GuaranteeOrNoGuarantee = "GuaranteeOrNoGuarantee";
			public const string HashIsExpression = "HashIsExpression";
			public const string HashOrRange = "HashOrRange";
			public const string HashPartitions = "HashPartitions";
			public const string HashSubpartitionQuantity = "HashSubpartitionQuantity";
			public const string HashSubpartitionQuantityOrParenthesisEnclosedIndividualSubpartitionList = "HashSubpartitionQuantityOrParenthesisEnclosedIndividualSubpartitionList";
			public const string HashSubpartitionQuantityOrSubpartitionTemplate = "HashSubpartitionQuantityOrSubpartitionTemplate";
			public const string HavingClause = "HavingClause";
			public const string HeapTableSegmentAttributesClause = "HeapTableSegmentAttributesClause";
			public const string HideOrShowDefaults = "HideOrShowDefaults";
			public const string HierarchicalQueryClause = "HierarchicalQueryClause";
			public const string HierarchicalQueryConnectByClause = "HierarchicalQueryConnectByClause";
			public const string HierarchicalQueryStartWithClause = "HierarchicalQueryStartWithClause";
			public const string IdentifiedByClause = "IdentifiedByClause";
			public const string IdentifiedByDoubleQuotedStringLiteral = "IdentifiedByDoubleQuotedStringLiteral";
			public const string IdentifierList = "IdentifierList";
			public const string IdentifierOrDefault = "IdentifierOrDefault";
			public const string IdentifierOrNullOrDefault = "IdentifierOrNullOrDefault";
			public const string IdentifierOrParenthesisEnclosedIdentifierList = "IdentifierOrParenthesisEnclosedIdentifierList";
			public const string IdentifierOrPositionRange = "IdentifierOrPositionRange";
			public const string IdentifierOrStringLiteral = "IdentifierOrStringLiteral";
			public const string IdentifierOrStringLiteralListOrNumberLiteral = "IdentifierOrStringLiteralListOrNumberLiteral";
			public const string IdentityGeneratedAlwaysOrByDefault = "IdentityGeneratedAlwaysOrByDefault";
			public const string IdentityOption = "IdentityOption";
			public const string IdentityOptions = "IdentityOptions";
			public const string IgnoreOrKeep = "IgnoreOrKeep";
			public const string IgnoreOrKeepNonAvailableValues = "IgnoreOrKeepNonAvailableValues";
			public const string ImmediateOrBatch = "ImmediateOrBatch";
			public const string ImmediateOrDeferred = "ImmediateOrDeferred";
			public const string ImmediateOrNoReplay = "ImmediateOrNoReplay";
			public const string ImplicitHeapPhysicalOrganization = "ImplicitHeapPhysicalOrganization";
			public const string ImplicitHeapPhysicalOrganizationOrExplicitPhysicalOrganization = "ImplicitHeapPhysicalOrganizationOrExplicitPhysicalOrganization";
			public const string IncludeOrExclude = "IncludeOrExclude";
			public const string IncludingData = "IncludingData";
			public const string IncludingOrExcluding = "IncludingOrExcluding";
			public const string IncludingTableDataOrConvertToSubstitutable = "IncludingTableDataOrConvertToSubstitutable";
			public const string IncludingTables = "IncludingTables";
			public const string IncrementOrDecrement = "IncrementOrDecrement";
			public const string IndexAttribute = "IndexAttribute";
			public const string IndexAttributesOrPartitionedIndexList = "IndexAttributesOrPartitionedIndexList";
			public const string IndexCompression = "IndexCompression";
			public const string IndexCompressionPrefixOrAdvancedCompression = "IndexCompressionPrefixOrAdvancedCompression";
			public const string IndexingClause = "IndexingClause";
			public const string IndexOrganizedIncludingColumn = "IndexOrganizedIncludingColumn";
			public const string IndexOrganizedOverflowClause = "IndexOrganizedOverflowClause";
			public const string IndexOrganizedTableClause = "IndexOrganizedTableClause";
			public const string IndexOrganizedTableProperties = "IndexOrganizedTableProperties";
			public const string IndexOrganizedTableProperty = "IndexOrganizedTableProperty";
			public const string IndexProperties = "IndexProperties";
			public const string IndexTypeClause = "IndexTypeClause";
			public const string IndicatorVariableClause = "IndicatorVariableClause";
			public const string IndividualHashPartition = "IndividualHashPartition";
			public const string IndividualHashPartitionList = "IndividualHashPartitionList";
			public const string IndividualHashPartitionsOrHashPartitionsByQuantity = "IndividualHashPartitionsOrHashPartitionsByQuantity";
			public const string IndividualHashSubpartitionList = "IndividualHashSubpartitionList";
			public const string IndividualListSubpartitionList = "IndividualListSubpartitionList";
			public const string IndividualRangeSubpartitionList = "IndividualRangeSubpartitionList";
			public const string IndividualSubpartitionList = "IndividualSubpartitionList";
			public const string InformationLifecycleManagementClause = "InformationLifecycleManagementClause";
			public const string InformationLifecycleManagementPolicyAfterIntervalOrOnFunction = "InformationLifecycleManagementPolicyAfterIntervalOrOnFunction";
			public const string InformationLifecycleManagementPolicyClause = "InformationLifecycleManagementPolicyClause";
			public const string InformationLifecycleManagementPolicyOption = "InformationLifecycleManagementPolicyOption";
			public const string InformationLifecycleManagementPolicyPeriod = "InformationLifecycleManagementPolicyPeriod";
			public const string InformationLifecycleManagementPolicyTrigger = "InformationLifecycleManagementPolicyTrigger";
			public const string InheritanceClause = "InheritanceClause";
			public const string InheritanceClauses = "InheritanceClauses";
			public const string InheritanceOption = "InheritanceOption";
			public const string InitialDeferrableState = "InitialDeferrableState";
			public const string InitializationSpecification = "InitializationSpecification";
			public const string InlineConstraintType = "InlineConstraintType";
			public const string InlinePragma = "InlinePragma";
			public const string InMemoryClause = "InMemoryClause";
			public const string InMemoryColumnClause = "InMemoryColumnClause";
			public const string InMemoryColumnOptions = "InMemoryColumnOptions";
			public const string InMemoryDistribute = "InMemoryDistribute";
			public const string InMemoryDistributeOption = "InMemoryDistributeOption";
			public const string InMemoryDistributeOptions = "InMemoryDistributeOptions";
			public const string InMemoryDuplicate = "InMemoryDuplicate";
			public const string InMemoryMemoryCompression = "InMemoryMemoryCompression";
			public const string InMemoryMemoryCompressionType = "InMemoryMemoryCompressionType";
			public const string InMemoryParameter = "InMemoryParameter";
			public const string InMemoryParameters = "InMemoryParameters";
			public const string InMemoryPriority = "InMemoryPriority";
			public const string InMemoryPriorityOption = "InMemoryPriorityOption";
			public const string InMemoryTableClause = "InMemoryTableClause";
			public const string InnerJoinClause = "InnerJoinClause";
			public const string InnerSpecialTableReference = "InnerSpecialTableReference";
			public const string InnerTableReference = "InnerTableReference";
			public const string InParenthesisEnclosedLiteralListOrSubqueryOrWithinRange = "InParenthesisEnclosedLiteralListOrSubqueryOrWithinRange";
			public const string InsertIntoClause = "InsertIntoClause";
			public const string InsertIntoValuesChainedList = "InsertIntoValuesChainedList";
			public const string InsertStatement = "InsertStatement";
			public const string InsertValuesClause = "InsertValuesClause";
			public const string InsertValuesOrSubquery = "InsertValuesOrSubquery";
			public const string InstanceName = "InstanceName";
			public const string InstantiableOrFinal = "InstantiableOrFinal";
			public const string InstantiableOrFinalOptions = "InstantiableOrFinalOptions";
			public const string InsteadOfDmlTrigger = "InsteadOfDmlTrigger";
			public const string IntegerLiteralOrStringLiteral = "IntegerLiteralOrStringLiteral";
			public const string IntegerLiteralOrUnlimitedOrDefault = "IntegerLiteralOrUnlimitedOrDefault";
			public const string IntegerOrAsterisk = "IntegerOrAsterisk";
			public const string IntervalDayToSecond = "IntervalDayToSecond";
			public const string IntervalExpression = "IntervalExpression";
			public const string IntervalYearToMonth = "IntervalYearToMonth";
			public const string IntoClause = "IntoClause";
			public const string IntoPlanTable = "IntoPlanTable";
			public const string IntoVariableClause = "IntoVariableClause";
			public const string InvalidateAndOrCascadeConstraints = "InvalidateAndOrCascadeConstraints";
			public const string InvokerRightsClause = "InvokerRightsClause";
			public const string IsOrAs = "IsOrAs";
			public const string IsOrAsCallSpecification = "IsOrAsCallSpecification";
			public const string IsOrAsObjectOrUnderSuperType = "IsOrAsObjectOrUnderSuperType";
			public const string Item1 = "Item1";
			public const string Item1OrPragmaDefinition = "Item1OrPragmaDefinition";
			public const string Item2 = "Item2";
			public const string Item2OrPragmaDefinition = "Item2OrPragmaDefinition";
			public const string ItemDeclaration = "ItemDeclaration";
			public const string ItemList1 = "ItemList1";
			public const string ItemList1Chained = "ItemList1Chained";
			public const string ItemList2 = "ItemList2";
			public const string ItemList2Chained = "ItemList2Chained";
			public const string JoinClause = "JoinClause";
			public const string JoinColumnsOrCondition = "JoinColumnsOrCondition";
			public const string JsonColumnDefinition = "JsonColumnDefinition";
			public const string JsonColumnDefinitionList = "JsonColumnDefinitionList";
			public const string JsonColumnsClause = "JsonColumnsClause";
			public const string JsonDataType = "JsonDataType";
			public const string JsonExistsClause = "JsonExistsClause";
			public const string JsonExistsOnErrorClause = "JsonExistsOnErrorClause";
			public const string JsonExistsParameterClause = "JsonExistsParameterClause";
			public const string JsonOptions = "JsonOptions";
			public const string JsonQueryClause = "JsonQueryClause";
			public const string JsonQueryOnErrorClause = "JsonQueryOnErrorClause";
			public const string JsonQueryParameterClause = "JsonQueryParameterClause";
			public const string JsonQueryReturningClause = "JsonQueryReturningClause";
			public const string JsonQueryWrapperClause = "JsonQueryWrapperClause";
			public const string JsonTableClause = "JsonTableClause";
			public const string JsonValueClause = "JsonValueClause";
			public const string JsonValueOnErrorClause = "JsonValueOnErrorClause";
			public const string JsonValueParameterClause = "JsonValueParameterClause";
			public const string JsonValueReturningClause = "JsonValueReturningClause";
			public const string KeepClause = "KeepClause";
			public const string KeepOrDrop = "KeepOrDrop";
			public const string KeepOrDropIndex = "KeepOrDropIndex";
			public const string KeepOrNoKeep = "KeepOrNoKeep";
			public const string KeepSize = "KeepSize";
			public const string LargeObjectCacheOption = "LargeObjectCacheOption";
			public const string LargeObjectCompressOption = "LargeObjectCompressOption";
			public const string LargeObjectItemStorage = "LargeObjectItemStorage";
			public const string LargeObjectItemStorageProperties = "LargeObjectItemStorageProperties";
			public const string LargeObjectParameter = "LargeObjectParameter";
			public const string LargeObjectParameters = "LargeObjectParameters";
			public const string LargeObjectPartitioningStorage = "LargeObjectPartitioningStorage";
			public const string LargeObjectPartitionStorageList = "LargeObjectPartitionStorageList";
			public const string LargeObjectSegmentNameOrParenthesisEnclosedLargeObjectStorageParameters = "LargeObjectSegmentNameOrParenthesisEnclosedLargeObjectStorageParameters";
			public const string LargeObjectSegmentNameOrParenthesisEnclosedTableSpaceIdentifier = "LargeObjectSegmentNameOrParenthesisEnclosedTableSpaceIdentifier";
			public const string LargeObjectStorageClause = "LargeObjectStorageClause";
			public const string LargeObjectStorageClauseList = "LargeObjectStorageClauseList";
			public const string LargeObjectStorageClauseListChained = "LargeObjectStorageClauseListChained";
			public const string LargeObjectStorageClauseOrVariableElementArrayProperties = "LargeObjectStorageClauseOrVariableElementArrayProperties";
			public const string LargeObjectStorageParameters = "LargeObjectStorageParameters";
			public const string LargeObjectStorageProperty = "LargeObjectStorageProperty";
			public const string LargeObjectTableSpaceOrLargeObjectParameter = "LargeObjectTableSpaceOrLargeObjectParameter";
			public const string LargeObjectTableSpaceOrLargeObjectParameters = "LargeObjectTableSpaceOrLargeObjectParameters";
			public const string LengthOfLengthPrefix = "LengthOfLengthPrefix";
			public const string LikeOperator = "LikeOperator";
			public const string LikePattern = "LikePattern";
			public const string LinearOrInterleaved = "LinearOrInterleaved";
			public const string ListAggregationOverflowClause = "ListAggregationOverflowClause";
			public const string ListAggregationParameters = "ListAggregationParameters";
			public const string ListOfParenthesisEnclosedIdentifierLists = "ListOfParenthesisEnclosedIdentifierLists";
			public const string ListPartitionDescriptionList = "ListPartitionDescriptionList";
			public const string ListPartitionList = "ListPartitionList";
			public const string ListPartitions = "ListPartitions";
			public const string ListValuesClause = "ListValuesClause";
			public const string Literal = "Literal";
			public const string LiteralList = "LiteralList";
			public const string LiteralListOrSubquery = "LiteralListOrSubquery";
			public const string LittleOrBig = "LittleOrBig";
			public const string LocalExtentManagementOption = "LocalExtentManagementOption";
			public const string LocalOrGlobal = "LocalOrGlobal";
			public const string LocalPartitionedIndex = "LocalPartitionedIndex";
			public const string LocatorOrValue = "LocatorOrValue";
			public const string LockMode = "LockMode";
			public const string LockOrUnlock = "LockOrUnlock";
			public const string LockTableList = "LockTableList";
			public const string LockTableStatement = "LockTableStatement";
			public const string LoggingClause = "LoggingClause";
			public const string LogicalOperator = "LogicalOperator";
			public const string LogicalOperatorChainedPlSqlExpression = "LogicalOperatorChainedPlSqlExpression";
			public const string LowOrHigh = "LowOrHigh";
			public const string MainModel = "MainModel";
			public const string MainModelName = "MainModelName";
			public const string MandatoryAsXmlAlias = "MandatoryAsXmlAlias";
			public const string MapOrderFunctionDeclaration = "MapOrderFunctionDeclaration";
			public const string MaterializedViewLogForRefreshClause = "MaterializedViewLogForRefreshClause";
			public const string MaterializedViewLogNewValuesClause = "MaterializedViewLogNewValuesClause";
			public const string MaterializedViewLogProperties = "MaterializedViewLogProperties";
			public const string MaterializedViewLogProperty = "MaterializedViewLogProperty";
			public const string MaterializedViewLogPurgeClause = "MaterializedViewLogPurgeClause";
			public const string MaterializedViewLogPurgeOption = "MaterializedViewLogPurgeOption";
			public const string MaterializedViewLogSpecialColumn = "MaterializedViewLogSpecialColumn";
			public const string MaterializedViewLogSpecialColumnList = "MaterializedViewLogSpecialColumnList";
			public const string MaterializedViewLogWithColumnsClause = "MaterializedViewLogWithColumnsClause";
			public const string MaterializedViewOrSnapshot = "MaterializedViewOrSnapshot";
			public const string MathEqualsStringLiteral = "MathEqualsStringLiteral";
			public const string MathOperator = "MathOperator";
			public const string MathPlusOrMinus = "MathPlusOrMinus";
			public const string MaximumSizeClause = "MaximumSizeClause";
			public const string MaximumValueOrNoMaximumValue = "MaximumValueOrNoMaximumValue";
			public const string MemberOrStatic = "MemberOrStatic";
			public const string MergeDeleteClause = "MergeDeleteClause";
			public const string MergeInsertClause = "MergeInsertClause";
			public const string MergeInsertValuesExpressionOrDefaultValueCommaChainedList = "MergeInsertValuesExpressionOrDefaultValueCommaChainedList";
			public const string MergeInsertValuesExpressionOrDefaultValueList = "MergeInsertValuesExpressionOrDefaultValueList";
			public const string MergeSetColumnEqualsExpressionOrDefaultValueCommaChainedList = "MergeSetColumnEqualsExpressionOrDefaultValueCommaChainedList";
			public const string MergeSetColumnEqualsExpressionOrDefaultValueList = "MergeSetColumnEqualsExpressionOrDefaultValueList";
			public const string MergeSource = "MergeSource";
			public const string MergeStatement = "MergeStatement";
			public const string MergeTarget = "MergeTarget";
			public const string MergeUpdateClause = "MergeUpdateClause";
			public const string MergeUpdateInsertClause = "MergeUpdateInsertClause";
			public const string MigrateUsingQuotedStringLiteral = "MigrateUsingQuotedStringLiteral";
			public const string MigrationOrPatch = "MigrationOrPatch";
			public const string MinimumValueOrNoMinimumValue = "MinimumValueOrNoMinimumValue";
			public const string MissingFieldValuesAreNull = "MissingFieldValuesAreNull";
			public const string ModelClause = "ModelClause";
			public const string ModelColumnClauses = "ModelColumnClauses";
			public const string ModelColumnClausesPartitionByExpressionList = "ModelColumnClausesPartitionByExpressionList";
			public const string ModelIterateClause = "ModelIterateClause";
			public const string ModelRulesClause = "ModelRulesClause";
			public const string ModelRulesClauseAssignment = "ModelRulesClauseAssignment";
			public const string ModelRulesClauseAssignmentList = "ModelRulesClauseAssignmentList";
			public const string ModelRulesClauseRulesPart = "ModelRulesClauseRulesPart";
			public const string ModifyCollectionRetrieval = "ModifyCollectionRetrieval";
			public const string ModifyColumnClause = "ModifyColumnClause";
			public const string ModifyColumnClauseOption = "ModifyColumnClauseOption";
			public const string ModifyColumnProperties = "ModifyColumnProperties";
			public const string ModifyColumnPropertiesOrModifyVirtualColumnPropertiesOrModifyColumnVisibility = "ModifyColumnPropertiesOrModifyVirtualColumnPropertiesOrModifyColumnVisibility";
			public const string ModifyColumnPropertiesOrModifyVirtualColumnPropertiesOrModifyColumnVisibilityList = "ModifyColumnPropertiesOrModifyVirtualColumnPropertiesOrModifyColumnVisibilityList";
			public const string ModifyColumnSubstitutable = "ModifyColumnSubstitutable";
			public const string ModifyColumnVisibility = "ModifyColumnVisibility";
			public const string ModifyConstraintClause = "ModifyConstraintClause";
			public const string ModifyMaterializedViewEncryptionClause = "ModifyMaterializedViewEncryptionClause";
			public const string ModifyOpaqueType = "ModifyOpaqueType";
			public const string ModifyScopedTableRefConstraintOrAlterMaterializedViewRefresh = "ModifyScopedTableRefConstraintOrAlterMaterializedViewRefresh";
			public const string ModifyVirtualColumnProperties = "ModifyVirtualColumnProperties";
			public const string MoveTableClause = "MoveTableClause";
			public const string MoveTableOption = "MoveTableOption";
			public const string MultiColumnForLoop = "MultiColumnForLoop";
			public const string MultiColumnForLoopOrConditionOrExpressionOrSingleColumnForLoopList = "MultiColumnForLoopOrConditionOrExpressionOrSingleColumnForLoopList";
			public const string MultisetOperator = "MultisetOperator";
			public const string MultisetOperatorClause = "MultisetOperatorClause";
			public const string MultisetOperatorClauseOrTimestampAtTimeZone = "MultisetOperatorClauseOrTimestampAtTimeZone";
			public const string MultiTableInsert = "MultiTableInsert";
			public const string NameClause = "NameClause";
			public const string NamedExpressionOrEvaluatedNameExpression = "NamedExpressionOrEvaluatedNameExpression";
			public const string NamedExpressionOrEvaluatedNameExpressionChained = "NamedExpressionOrEvaluatedNameExpressionChained";
			public const string NamedInlineConstraintDefinition = "NamedInlineConstraintDefinition";
			public const string NamedOutOfLineConstraint = "NamedOutOfLineConstraint";
			public const string NaturalOrOuterJoinType = "NaturalOrOuterJoinType";
			public const string NegativeInteger = "NegativeInteger";
			public const string NestedQuery = "NestedQuery";
			public const string NestedStorageTableProperties = "NestedStorageTableProperties";
			public const string NestedStorageTableProperty = "NestedStorageTableProperty";
			public const string NestedTableColumnProperties = "NestedTableColumnProperties";
			public const string NestedTableColumnPropertiesOrVariableElementArrayColumnPropertiesOrLargeObjectStorageClauseList = "NestedTableColumnPropertiesOrVariableElementArrayColumnPropertiesOrLargeObjectStorageClauseList";
			public const string NestedTableOf = "NestedTableOf";
			public const string NestedTableReturnType = "NestedTableReturnType";
			public const string NestedTableTypeDefinition = "NestedTableTypeDefinition";
			public const string NewLineOrStringLiteral = "NewLineOrStringLiteral";
			public const string NextDateTimeExpressionOrRepeatInterval = "NextDateTimeExpressionOrRepeatInterval";
			public const string NextSizeClause = "NextSizeClause";
			public const string NoConfirmApply = "NoConfirmApply";
			public const string NoForce = "NoForce";
			public const string NoLog = "NoLog";
			public const string NotNull = "NotNull";
			public const string NullIfOrNoNullIf = "NullIfOrNoNullIf";
			public const string NullNaNOrInfinite = "NullNaNOrInfinite";
			public const string NullOnEmpty = "NullOnEmpty";
			public const string NullOrStringOrNumberLiteralOrParenthesisEnclosedStringOrIntegerLiteralList = "NullOrStringOrNumberLiteralOrParenthesisEnclosedStringOrIntegerLiteralList";
			public const string NullsClause = "NullsClause";
			public const string ObjectAccessExpression = "ObjectAccessExpression";
			public const string ObjectAsAlias = "ObjectAsAlias";
			public const string ObjectAttributeProperty = "ObjectAttributeProperty";
			public const string ObjectCommentOption = "ObjectCommentOption";
			public const string ObjectIdClause = "ObjectIdClause";
			public const string ObjectIdentifierOrDefault = "ObjectIdentifierOrDefault";
			public const string ObjectPrefix = "ObjectPrefix";
			public const string ObjectPrivilege = "ObjectPrivilege";
			public const string ObjectPrivilegeList = "ObjectPrivilegeList";
			public const string ObjectPrivilegeListChained = "ObjectPrivilegeListChained";
			public const string ObjectProperties = "ObjectProperties";
			public const string ObjectRowType = "ObjectRowType";
			public const string ObjectTable = "ObjectTable";
			public const string ObjectTableObjectIdentifierClause = "ObjectTableObjectIdentifierClause";
			public const string ObjectTableObjectIdentifierIndexClause = "ObjectTableObjectIdentifierIndexClause";
			public const string ObjectTableSubstitutionClause = "ObjectTableSubstitutionClause";
			public const string ObjectTypeColumnProperties = "ObjectTypeColumnProperties";
			public const string ObjectTypeDefinition = "ObjectTypeDefinition";
			public const string ObjectTypeNestedFunctionCallChained = "ObjectTypeNestedFunctionCallChained";
			public const string OfIdentifierList = "OfIdentifierList";
			public const string OltpOrQueryOrArchiveOrAllOrDirectLoadOperations = "OltpOrQueryOrArchiveOrAllOrDirectLoadOperations";
			public const string OnlineOrOffline = "OnlineOrOffline";
			public const string OnlyOrWithTies = "OnlyOrWithTies";
			public const string OnlyOrWrite = "OnlyOrWrite";
			public const string OnNull = "OnNull";
			public const string OnObjectClause = "OnObjectClause";
			public const string OnOrOff = "OnOrOff";
			public const string OpaqueFormatSpecification = "OpaqueFormatSpecification";
			public const string OpaqueFormatSpecificationOrUsingClobSubquery = "OpaqueFormatSpecificationOrUsingClobSubquery";
			public const string OptionallyParenthesisEnclosedJsonOptions = "OptionallyParenthesisEnclosedJsonOptions";
			public const string OptionalParameter = "OptionalParameter";
			public const string OptionalParameterExpression = "OptionalParameterExpression";
			public const string OptionalParameterExpressionCommaChainedList = "OptionalParameterExpressionCommaChainedList";
			public const string OptionalParameterExpressionList = "OptionalParameterExpressionList";
			public const string OptionalParenthesisEnclosedConcatenatedQueryBlock = "OptionalParenthesisEnclosedConcatenatedQueryBlock";
			public const string OptionalParenthesisEnclosedQueryBlock = "OptionalParenthesisEnclosedQueryBlock";
			public const string OrderByClause = "OrderByClause";
			public const string OrderExpression = "OrderExpression";
			public const string OrderExpressionChained = "OrderExpressionChained";
			public const string OrderExpressionList = "OrderExpressionList";
			public const string OrderOrCluster = "OrderOrCluster";
			public const string OrderOrNoOrder = "OrderOrNoOrder";
			public const string OrReplace = "OrReplace";
			public const string OtherSequenceOption = "OtherSequenceOption";
			public const string OuterJoinClause = "OuterJoinClause";
			public const string OuterJoinOld = "OuterJoinOld";
			public const string OuterJoinPartitionClause = "OuterJoinPartitionClause";
			public const string OuterJoinType = "OuterJoinType";
			public const string OuterJoinTypeWithKeyword = "OuterJoinTypeWithKeyword";
			public const string OutOfLineConstraint = "OutOfLineConstraint";
			public const string OutOfLineConstraintDefinition = "OutOfLineConstraintDefinition";
			public const string OutOfLineConstraintDefinitionList = "OutOfLineConstraintDefinitionList";
			public const string OutOfLineConstraintDefinitionListOrOutOfLineReferenceConstraint = "OutOfLineConstraintDefinitionListOrOutOfLineReferenceConstraint";
			public const string OutputFileSpecification = "OutputFileSpecification";
			public const string OutputFileSpecifications = "OutputFileSpecifications";
			public const string OverflowStoreInTableSpaceList = "OverflowStoreInTableSpaceList";
			public const string OverQueryPartitionClause = "OverQueryPartitionClause";
			public const string PackageBodyDefinition = "PackageBodyDefinition";
			public const string PackageBodyInitializeSection = "PackageBodyInitializeSection";
			public const string PackagePart = "PackagePart";
			public const string ParallelClause = "ParallelClause";
			public const string ParallelDegree = "ParallelDegree";
			public const string ParallelPartitionDefinition = "ParallelPartitionDefinition";
			public const string ParallelPartitionDefinitionInType = "ParallelPartitionDefinitionInType";
			public const string ParallelPartitionKey = "ParallelPartitionKey";
			public const string ParallelPartitionKeyInType = "ParallelPartitionKeyInType";
			public const string ParameterDeclaration = "ParameterDeclaration";
			public const string ParameterDeclarationList = "ParameterDeclarationList";
			public const string ParameterDeclarationListChained = "ParameterDeclarationListChained";
			public const string ParameterDirectionDeclaration = "ParameterDirectionDeclaration";
			public const string ParameterFileDataSource = "ParameterFileDataSource";
			public const string ParenthesisEnclosedAggregationFunctionParameters = "ParenthesisEnclosedAggregationFunctionParameters";
			public const string ParenthesisEnclosedAliasedExpressionList = "ParenthesisEnclosedAliasedExpressionList";
			public const string ParenthesisEnclosedAllocateExtentOptionList = "ParenthesisEnclosedAllocateExtentOptionList";
			public const string ParenthesisEnclosedCondition = "ParenthesisEnclosedCondition";
			public const string ParenthesisEnclosedCursorParameterDeclarationList = "ParenthesisEnclosedCursorParameterDeclarationList";
			public const string ParenthesisEnclosedExpression = "ParenthesisEnclosedExpression";
			public const string ParenthesisEnclosedExpressionList = "ParenthesisEnclosedExpressionList";
			public const string ParenthesisEnclosedExpressionListOrNestedQuery = "ParenthesisEnclosedExpressionListOrNestedQuery";
			public const string ParenthesisEnclosedExpressionListWithIgnoreNulls = "ParenthesisEnclosedExpressionListWithIgnoreNulls";
			public const string ParenthesisEnclosedExpressionListWithMandatoryExpressions = "ParenthesisEnclosedExpressionListWithMandatoryExpressions";
			public const string ParenthesisEnclosedExpressionOrDefaultValueListOrAssignmentTarget = "ParenthesisEnclosedExpressionOrDefaultValueListOrAssignmentTarget";
			public const string ParenthesisEnclosedExternalTableFieldList = "ParenthesisEnclosedExternalTableFieldList";
			public const string ParenthesisEnclosedFunctionParameters = "ParenthesisEnclosedFunctionParameters";
			public const string ParenthesisEnclosedGroupingExpressionList = "ParenthesisEnclosedGroupingExpressionList";
			public const string ParenthesisEnclosedIdentifier = "ParenthesisEnclosedIdentifier";
			public const string ParenthesisEnclosedIdentifierList = "ParenthesisEnclosedIdentifierList";
			public const string ParenthesisEnclosedIdentityOptions = "ParenthesisEnclosedIdentityOptions";
			public const string ParenthesisEnclosedLargeObjectPartitionStorageList = "ParenthesisEnclosedLargeObjectPartitionStorageList";
			public const string ParenthesisEnclosedLargeObjectStorageParameters = "ParenthesisEnclosedLargeObjectStorageParameters";
			public const string ParenthesisEnclosedLargeObjectSubpartitionStorageClause = "ParenthesisEnclosedLargeObjectSubpartitionStorageClause";
			public const string ParenthesisEnclosedListOfParenthesisEnclosedIdentifierLists = "ParenthesisEnclosedListOfParenthesisEnclosedIdentifierLists";
			public const string ParenthesisEnclosedListPartitionDescriptionList = "ParenthesisEnclosedListPartitionDescriptionList";
			public const string ParenthesisEnclosedListPartitionListOrSubpartitionClause = "ParenthesisEnclosedListPartitionListOrSubpartitionClause";
			public const string ParenthesisEnclosedLiteralList = "ParenthesisEnclosedLiteralList";
			public const string ParenthesisEnclosedLiteralListListOrSubquery = "ParenthesisEnclosedLiteralListListOrSubquery";
			public const string ParenthesisEnclosedMergeInsertValuesExpressionOrDefaultValueList = "ParenthesisEnclosedMergeInsertValuesExpressionOrDefaultValueList";
			public const string ParenthesisEnclosedNestedQuery = "ParenthesisEnclosedNestedQuery";
			public const string ParenthesisEnclosedNestedStorageTableProperties = "ParenthesisEnclosedNestedStorageTableProperties";
			public const string ParenthesisEnclosedObjectProperties = "ParenthesisEnclosedObjectProperties";
			public const string ParenthesisEnclosedParameterDeclarationList = "ParenthesisEnclosedParameterDeclarationList";
			public const string ParenthesisEnclosedPeriodStartEndColumns = "ParenthesisEnclosedPeriodStartEndColumns";
			public const string ParenthesisEnclosedPrefixedIdentifierList = "ParenthesisEnclosedPrefixedIdentifierList";
			public const string ParenthesisEnclosedRangePartitionDescriptionList = "ParenthesisEnclosedRangePartitionDescriptionList";
			public const string ParenthesisEnclosedRangePartitionListOrSubpartitionClause = "ParenthesisEnclosedRangePartitionListOrSubpartitionClause";
			public const string ParenthesisEnclosedReferencePartitionDescriptionList = "ParenthesisEnclosedReferencePartitionDescriptionList";
			public const string ParenthesisEnclosedRelationalProperties = "ParenthesisEnclosedRelationalProperties";
			public const string ParenthesisEnclosedStringLiteral = "ParenthesisEnclosedStringLiteral";
			public const string ParenthesisEnclosedStringOrIntegerLiteralList = "ParenthesisEnclosedStringOrIntegerLiteralList";
			public const string ParenthesisEnclosedTableIndexExpressionList = "ParenthesisEnclosedTableIndexExpressionList";
			public const string ParenthesisEnclosedTableSpaceIdentifier = "ParenthesisEnclosedTableSpaceIdentifier";
			public const string ParethesisEnclosedObjectTypeDefinitionParameterList = "ParethesisEnclosedObjectTypeDefinitionParameterList";
			public const string PartialOrFull = "PartialOrFull";
			public const string PartitionCountOrReferencePartitionDescriptionList = "PartitionCountOrReferencePartitionDescriptionList";
			public const string PartitionedIndex = "PartitionedIndex";
			public const string PartitionExtensionClause = "PartitionExtensionClause";
			public const string PartitioningStorageClause = "PartitioningStorageClause";
			public const string PartitionInterval = "PartitionInterval";
			public const string PartitionNameOrKeySet = "PartitionNameOrKeySet";
			public const string PartitionOrDatabaseLink = "PartitionOrDatabaseLink";
			public const string PartitionOrNoPartition = "PartitionOrNoPartition";
			public const string PartitionStorageProperty = "PartitionStorageProperty";
			public const string PasswordParameters = "PasswordParameters";
			public const string PercentCharacterTypeOrRowType = "PercentCharacterTypeOrRowType";
			public const string PeriodDefinition = "PeriodDefinition";
			public const string PeriodForColumn = "PeriodForColumn";
			public const string PermanentTablespaceClause = "PermanentTablespaceClause";
			public const string PermanentTablespaceOption = "PermanentTablespaceOption";
			public const string PermanentTablespaceOptions = "PermanentTablespaceOptions";
			public const string PhysicalAttribute = "PhysicalAttribute";
			public const string PhysicalAttributesClause = "PhysicalAttributesClause";
			public const string PhysicalAttributesClauseOrTableSpaceIdentifier = "PhysicalAttributesClauseOrTableSpaceIdentifier";
			public const string PhysicalAttributesClauseOrTableSpaceIdentifierList = "PhysicalAttributesClauseOrTableSpaceIdentifierList";
			public const string PhysicalProperties = "PhysicalProperties";
			public const string PivotAliasedAggregationFunction = "PivotAliasedAggregationFunction";
			public const string PivotAliasedAggregationFunctionList = "PivotAliasedAggregationFunctionList";
			public const string PivotAliasedAggregationFunctionListChained = "PivotAliasedAggregationFunctionListChained";
			public const string PivotClause = "PivotClause";
			public const string PivotClauseOrUnpivotClauseOrRowPatternClause = "PivotClauseOrUnpivotClauseOrRowPatternClause";
			public const string PivotExpressionsOrAnyListOrNestedQuery = "PivotExpressionsOrAnyListOrNestedQuery";
			public const string PivotForClause = "PivotForClause";
			public const string PivotInClause = "PivotInClause";
			public const string PlSqlAssignmentStatement = "PlSqlAssignmentStatement";
			public const string PlSqlAssignmentTarget = "PlSqlAssignmentTarget";
			public const string PlSqlBasicLoopStatement = "PlSqlBasicLoopStatement";
			public const string PlSqlBlock = "PlSqlBlock";
			public const string PlSqlBlockDeclareSection = "PlSqlBlockDeclareSection";
			public const string PlSqlBlockStatement = "PlSqlBlockStatement";
			public const string PlSqlBooleanExpression = "PlSqlBooleanExpression";
			public const string PlSqlBooleanExpressionConditionExtension = "PlSqlBooleanExpressionConditionExtension";
			public const string PlSqlBooleanLiteral = "PlSqlBooleanLiteral";
			public const string PlSqlCaseExpressionElseBranch = "PlSqlCaseExpressionElseBranch";
			public const string PlSqlCaseStatement = "PlSqlCaseStatement";
			public const string PlSqlCloseStatement = "PlSqlCloseStatement";
			public const string PlSqlConditionalCompilationElseClause = "PlSqlConditionalCompilationElseClause";
			public const string PlSqlConditionalCompilationElseIfClause = "PlSqlConditionalCompilationElseIfClause";
			public const string PlSqlConditionalCompilationErrorDirective = "PlSqlConditionalCompilationErrorDirective";
			public const string PlSqlConditionalCompilationSelectionDirective = "PlSqlConditionalCompilationSelectionDirective";
			public const string PlSqlConditionalPredicate = "PlSqlConditionalPredicate";
			public const string PlSqlContinueStatement = "PlSqlContinueStatement";
			public const string PlSqlCursorForLoopStatement = "PlSqlCursorForLoopStatement";
			public const string PlSqlDataType = "PlSqlDataType";
			public const string PlSqlDataTypeWithoutConstraint = "PlSqlDataTypeWithoutConstraint";
			public const string PlSqlDeclarations = "PlSqlDeclarations";
			public const string PlSqlElseClause = "PlSqlElseClause";
			public const string PlSqlElseIfClause = "PlSqlElseIfClause";
			public const string PlSqlElseIfClauseList = "PlSqlElseIfClauseList";
			public const string PlSqlExceptionClause = "PlSqlExceptionClause";
			public const string PlSqlExceptionHandler = "PlSqlExceptionHandler";
			public const string PlSqlExceptionHandlerList = "PlSqlExceptionHandlerList";
			public const string PlSqlExecuteImmediateInputOutputClause = "PlSqlExecuteImmediateInputOutputClause";
			public const string PlSqlExecuteImmediateStatement = "PlSqlExecuteImmediateStatement";
			public const string PlSqlExitStatement = "PlSqlExitStatement";
			public const string PlSqlExpression = "PlSqlExpression";
			public const string PlSqlExpressionList = "PlSqlExpressionList";
			public const string PlSqlExpressionListChained = "PlSqlExpressionListChained";
			public const string PlSqlFetchIntoClause = "PlSqlFetchIntoClause";
			public const string PlSqlFetchLimitClause = "PlSqlFetchLimitClause";
			public const string PlSqlFetchStatement = "PlSqlFetchStatement";
			public const string PlSqlForAllStatement = "PlSqlForAllStatement";
			public const string PlSqlForLoopStatement = "PlSqlForLoopStatement";
			public const string PlSqlFunctionSource = "PlSqlFunctionSource";
			public const string PlSqlGoToStatement = "PlSqlGoToStatement";
			public const string PlSqlIfStatement = "PlSqlIfStatement";
			public const string PlSqlLabel = "PlSqlLabel";
			public const string PlSqlLabelList = "PlSqlLabelList";
			public const string PlSqlNullStatement = "PlSqlNullStatement";
			public const string PlSqlOpenForStatement = "PlSqlOpenForStatement";
			public const string PlSqlOpenStatement = "PlSqlOpenStatement";
			public const string PlSqlParenthesisEnclosedExpression = "PlSqlParenthesisEnclosedExpression";
			public const string PlSqlParenthesisEnclosedExpressionList = "PlSqlParenthesisEnclosedExpressionList";
			public const string PlSqlParenthesisEnclosedExpressionOrIndexer = "PlSqlParenthesisEnclosedExpressionOrIndexer";
			public const string PlSqlPipeRowStatement = "PlSqlPipeRowStatement";
			public const string PlSqlProcedureCall = "PlSqlProcedureCall";
			public const string PlSqlRaiseStatement = "PlSqlRaiseStatement";
			public const string PlSqlReturnStatement = "PlSqlReturnStatement";
			public const string PlSqlSearchedCaseExpressionBranch = "PlSqlSearchedCaseExpressionBranch";
			public const string PlSqlSimpleCaseExpressionBranch = "PlSqlSimpleCaseExpressionBranch";
			public const string PlSqlSqlStatement = "PlSqlSqlStatement";
			public const string PlSqlSqlStatementType = "PlSqlSqlStatementType";
			public const string PlSqlStatement = "PlSqlStatement";
			public const string PlSqlStatementList = "PlSqlStatementList";
			public const string PlSqlStatementListOrPlSqlConditionalCompilationErrorDirective = "PlSqlStatementListOrPlSqlConditionalCompilationErrorDirective";
			public const string PlSqlStatementOrInlinePragma = "PlSqlStatementOrInlinePragma";
			public const string PlSqlStatementOrInlinePragmaList = "PlSqlStatementOrInlinePragmaList";
			public const string PlSqlStatementOrPragma = "PlSqlStatementOrPragma";
			public const string PlSqlStatementOrPragmaList = "PlSqlStatementOrPragmaList";
			public const string PlSqlStatementType = "PlSqlStatementType";
			public const string PlSqlWhenBooleanExpression = "PlSqlWhenBooleanExpression";
			public const string PlSqlWhileLoopStatement = "PlSqlWhileLoopStatement";
			public const string PositionIncrement = "PositionIncrement";
			public const string PositionSpecification = "PositionSpecification";
			public const string PragmaDefinition = "PragmaDefinition";
			public const string PragmaType = "PragmaType";
			public const string PragmaTypeInline = "PragmaTypeInline";
			public const string PragmaTypeRestrictReferences = "PragmaTypeRestrictReferences";
			public const string PrecedingOnlyClause = "PrecedingOnlyClause";
			public const string PrecedingOnlyOrBetweenPrecedingAndFollowing = "PrecedingOnlyOrBetweenPrecedingAndFollowing";
			public const string PrecedingOrFollowing = "PrecedingOrFollowing";
			public const string Prefix = "Prefix";
			public const string PrefixedAsterisk = "PrefixedAsterisk";
			public const string PrefixedColumnReference = "PrefixedColumnReference";
			public const string PrefixedExceptionIdentifier = "PrefixedExceptionIdentifier";
			public const string PrefixedIdentifier = "PrefixedIdentifier";
			public const string PrefixedIdentifierList = "PrefixedIdentifierList";
			public const string PrefixedIdentifierListChained = "PrefixedIdentifierListChained";
			public const string PreserveTable = "PreserveTable";
			public const string PreviousOrNext = "PreviousOrNext";
			public const string ProcedureDeclaration = "ProcedureDeclaration";
			public const string ProcedureDeclarationInType = "ProcedureDeclarationInType";
			public const string ProcedureDefinition = "ProcedureDefinition";
			public const string ProcedureHeading = "ProcedureHeading";
			public const string ProcedureOrFunctionSpecification = "ProcedureOrFunctionSpecification";
			public const string ProfileOptionList = "ProfileOptionList";
			public const string ProgramBody = "ProgramBody";
			public const string ProgramBodyInType = "ProgramBodyInType";
			public const string ProgramDeclareSection = "ProgramDeclareSection";
			public const string ProgramEnd = "ProgramEnd";
			public const string ProgramImplentationDeclaration = "ProgramImplentationDeclaration";
			public const string PurgeOption = "PurgeOption";
			public const string PurgeStatement = "PurgeStatement";
			public const string QualifiedObjectIdentifier = "QualifiedObjectIdentifier";
			public const string QualifiedObjectIdentifierList = "QualifiedObjectIdentifierList";
			public const string QualifiedObjectIdentifierListChained = "QualifiedObjectIdentifierListChained";
			public const string QueryBlock = "QueryBlock";
			public const string QueryOrArchive = "QueryOrArchive";
			public const string QueryOrCapacity = "QueryOrCapacity";
			public const string QueryPartitionClause = "QueryPartitionClause";
			public const string QueryTableExpression = "QueryTableExpression";
			public const string QuotedStringLiteral = "QuotedStringLiteral";
			public const string QuotedStringLiteralOrBlanks = "QuotedStringLiteralOrBlanks";
			public const string QuotedStringLiteralOrWhitespace = "QuotedStringLiteralOrWhitespace";
			public const string RangePartitionDescriptionList = "RangePartitionDescriptionList";
			public const string RangePartitionList = "RangePartitionList";
			public const string RangePartitions = "RangePartitions";
			public const string RangeValuesClause = "RangeValuesClause";
			public const string ReadOnly = "ReadOnly";
			public const string ReadOnlyOrCheckOption = "ReadOnlyOrCheckOption";
			public const string RecordSpecificationOption = "RecordSpecificationOption";
			public const string RecordSpecificationOptions = "RecordSpecificationOptions";
			public const string RecordsPerBlockClause = "RecordsPerBlockClause";
			public const string RecordType = "RecordType";
			public const string RecordTypeDefinition = "RecordTypeDefinition";
			public const string RecoverableOrUnrecoverable = "RecoverableOrUnrecoverable";
			public const string RedoLogFileSpecification = "RedoLogFileSpecification";
			public const string ReferenceCursorTypeDefinition = "ReferenceCursorTypeDefinition";
			public const string ReferenceModel = "ReferenceModel";
			public const string ReferenceModelList = "ReferenceModelList";
			public const string ReferencePartitionDescriptionList = "ReferencePartitionDescriptionList";
			public const string ReferencePartitioning = "ReferencePartitioning";
			public const string ReferencesOrReferencing = "ReferencesOrReferencing";
			public const string ReferencingClause = "ReferencingClause";
			public const string RejectRowsWithAllNullFields = "RejectRowsWithAllNullFields";
			public const string RelationalEquiOperator = "RelationalEquiOperator";
			public const string RelationalNonEquiOperator = "RelationalNonEquiOperator";
			public const string RelationalOperator = "RelationalOperator";
			public const string RelationalProperties = "RelationalProperties";
			public const string RelationalProperty = "RelationalProperty";
			public const string RelationalTable = "RelationalTable";
			public const string ReliesOnClause = "ReliesOnClause";
			public const string RelyOrNoRely = "RelyOrNoRely";
			public const string RenameColumnClause = "RenameColumnClause";
			public const string RenameStatement = "RenameStatement";
			public const string RenameToObjectIdentifier = "RenameToObjectIdentifier";
			public const string ResourceCostOption = "ResourceCostOption";
			public const string ResourceCostOptionList = "ResourceCostOptionList";
			public const string ResourceParameters = "ResourceParameters";
			public const string RespectOrIgnoreNulls = "RespectOrIgnoreNulls";
			public const string RestorePointAsOfClause = "RestorePointAsOfClause";
			public const string RestorePointOption = "RestorePointOption";
			public const string Restriction = "Restriction";
			public const string RestrictionList = "RestrictionList";
			public const string RestrictionListChained = "RestrictionListChained";
			public const string ResultCacheClause = "ResultCacheClause";
			public const string RetentionOption = "RetentionOption";
			public const string ReturnClause = "ReturnClause";
			public const string ReturningClause = "ReturningClause";
			public const string ReturningSequenceByRef = "ReturningSequenceByRef";
			public const string ReturnOrReturning = "ReturnOrReturning";
			public const string ReturnRowsClause = "ReturnRowsClause";
			public const string ReturnRowTypeDefinition = "ReturnRowTypeDefinition";
			public const string ReuseSettings = "ReuseSettings";
			public const string RoleIdentificationType = "RoleIdentificationType";
			public const string RoleSpecification = "RoleSpecification";
			public const string RollbackSegmentOrConstraintOption = "RollbackSegmentOrConstraintOption";
			public const string RollbackStatement = "RollbackStatement";
			public const string RollupCubeClause = "RollupCubeClause";
			public const string RowArchival = "RowArchival";
			public const string RowCountOrBulkRowCount = "RowCountOrBulkRowCount";
			public const string RowDependenciesOrNoRowDependencies = "RowDependenciesOrNoRowDependencies";
			public const string RowLevelLocking = "RowLevelLocking";
			public const string RowLimitingClause = "RowLimitingClause";
			public const string RowLimitingFetchClause = "RowLimitingFetchClause";
			public const string RowLimitingOffsetClause = "RowLimitingOffsetClause";
			public const string RowMovementClause = "RowMovementClause";
			public const string RowOrRows = "RowOrRows";
			public const string RowPattern = "RowPattern";
			public const string RowPatternAggregateFunction = "RowPatternAggregateFunction";
			public const string RowPatternChained = "RowPatternChained";
			public const string RowPatternClause = "RowPatternClause";
			public const string RowPatternDefinition = "RowPatternDefinition";
			public const string RowPatternDefinitionList = "RowPatternDefinitionList";
			public const string RowPatternDefinitionListChained = "RowPatternDefinitionListChained";
			public const string RowPatternFactor = "RowPatternFactor";
			public const string RowPatternList = "RowPatternList";
			public const string RowPatternListChained = "RowPatternListChained";
			public const string RowPatternMeasureColumn = "RowPatternMeasureColumn";
			public const string RowPatternMeasureColumnList = "RowPatternMeasureColumnList";
			public const string RowPatternMeasureColumnListChained = "RowPatternMeasureColumnListChained";
			public const string RowPatternMeasures = "RowPatternMeasures";
			public const string RowPatternNavigationCompound = "RowPatternNavigationCompound";
			public const string RowPatternNavigationFunction = "RowPatternNavigationFunction";
			public const string RowPatternNavigationLogical = "RowPatternNavigationLogical";
			public const string RowPatternNavigationOptionalOffset = "RowPatternNavigationOptionalOffset";
			public const string RowPatternOrderBy = "RowPatternOrderBy";
			public const string RowPatternPartitionBy = "RowPatternPartitionBy";
			public const string RowPatternPrimary = "RowPatternPrimary";
			public const string RowPatternQuantifier = "RowPatternQuantifier";
			public const string RowPatternRowsPerMatch = "RowPatternRowsPerMatch";
			public const string RowPatternSkipTo = "RowPatternSkipTo";
			public const string RowPatternSkipToOption = "RowPatternSkipToOption";
			public const string RowPatternSubsetClause = "RowPatternSubsetClause";
			public const string RowPatternSubsetItem = "RowPatternSubsetItem";
			public const string RowPatternSubsetItemList = "RowPatternSubsetItemList";
			public const string RowPatternSubsetItemListChained = "RowPatternSubsetItemListChained";
			public const string RowPatternTerm = "RowPatternTerm";
			public const string RowsOrPercent = "RowsOrPercent";
			public const string RowsOrRange = "RowsOrRange";
			public const string RowTypeDefinition = "RowTypeDefinition";
			public const string RunningOrFinal = "RunningOrFinal";
			public const string SampleClause = "SampleClause";
			public const string SaveExceptions = "SaveExceptions";
			public const string SavepointStatement = "SavepointStatement";
			public const string Scale = "Scale";
			public const string SchemaAuthorizationCreateObjectType = "SchemaAuthorizationCreateObjectType";
			public const string SchemaAuthorizationCreateStatementList = "SchemaAuthorizationCreateStatementList";
			public const string SchemaCheckOrNoSchemaCheck = "SchemaCheckOrNoSchemaCheck";
			public const string SchemaDatatype = "SchemaDatatype";
			public const string SchemaObject = "SchemaObject";
			public const string SchemaObjectList = "SchemaObjectList";
			public const string SchemaObjectListChained = "SchemaObjectListChained";
			public const string SchemaOrPluggableDatabase = "SchemaOrPluggableDatabase";
			public const string SchemaPrefix = "SchemaPrefix";
			public const string SearchedCaseExpressionBranch = "SearchedCaseExpressionBranch";
			public const string SeedClause = "SeedClause";
			public const string SegmentAttribute = "SegmentAttribute";
			public const string SegmentAttributeOrTableCompressionOrInMemoryTableClauseOrTablePropertiesOrInformationLifecycleManagementClause = "SegmentAttributeOrTableCompressionOrInMemoryTableClauseOrTablePropertiesOrInformationLifecycleManagementClause";
			public const string SegmentAttributesClause = "SegmentAttributesClause";
			public const string SegmentCreationClause = "SegmentCreationClause";
			public const string SegmentManagementClause = "SegmentManagementClause";
			public const string SegmentOrGroupOrRow = "SegmentOrGroupOrRow";
			public const string SelectExpressionExpressionChainedList = "SelectExpressionExpressionChainedList";
			public const string SelectList = "SelectList";
			public const string SelectStatement = "SelectStatement";
			public const string SelectStatementOrDynamicSqlString = "SelectStatementOrDynamicSqlString";
			public const string SelfParameterDeclaration = "SelfParameterDeclaration";
			public const string SequenceCacheOrNoCache = "SequenceCacheOrNoCache";
			public const string SequenceOption = "SequenceOption";
			public const string SequenceOptions = "SequenceOptions";
			public const string SerializableOrReadCommitted = "SerializableOrReadCommitted";
			public const string ServerParameterFileDataSource = "ServerParameterFileDataSource";
			public const string SessionOrGlobal = "SessionOrGlobal";
			public const string SetColumnEqualsExpressionOrNestedQueryOrDefaultValue = "SetColumnEqualsExpressionOrNestedQueryOrDefaultValue";
			public const string SetColumnListEqualsNestedQuery = "SetColumnListEqualsNestedQuery";
			public const string SetConstraintStatement = "SetConstraintStatement";
			public const string SetContainerDataOption = "SetContainerDataOption";
			public const string SetDanglingToNull = "SetDanglingToNull";
			public const string SetObjectValueEqualsExpressionOrNestedQuery = "SetObjectValueEqualsExpressionOrNestedQuery";
			public const string SetOperation = "SetOperation";
			public const string SetQualifier = "SetQualifier";
			public const string SetStatementId = "SetStatementId";
			public const string SetTransactionStatement = "SetTransactionStatement";
			public const string ShareOrExclusive = "ShareOrExclusive";
			public const string ShrinkClause = "ShrinkClause";
			public const string SimpleCaseExpressionBranch = "SimpleCaseExpressionBranch";
			public const string SimpleDmlTrigger = "SimpleDmlTrigger";
			public const string SimpleSchemaObject = "SimpleSchemaObject";
			public const string SingleColumnForLoop = "SingleColumnForLoop";
			public const string SingleColumnForLoopList = "SingleColumnForLoopList";
			public const string SingleColumnOrParenthesisEnclosedColumnList = "SingleColumnOrParenthesisEnclosedColumnList";
			public const string SingleTable = "SingleTable";
			public const string SingleTableInsert = "SingleTableInsert";
			public const string SingleTableInsertOrMultiTableInsert = "SingleTableInsertOrMultiTableInsert";
			public const string SizeClause = "SizeClause";
			public const string SizeClauseOrUnlimited = "SizeClauseOrUnlimited";
			public const string SizeClauseOrUnlimitedOrDefault = "SizeClauseOrUnlimitedOrDefault";
			public const string SizeSpecification = "SizeSpecification";
			public const string SortOrder = "SortOrder";
			public const string SortOrNoSort = "SortOrNoSort";
			public const string SourceOrResource = "SourceOrResource";
			public const string SpecificationOrBody = "SpecificationOrBody";
			public const string SqlJavaObjectType = "SqlJavaObjectType";
			public const string StandaloneStatement = "StandaloneStatement";
			public const string StartPositionOrPositionIncrement = "StartPositionOrPositionIncrement";
			public const string StartWithDateTimeExpression = "StartWithDateTimeExpression";
			public const string Statement = "Statement";
			public const string StatementForExplainPlan = "StatementForExplainPlan";
			public const string StatementTerminator = "StatementTerminator";
			public const string StorageClause = "StorageClause";
			public const string StorageParameter = "StorageParameter";
			public const string StorageParameterList = "StorageParameterList";
			public const string StoreAsBasicFileOrSecureFile = "StoreAsBasicFileOrSecureFile";
			public const string StoreInTableSpaceList = "StoreInTableSpaceList";
			public const string StreamingClause = "StreamingClause";
			public const string StreamingClauseInType = "StreamingClauseInType";
			public const string StrictOrLax = "StrictOrLax";
			public const string StringLiteralList = "StringLiteralList";
			public const string StringLiteralListChained = "StringLiteralListChained";
			public const string StringLiteralOrParenthesisEnclosedStringLiteralList = "StringLiteralOrParenthesisEnclosedStringLiteralList";
			public const string StringOrNumberLiteral = "StringOrNumberLiteral";
			public const string StringOrNumberLiteralList = "StringOrNumberLiteralList";
			public const string StringOrNumberLiteralListChained = "StringOrNumberLiteralListChained";
			public const string SubpartitionByHash = "SubpartitionByHash";
			public const string SubpartitionByList = "SubpartitionByList";
			public const string SubpartitionByRange = "SubpartitionByRange";
			public const string SubpartitionClause = "SubpartitionClause";
			public const string SubpartitionTemplate = "SubpartitionTemplate";
			public const string SubpartitionType = "SubpartitionType";
			public const string SubProgramDeclarationInType = "SubProgramDeclarationInType";
			public const string SubProgramDeclarationInTypeOrMapOrderFunctionDeclaration = "SubProgramDeclarationInTypeOrMapOrderFunctionDeclaration";
			public const string SubProgramDeclarationInTypeOrMapOrderFunctionDeclarationList = "SubProgramDeclarationInTypeOrMapOrderFunctionDeclarationList";
			public const string SubProgramOrConstructorOrMapOrderFunctionSpecification = "SubProgramOrConstructorOrMapOrderFunctionSpecification";
			public const string SubProgramOrConstructorOrMapOrderFunctionSpecificationList = "SubProgramOrConstructorOrMapOrderFunctionSpecificationList";
			public const string SubProgramOrMapOrderFunctionSpecification = "SubProgramOrMapOrderFunctionSpecification";
			public const string Subquery = "Subquery";
			public const string SubqueryFactoringClause = "SubqueryFactoringClause";
			public const string SubqueryFactoringCycleClause = "SubqueryFactoringCycleClause";
			public const string SubqueryFactoringSearchClause = "SubqueryFactoringSearchClause";
			public const string SubQueryRestrictionClause = "SubQueryRestrictionClause";
			public const string SubstitutableColumnClause = "SubstitutableColumnClause";
			public const string SubstitutableColumnClauseOrVariableElementArrayStorageClause = "SubstitutableColumnClauseOrVariableElementArrayStorageClause";
			public const string SubTypeConstraintOrCharacterSet = "SubTypeConstraintOrCharacterSet";
			public const string SubTypeDefinition = "SubTypeDefinition";
			public const string SupplementalIdKeyClause = "SupplementalIdKeyClause";
			public const string SupplementalLogColumnList = "SupplementalLogColumnList";
			public const string SupplementalLoggingProperties = "SupplementalLoggingProperties";
			public const string SupplementalLogGroupClause = "SupplementalLogGroupClause";
			public const string SupplementalLogGroupClauseOrSupplementalIdKeyClause = "SupplementalLogGroupClauseOrSupplementalIdKeyClause";
			public const string SupplementalLogGroupIdentifierOrSupplementalIdKeyClause = "SupplementalLogGroupIdentifierOrSupplementalIdKeyClause";
			public const string SupplementalLogKey = "SupplementalLogKey";
			public const string SupplementalLogKeyList = "SupplementalLogKeyList";
			public const string SupplementalTableLogging = "SupplementalTableLogging";
			public const string SynchronousOrAsynchronous = "SynchronousOrAsynchronous";
			public const string SynchronousRefreshUsingStagingLogOrFastRefresh = "SynchronousRefreshUsingStagingLogOrFastRefresh";
			public const string SystemChangeNumberOrTimestamp = "SystemChangeNumberOrTimestamp";
			public const string SystemChangeNumberOrTimestampOrPeriodFor = "SystemChangeNumberOrTimestampOrPeriodFor";
			public const string SystemGeneratedOrPrimaryKey = "SystemGeneratedOrPrimaryKey";
			public const string SystemPartitioning = "SystemPartitioning";
			public const string SystemPrivilegeList = "SystemPrivilegeList";
			public const string SystemPrivilegeListChained = "SystemPrivilegeListChained";
			public const string SystemPrivilegeOrAllPrivileges = "SystemPrivilegeOrAllPrivileges";
			public const string SystemTrigger = "SystemTrigger";
			public const string SystemTriggerDdlOption = "SystemTriggerDdlOption";
			public const string SystemTriggerEventList = "SystemTriggerEventList";
			public const string SystemTriggerEventListChained = "SystemTriggerEventListChained";
			public const string TableCollectionExpression = "TableCollectionExpression";
			public const string TableCollectionInnerExpression = "TableCollectionInnerExpression";
			public const string TableCompression = "TableCompression";
			public const string TableCompressionOrPrefixCompression = "TableCompressionOrPrefixCompression";
			public const string TableCompressionOrTieringClause = "TableCompressionOrTieringClause";
			public const string TableIndexClause = "TableIndexClause";
			public const string TableIndexExpressionList = "TableIndexExpressionList";
			public const string TableIndexOrBitmapJoinIndexClause = "TableIndexOrBitmapJoinIndexClause";
			public const string TablePartitionDescription = "TablePartitionDescription";
			public const string TablePartitionDescriptionOption = "TablePartitionDescriptionOption";
			public const string TablePartitioningClauses = "TablePartitioningClauses";
			public const string TablePartitioningType = "TablePartitioningType";
			public const string TableProperties = "TableProperties";
			public const string TableReference = "TableReference";
			public const string TableReferenceJoinClause = "TableReferenceJoinClause";
			public const string TablespaceGroupClause = "TablespaceGroupClause";
			public const string TablespaceIdentifier = "TablespaceIdentifier";
			public const string TablespaceOfflineOption = "TablespaceOfflineOption";
			public const string TablespaceQuota = "TablespaceQuota";
			public const string TablespaceQuotaList = "TablespaceQuotaList";
			public const string TablespaceRetentionClause = "TablespaceRetentionClause";
			public const string TablespaceStateClauses = "TablespaceStateClauses";
			public const string TablespaceTypeClause = "TablespaceTypeClause";
			public const string TargetDimension = "TargetDimension";
			public const string TempfileSpecificationList = "TempfileSpecificationList";
			public const string TemporaryTableOnCommitClause = "TemporaryTableOnCommitClause";
			public const string TemporaryTablespaceClause = "TemporaryTablespaceClause";
			public const string TheExpression = "TheExpression";
			public const string TheInnerExpression = "TheInnerExpression";
			public const string TieringClause = "TieringClause";
			public const string TimeoutClause = "TimeoutClause";
			public const string TimestampAtTimeZone = "TimestampAtTimeZone";
			public const string TimestampOrTime = "TimestampOrTime";
			public const string TimeZoneExpression = "TimeZoneExpression";
			public const string TimeZoneOrLocal = "TimeZoneOrLocal";
			public const string TimingPoint = "TimingPoint";
			public const string TimingPointBody = "TimingPointBody";
			public const string TimingPointSection = "TimingPointSection";
			public const string TimingPointSectionList = "TimingPointSectionList";
			public const string ToDayOrHourOrMinuteOrSecondWithPrecision = "ToDayOrHourOrMinuteOrSecondWithPrecision";
			public const string ToSavepointOrForceTransactionIdentifier = "ToSavepointOrForceTransactionIdentifier";
			public const string ToSizeClause = "ToSizeClause";
			public const string ToStringLiteral = "ToStringLiteral";
			public const string ToYearOrMonth = "ToYearOrMonth";
			public const string TransactionModeOrIsolationLevelOrRollbackSegment = "TransactionModeOrIsolationLevelOrRollbackSegment";
			public const string TriggerBody = "TriggerBody";
			public const string TriggerEditionClause = "TriggerEditionClause";
			public const string TriggerEventType = "TriggerEventType";
			public const string TriggerEventTypeList = "TriggerEventTypeList";
			public const string TriggerEventTypeListChained = "TriggerEventTypeListChained";
			public const string TriggerOrderingClause = "TriggerOrderingClause";
			public const string TriggerReference = "TriggerReference";
			public const string TriggerReferenceList = "TriggerReferenceList";
			public const string TriggerTypeDefinition = "TriggerTypeDefinition";
			public const string TrimFunction = "TrimFunction";
			public const string TrimOption = "TrimOption";
			public const string TrimParameterClause = "TrimParameterClause";
			public const string TrimSpecification = "TrimSpecification";
			public const string TruncateStatement = "TruncateStatement";
			public const string TruncateTableMaterializedViewLogOption = "TruncateTableMaterializedViewLogOption";
			public const string TruncateTableStorageOption = "TruncateTableStorageOption";
			public const string TypeCompileClause = "TypeCompileClause";
			public const string TypeConstructorParameterDeclarationList = "TypeConstructorParameterDeclarationList";
			public const string TypeDefinition = "TypeDefinition";
			public const string TypeDefinitionSpecification = "TypeDefinitionSpecification";
			public const string TypeReplaceClause = "TypeReplaceClause";
			public const string UnconditionalOrConditional = "UnconditionalOrConditional";
			public const string UndocumentedSystemDatePostfix = "UndocumentedSystemDatePostfix";
			public const string UndoTablespaceClause = "UndoTablespaceClause";
			public const string UniqueDimensionOrSingleReference = "UniqueDimensionOrSingleReference";
			public const string UniqueOrBitmap = "UniqueOrBitmap";
			public const string UnitKind = "UnitKind";
			public const string UnitPostfix = "UnitPostfix";
			public const string UnlimitedOrDefault = "UnlimitedOrDefault";
			public const string UnlimitedOrIntegerLiteral = "UnlimitedOrIntegerLiteral";
			public const string UnpivotClause = "UnpivotClause";
			public const string UnpivotInClause = "UnpivotInClause";
			public const string UnpivotNullsClause = "UnpivotNullsClause";
			public const string UnpivotValueSelector = "UnpivotValueSelector";
			public const string UnpivotValueToColumnTransformationList = "UnpivotValueToColumnTransformationList";
			public const string UnpivotValueToColumnTransformationListChained = "UnpivotValueToColumnTransformationListChained";
			public const string UntilCondition = "UntilCondition";
			public const string UnusableEditionClause = "UnusableEditionClause";
			public const string UpdateOrRowExclusive = "UpdateOrRowExclusive";
			public const string UpdateOrUpsertAll = "UpdateOrUpsertAll";
			public const string UpdateSetClause = "UpdateSetClause";
			public const string UpdateSetColumnOrColumnList = "UpdateSetColumnOrColumnList";
			public const string UpdateSetColumnOrColumnListChainedList = "UpdateSetColumnOrColumnListChainedList";
			public const string UpdateSetColumnsOrObjectValue = "UpdateSetColumnsOrObjectValue";
			public const string UpdateStatement = "UpdateStatement";
			public const string UpgradeTableClause = "UpgradeTableClause";
			public const string UsableOrUnusable = "UsableOrUnusable";
			public const string UserIdentifier = "UserIdentifier";
			public const string UsingBackupControlFile = "UsingBackupControlFile";
			public const string UsingClause = "UsingClause";
			public const string UsingConnectionString = "UsingConnectionString";
			public const string UsingEncryptionAlgorithm = "UsingEncryptionAlgorithm";
			public const string UsingIndexClause = "UsingIndexClause";
			public const string UsingIndexOption = "UsingIndexOption";
			public const string UsingIndexPhysicalAttributesClause = "UsingIndexPhysicalAttributesClause";
			public const string UsingMergeSource = "UsingMergeSource";
			public const string UsingNationalCharacterSet = "UsingNationalCharacterSet";
			public const string ValidateOrNoValidate = "ValidateOrNoValidate";
			public const string VarcharOrVarchar2OrString = "VarcharOrVarchar2OrString";
			public const string VariableDeclaration = "VariableDeclaration";
			public const string VariableDeclarationDefaultValue = "VariableDeclarationDefaultValue";
			public const string VariableElementArrayColumnProperties = "VariableElementArrayColumnProperties";
			public const string VariableElementArrayColumnPropertiesOrLargeObjectPartitioningStorage = "VariableElementArrayColumnPropertiesOrLargeObjectPartitioningStorage";
			public const string VariableElementArrayColumnPropertiesOrLargeObjectPartitioningStorageList = "VariableElementArrayColumnPropertiesOrLargeObjectPartitioningStorageList";
			public const string VariableElementArrayColumnPropertiesOrLargeObjectStorageClause = "VariableElementArrayColumnPropertiesOrLargeObjectStorageClause";
			public const string VariableElementArrayStorageClause = "VariableElementArrayStorageClause";
			public const string VaryingArray = "VaryingArray";
			public const string VaryingArrayOrNestedTableTypeDefinition = "VaryingArrayOrNestedTableTypeDefinition";
			public const string VaryingArrayTypeDefinition = "VaryingArrayTypeDefinition";
			public const string VaryingCharacterOrRawDataType = "VaryingCharacterOrRawDataType";
			public const string ViewBequeath = "ViewBequeath";
			public const string ViewEditioning = "ViewEditioning";
			public const string ViewInlineConstraintDefinition = "ViewInlineConstraintDefinition";
			public const string ViewRelationalProperties = "ViewRelationalProperties";
			public const string ViewRelationalProperty = "ViewRelationalProperty";
			public const string VirtualColumnDefinition = "VirtualColumnDefinition";
			public const string VirtualColumnDefinitionOrColumnDefinition = "VirtualColumnDefinitionOrColumnDefinition";
			public const string VirtualColumnDefinitionOrColumnDefinitionList = "VirtualColumnDefinitionOrColumnDefinitionList";
			public const string VisibleOrInvisible = "VisibleOrInvisible";
			public const string WaitOrNowait = "WaitOrNowait";
			public const string WhenCondition = "WhenCondition";
			public const string WhereClause = "WhereClause";
			public const string WindowingClause = "WindowingClause";
			public const string WithAdminOption = "WithAdminOption";
			public const string WithGrantOption = "WithGrantOption";
			public const string WithHierarchyOption = "WithHierarchyOption";
			public const string WithinGroupAggregationFunction = "WithinGroupAggregationFunction";
			public const string WithMaterializedZoneMap = "WithMaterializedZoneMap";
			public const string WithOrWithout = "WithOrWithout";
			public const string WithOrWithoutCount = "WithOrWithoutCount";
			public const string WithOrWithoutEmbedded = "WithOrWithoutEmbedded";
			public const string WithOrWithoutUniqueKeys = "WithOrWithoutUniqueKeys";
			public const string WithoutMaterializedZoneMap = "WithoutMaterializedZoneMap";
			public const string WithRoleOption = "WithRoleOption";
			public const string WithTimeZone = "WithTimeZone";
			public const string WrappedCode = "WrappedCode";
			public const string XmlAggregateClause = "XmlAggregateClause";
			public const string XmlElementClause = "XmlElementClause";
			public const string XmlElementParameterClause = "XmlElementParameterClause";
			public const string XmlEncoding = "XmlEncoding";
			public const string XmlExistsClause = "XmlExistsClause";
			public const string XmlExistsParameterClause = "XmlExistsParameterClause";
			public const string XmlIndentClause = "XmlIndentClause";
			public const string XmlIndentSize = "XmlIndentSize";
			public const string XmlNameOrEvaluatedName = "XmlNameOrEvaluatedName";
			public const string XmlNamespaceDefinition = "XmlNamespaceDefinition";
			public const string XmlNamespaceOrDefaultNamespace = "XmlNamespaceOrDefaultNamespace";
			public const string XmlNamespaceOrDefaultNamespaceChained = "XmlNamespaceOrDefaultNamespaceChained";
			public const string XmlNamespacesClause = "XmlNamespacesClause";
			public const string XmlParseFunction = "XmlParseFunction";
			public const string XmlParseFunctionParameterClause = "XmlParseFunctionParameterClause";
			public const string XmlPassingClause = "XmlPassingClause";
			public const string XmlQueryClause = "XmlQueryClause";
			public const string XmlQueryParameterClause = "XmlQueryParameterClause";
			public const string XmlRootFunction = "XmlRootFunction";
			public const string XmlRootFunctionExpressionOrNoValue = "XmlRootFunctionExpressionOrNoValue";
			public const string XmlRootFunctionNoValue = "XmlRootFunctionNoValue";
			public const string XmlRootFunctionParameterClause = "XmlRootFunctionParameterClause";
			public const string XmlRootFunctionStandaloneClause = "XmlRootFunctionStandaloneClause";
			public const string XmlRootFunctionStandaloneClauseYesOrNoOrNoValue = "XmlRootFunctionStandaloneClauseYesOrNoOrNoValue";
			public const string XmlSerializeFunction = "XmlSerializeFunction";
			public const string XmlSerializeFunctionParameterClause = "XmlSerializeFunctionParameterClause";
			public const string XmlSimpleFunction = "XmlSimpleFunction";
			public const string XmlSimpleFunctionClause = "XmlSimpleFunctionClause";
			public const string XmlSimpleFunctionParameterClause = "XmlSimpleFunctionParameterClause";
			public const string XmlTableClause = "XmlTableClause";
			public const string XmlTableColumn = "XmlTableColumn";
			public const string XmlTableColumnDefinition = "XmlTableColumnDefinition";
			public const string XmlTableColumnList = "XmlTableColumnList";
			public const string XmlTableColumnListChained = "XmlTableColumnListChained";
			public const string XmlTableColumnListClause = "XmlTableColumnListClause";
			public const string XmlTableColumnPathClause = "XmlTableColumnPathClause";
			public const string XmlTableOptions = "XmlTableOptions";
			public const string XmlTypeSequenceByRef = "XmlTypeSequenceByRef";
			public const string XmlVersion = "XmlVersion";
			public const string YearOrMonth = "YearOrMonth";
			public const string YearToMonthOrDayToSecond = "YearToMonthOrDayToSecond";
			public const string YesOrNo = "YesOrNo";
			public const string YesOrNoOnDataMovement = "YesOrNoOnDataMovement";
			public const string YesOrNoOnLoad = "YesOrNoOnLoad";
			public const string ZoneMapClause = "ZoneMapClause";
		}


		/// <summary>
		/// This class provides all available terminal IDs.
		/// </summary>
		public static class Terminals
		{
			public const string A = "A";
			public const string Access = "Access";
			public const string Accessible = "Accessible";
			public const string Account = "Account";
			public const string Add = "Add";
			public const string Admin = "Admin";
			public const string Advanced = "Advanced";
			public const string Advise = "Advise";
			public const string After = "After";
			public const string Aggregate = "Aggregate";
			public const string All = "All";
			public const string Allocate = "Allocate";
			public const string Allow = "Allow";
			public const string Alter = "Alter";
			public const string Always = "Always";
			public const string Analyze = "Analyze";
			public const string And = "And";
			public const string Any = "Any";
			public const string AnySchema = "AnySchema";
			public const string Apply = "Apply";
			public const string Archival = "Archival";
			public const string Archive = "Archive";
			public const string Are = "Are";
			public const string Array = "Array";
			public const string As = "As";
			public const string Asc = "Asc";
			public const string Ascii = "Ascii";
			public const string AssignmentOperator = "AssignmentOperator";
			public const string Associate = "Associate";
			public const string Asterisk = "Asterisk";
			public const string Asynchronous = "Asynchronous";
			public const string At = "At";
			public const string AtCharacter = "AtCharacter";
			public const string Attribute = "Attribute";
			public const string Audit = "Audit";
			public const string Authenticated = "Authenticated";
			public const string Authentication = "Authentication";
			public const string Authorization = "Authorization";
			public const string AuthorizationIdentity = "AuthorizationIdentity";
			public const string Auto = "Auto";
			public const string AutoAllocate = "AutoAllocate";
			public const string AutoExtend = "AutoExtend";
			public const string Automatic = "Automatic";
			public const string AutonomousTransaction = "AutonomousTransaction";
			public const string Avg = "Avg";
			public const string Backup = "Backup";
			public const string BadFile = "BadFile";
			public const string Basic = "Basic";
			public const string BasicFile = "BasicFile";
			public const string Batch = "Batch";
			public const string Before = "Before";
			public const string Begin = "Begin";
			public const string Beginning = "Beginning";
			public const string Bequeath = "Bequeath";
			public const string Between = "Between";
			public const string Big = "Big";
			public const string BigFile = "BigFile";
			public const string BinaryDouble = "BinaryDouble";
			public const string BinaryFloat = "BinaryFloat";
			public const string BinaryInteger = "BinaryInteger";
			public const string BindVariableIdentifier = "BindVariableIdentifier";
			public const string Bitmap = "Bitmap";
			public const string Blanks = "Blanks";
			public const string Blob = "Blob";
			public const string Block = "Block";
			public const string BlockSize = "BlockSize";
			public const string Body = "Body";
			public const string Both = "Both";
			public const string Breadth = "Breadth";
			public const string BufferCache = "BufferCache";
			public const string BufferPool = "BufferPool";
			public const string Bulk = "Bulk";
			public const string BulkRowCount = "BulkRowCount";
			public const string By = "By";
			public const string Byte = "Byte";
			public const string ByteOrderMark = "ByteOrderMark";
			public const string Bytes = "Bytes";
			public const string C = "C";
			public const string Cache = "Cache";
			public const string Call = "Call";
			public const string Capacity = "Capacity";
			public const string Cascade = "Cascade";
			public const string Case = "Case";
			public const string Cast = "Cast";
			public const string CellFlashCache = "CellFlashCache";
			public const string Chained = "Chained";
			public const string Change = "Change";
			public const string Char = "Char";
			public const string Character = "Character";
			public const string CharacterCode = "CharacterCode";
			public const string Characters = "Characters";
			public const string CharacterSet = "CharacterSet";
			public const string Check = "Check";
			public const string Checkpoint = "Checkpoint";
			public const string Chunk = "Chunk";
			public const string CircumflexCharacter = "CircumflexCharacter";
			public const string Client = "Client";
			public const string Clob = "Clob";
			public const string Clone = "Clone";
			public const string Close = "Close";
			public const string Cluster = "Cluster";
			public const string Clustering = "Clustering";
			public const string Coalesce = "Coalesce";
			public const string Collect = "Collect";
			public const string Colon = "Colon";
			public const string Column = "Column";
			public const string ColumnAlias = "ColumnAlias";
			public const string Columns = "Columns";
			public const string Comma = "Comma";
			public const string CommaSeparatedValue = "CommaSeparatedValue";
			public const string Comment = "Comment";
			public const string Commit = "Commit";
			public const string Committed = "Committed";
			public const string Compact = "Compact";
			public const string Compatible = "Compatible";
			public const string Compile = "Compile";
			public const string Complete = "Complete";
			public const string CompositeLimit = "CompositeLimit";
			public const string Compound = "Compound";
			public const string Compress = "Compress";
			public const string Compression = "Compression";
			public const string Compute = "Compute";
			public const string Concat = "Concat";
			public const string Conditional = "Conditional";
			public const string Confirm = "Confirm";
			public const string Connect = "Connect";
			public const string ConnectByRoot = "ConnectByRoot";
			public const string ConnectTime = "ConnectTime";
			public const string Consider = "Consider";
			public const string Constant = "Constant";
			public const string Constraint = "Constraint";
			public const string Constraints = "Constraints";
			public const string Constructor = "Constructor";
			public const string Container = "Container";
			public const string ContainerData = "ContainerData";
			public const string Containers = "Containers";
			public const string Content = "Content";
			public const string Contents = "Contents";
			public const string Context = "Context";
			public const string Continue = "Continue";
			public const string ControlFile = "ControlFile";
			public const string Convert = "Convert";
			public const string Cost = "Cost";
			public const string Count = "Count";
			public const string Counted = "Counted";
			public const string CountKeyword = "CountKeyword";
			public const string CpuPerCall = "CpuPerCall";
			public const string CpuPerSession = "CpuPerSession";
			public const string Create = "Create";
			public const string Creation = "Creation";
			public const string Critical = "Critical";
			public const string Cross = "Cross";
			public const string CrossEdition = "CrossEdition";
			public const string Cube = "Cube";
			public const string CumulativeDistribution = "CumulativeDistribution";
			public const string Current = "Current";
			public const string CurrentUser = "CurrentUser";
			public const string Cursor = "Cursor";
			public const string CursorIdentifier = "CursorIdentifier";
			public const string Cycle = "Cycle";
			public const string Dangling = "Dangling";
			public const string Data = "Data";
			public const string Database = "Database";
			public const string DatabaseLinkIdentifier = "DatabaseLinkIdentifier";
			public const string DatabaseRoleChange = "DatabaseRoleChange";
			public const string DatabaseTimezone = "DatabaseTimezone";
			public const string DataBlockAddress = "DataBlockAddress";
			public const string DataDefinitionLanguage = "DataDefinitionLanguage";
			public const string Datafile = "Datafile";
			public const string Datafiles = "Datafiles";
			public const string DataManipulationLanguage = "DataManipulationLanguage";
			public const string DataTypeIdentifier = "DataTypeIdentifier";
			public const string Date = "Date";
			public const string DateCache = "DateCache";
			public const string DateFormat = "DateFormat";
			public const string Day = "Day";
			public const string Days = "Days";
			public const string DayToSecond = "DayToSecond";
			public const string DbaRecycleBin = "DbaRecycleBin";
			public const string Deallocate = "Deallocate";
			public const string Debug = "Debug";
			public const string Dec = "Dec";
			public const string Decimal = "Decimal";
			public const string Declare = "Declare";
			public const string Decrement = "Decrement";
			public const string Decrypt = "Decrypt";
			public const string Deduplicate = "Deduplicate";
			public const string Default = "Default";
			public const string DefaultIf = "DefaultIf";
			public const string Defaults = "Defaults";
			public const string Deferrable = "Deferrable";
			public const string Deferred = "Deferred";
			public const string Define = "Define";
			public const string Definer = "Definer";
			public const string Delete = "Delete";
			public const string DeleteAll = "DeleteAll";
			public const string Deleting = "Deleting";
			public const string Delimited = "Delimited";
			public const string Demand = "Demand";
			public const string DenseRank = "DenseRank";
			public const string Depth = "Depth";
			public const string Desc = "Desc";
			public const string Deterministic = "Deterministic";
			public const string Dimension = "Dimension";
			public const string DirectInputOutput = "DirectInputOutput";
			public const string DirectLoad = "DirectLoad";
			public const string DirectNetworkFileSystemDisable = "DirectNetworkFileSystemDisable";
			public const string DirectNetworkFileSystemEnable = "DirectNetworkFileSystemEnable";
			public const string DirectNetworkFileSystemReadBuffers = "DirectNetworkFileSystemReadBuffers";
			public const string Directory = "Directory";
			public const string Disable = "Disable";
			public const string DisableAll = "DisableAll";
			public const string Disabled = "Disabled";
			public const string DisableDirectoryLinkCheck = "DisableDirectoryLinkCheck";
			public const string Disallow = "Disallow";
			public const string DiscardFile = "DiscardFile";
			public const string Disconnect = "Disconnect";
			public const string Dissociate = "Dissociate";
			public const string Distinct = "Distinct";
			public const string Distribute = "Distribute";
			public const string Distributed = "Distributed";
			public const string Document = "Document";
			public const string DollarCharacter = "DollarCharacter";
			public const string Dot = "Dot";
			public const string Double = "Double";
			public const string DoubleDotOperator = "DoubleDotOperator";
			public const string DoubleQuotedStringLiteral = "DoubleQuotedStringLiteral";
			public const string Drop = "Drop";
			public const string Dump = "Dump";
			public const string Duplicate = "Duplicate";
			public const string Each = "Each";
			public const string Edition = "Edition";
			public const string Editionable = "Editionable";
			public const string Editioning = "Editioning";
			public const string Editions = "Editions";
			public const string Element = "Element";
			public const string Else = "Else";
			public const string ElseIf = "ElseIf";
			public const string Embedded = "Embedded";
			public const string Empty = "Empty";
			public const string Enable = "Enable";
			public const string EnableAll = "EnableAll";
			public const string Enabled = "Enabled";
			public const string Enclosed = "Enclosed";
			public const string Encoding = "Encoding";
			public const string Encrypt = "Encrypt";
			public const string Encryption = "Encryption";
			public const string End = "End";
			public const string Endian = "Endian";
			public const string Enforced = "Enforced";
			public const string Enterprise = "Enterprise";
			public const string EntityEscaping = "EntityEscaping";
			public const string Error = "Error";
			public const string Errors = "Errors";
			public const string Escape = "Escape";
			public const string Estimate = "Estimate";
			public const string Evaluate = "Evaluate";
			public const string EvaluatedName = "EvaluatedName";
			public const string Events = "Events";
			public const string Exa = "Exa";
			public const string Except = "Except";
			public const string Exception = "Exception";
			public const string ExceptionIdentifier = "ExceptionIdentifier";
			public const string ExceptionInit = "ExceptionInit";
			public const string Exceptions = "Exceptions";
			public const string ExclamationMark = "ExclamationMark";
			public const string Exclude = "Exclude";
			public const string Excluding = "Excluding";
			public const string Exclusive = "Exclusive";
			public const string Execute = "Execute";
			public const string Exists = "Exists";
			public const string Exit = "Exit";
			public const string Expire = "Expire";
			public const string Explain = "Explain";
			public const string Extent = "Extent";
			public const string External = "External";
			public const string Externally = "Externally";
			public const string Extract = "Extract";
			public const string FailedLoginAttempts = "FailedLoginAttempts";
			public const string False = "False";
			public const string Fast = "Fast";
			public const string Fetch = "Fetch";
			public const string Field = "Field";
			public const string FieldNames = "FieldNames";
			public const string Fields = "Fields";
			public const string File = "File";
			public const string Files = "Files";
			public const string FileSystemLikeLogging = "FileSystemLikeLogging";
			public const string Final = "Final";
			public const string First = "First";
			public const string FirstValue = "FirstValue";
			public const string Fixed = "Fixed";
			public const string Flashback = "Flashback";
			public const string FlashCache = "FlashCache";
			public const string Float = "Float";
			public const string Flush = "Flush";
			public const string Following = "Following";
			public const string Follows = "Follows";
			public const string For = "For";
			public const string ForAll = "ForAll";
			public const string Force = "Force";
			public const string Foreign = "Foreign";
			public const string Format = "Format";
			public const string Forward = "Forward";
			public const string Found = "Found";
			public const string FreeList = "FreeList";
			public const string FreeLists = "FreeLists";
			public const string FreePools = "FreePools";
			public const string Fresh = "Fresh";
			public const string From = "From";
			public const string Full = "Full";
			public const string Function = "Function";
			public const string Generated = "Generated";
			public const string Giga = "Giga";
			public const string Global = "Global";
			public const string Globally = "Globally";
			public const string GoTo = "GoTo";
			public const string Grant = "Grant";
			public const string Group = "Group";
			public const string Grouping = "Grouping";
			public const string Groups = "Groups";
			public const string Guarantee = "Guarantee";
			public const string Guard = "Guard";
			public const string Hash = "Hash";
			public const string HashKeys = "HashKeys";
			public const string Having = "Having";
			public const string Heap = "Heap";
			public const string Hide = "Hide";
			public const string Hierarchy = "Hierarchy";
			public const string High = "High";
			public const string Hour = "Hour";
			public const string Id = "Id";
			public const string Identified = "Identified";
			public const string Identifier = "Identifier";
			public const string Identity = "Identity";
			public const string IdleTime = "IdleTime";
			public const string If = "If";
			public const string Ignore = "Ignore";
			public const string IgnoreCharactersAfterEndOfRecord = "IgnoreCharactersAfterEndOfRecord";
			public const string Immediate = "Immediate";
			public const string In = "In";
			public const string Include = "Include";
			public const string Including = "Including";
			public const string Increment = "Increment";
			public const string Indent = "Indent";
			public const string Index = "Index";
			public const string Indexed = "Indexed";
			public const string Indexes = "Indexes";
			public const string Indexing = "Indexing";
			public const string IndexType = "IndexType";
			public const string Indicator = "Indicator";
			public const string IndicatorVariableIdentifier = "IndicatorVariableIdentifier";
			public const string Indices = "Indices";
			public const string InformationLifecycleManagement = "InformationLifecycleManagement";
			public const string Initial = "Initial";
			public const string Initially = "Initially";
			public const string InitialTransactions = "InitialTransactions";
			public const string Inline = "Inline";
			public const string InMemory = "InMemory";
			public const string Inner = "Inner";
			public const string InputOutputOptions = "InputOutputOptions";
			public const string Insert = "Insert";
			public const string Inserting = "Inserting";
			public const string Instance = "Instance";
			public const string Instantiable = "Instantiable";
			public const string Instead = "Instead";
			public const string Integer = "Integer";
			public const string IntegerLiteral = "IntegerLiteral";
			public const string Interleaved = "Interleaved";
			public const string Intersect = "Intersect";
			public const string Interval = "Interval";
			public const string Into = "Into";
			public const string Invalidate = "Invalidate";
			public const string Invisible = "Invisible";
			public const string Is = "Is";
			public const string Isolation = "Isolation";
			public const string IsOpen = "IsOpen";
			public const string Iterate = "Iterate";
			public const string Java = "Java";
			public const string Join = "Join";
			public const string Json = "Json";
			public const string JsonExists = "JsonExists";
			public const string JsonQuery = "JsonQuery";
			public const string JsonTable = "JsonTable";
			public const string JsonValue = "JsonValue";
			public const string Keep = "Keep";
			public const string KeepDuplicates = "KeepDuplicates";
			public const string Key = "Key";
			public const string Keys = "Keys";
			public const string Kill = "Kill";
			public const string Kilo = "Kilo";
			public const string LabelIdentifier = "LabelIdentifier";
			public const string Lag = "Lag";
			public const string Language = "Language";
			public const string LargeObject = "LargeObject";
			public const string LargeObjectFile = "LargeObjectFile";
			public const string Last = "Last";
			public const string LastValue = "LastValue";
			public const string Lateral = "Lateral";
			public const string Latest = "Latest";
			public const string Lax = "Lax";
			public const string Layer = "Layer";
			public const string Lead = "Lead";
			public const string Leading = "Leading";
			public const string Left = "Left";
			public const string LeftBrace = "LeftBrace";
			public const string LeftBracket = "LeftBracket";
			public const string LeftLabelMarker = "LeftLabelMarker";
			public const string LeftParenthesis = "LeftParenthesis";
			public const string LeftRightTrim = "LeftRightTrim";
			public const string LeftTrim = "LeftTrim";
			public const string Less = "Less";
			public const string Level = "Level";
			public const string Levels = "Levels";
			public const string Library = "Library";
			public const string Like = "Like";
			public const string LikeUcs2 = "LikeUcs2";
			public const string LikeUcs4 = "LikeUcs4";
			public const string LikeUnicode = "LikeUnicode";
			public const string Limit = "Limit";
			public const string Linear = "Linear";
			public const string Link = "Link";
			public const string List = "List";
			public const string ListAggregation = "ListAggregation";
			public const string Little = "Little";
			public const string Load = "Load";
			public const string Local = "Local";
			public const string Location = "Location";
			public const string Locator = "Locator";
			public const string Lock = "Lock";
			public const string Locked = "Locked";
			public const string Locking = "Locking";
			public const string Log = "Log";
			public const string LogFile = "LogFile";
			public const string Logging = "Logging";
			public const string LogicalReadsPerCall = "LogicalReadsPerCall";
			public const string LogicalReadsPerSession = "LogicalReadsPerSession";
			public const string Logoff = "Logoff";
			public const string Logon = "Logon";
			public const string Long = "Long";
			public const string Loop = "Loop";
			public const string Low = "Low";
			public const string Main = "Main";
			public const string Management = "Management";
			public const string Manual = "Manual";
			public const string Map = "Map";
			public const string Mapping = "Mapping";
			public const string Mask = "Mask";
			public const string Master = "Master";
			public const string Match = "Match";
			public const string Matched = "Matched";
			public const string Matches = "Matches";
			public const string MatchRecognize = "MatchRecognize";
			public const string Materialized = "Materialized";
			public const string MathDivide = "MathDivide";
			public const string MathEquals = "MathEquals";
			public const string MathFactor = "MathFactor";
			public const string MathGreatherThan = "MathGreatherThan";
			public const string MathGreatherThanOrEquals = "MathGreatherThanOrEquals";
			public const string MathInfinite = "MathInfinite";
			public const string MathLessThan = "MathLessThan";
			public const string MathLessThanOrEquals = "MathLessThanOrEquals";
			public const string MathMinus = "MathMinus";
			public const string MathNotANumber = "MathNotANumber";
			public const string MathNotEqualsC = "MathNotEqualsC";
			public const string MathNotEqualsCircumflex = "MathNotEqualsCircumflex";
			public const string MathNotEqualsSql = "MathNotEqualsSql";
			public const string MathPlus = "MathPlus";
			public const string Max = "Max";
			public const string MaximumExtents = "MaximumExtents";
			public const string MaximumSize = "MaximumSize";
			public const string MaximumTransactions = "MaximumTransactions";
			public const string MaximumValue = "MaximumValue";
			public const string Measures = "Measures";
			public const string Medium = "Medium";
			public const string Mega = "Mega";
			public const string Member = "Member";
			public const string MemberFunctionIdentifier = "MemberFunctionIdentifier";
			public const string Memory = "Memory";
			public const string MemoryCompression = "MemoryCompression";
			public const string Merge = "Merge";
			public const string Migrate = "Migrate";
			public const string Migration = "Migration";
			public const string Min = "Min";
			public const string Minimize = "Minimize";
			public const string Minimum = "Minimum";
			public const string MinimumExtents = "MinimumExtents";
			public const string MinimumValue = "MinimumValue";
			public const string Mining = "Mining";
			public const string Minute = "Minute";
			public const string Missing = "Missing";
			public const string Mode = "Mode";
			public const string Model = "Model";
			public const string Modification = "Modification";
			public const string Modify = "Modify";
			public const string Month = "Month";
			public const string Months = "Months";
			public const string Move = "Move";
			public const string Movement = "Movement";
			public const string Multiset = "Multiset";
			public const string Name = "Name";
			public const string National = "National";
			public const string NationalCharacterSet = "NationalCharacterSet";
			public const string Natural = "Natural";
			public const string NChar = "NChar";
			public const string NegationOrNull = "NegationOrNull";
			public const string Nested = "Nested";
			public const string New = "New";
			public const string NewLine = "NewLine";
			public const string Next = "Next";
			public const string No = "No";
			public const string NoAudit = "NoAudit";
			public const string NoBadFile = "NoBadFile";
			public const string NoCache = "NoCache";
			public const string NoCheck = "NoCheck";
			public const string Nocompress = "Nocompress";
			public const string NoCompress = "NoCompress";
			public const string NoCopy = "NoCopy";
			public const string NoCycle = "NoCycle";
			public const string NoDirectInputOutput = "NoDirectInputOutput";
			public const string NoDiscardFile = "NoDiscardFile";
			public const string NoEntityEscaping = "NoEntityEscaping";
			public const string NoGuarantee = "NoGuarantee";
			public const string NoKeep = "NoKeep";
			public const string NoLogFile = "NoLogFile";
			public const string NoLogging = "NoLogging";
			public const string NoMapping = "NoMapping";
			public const string NoMaximumValue = "NoMaximumValue";
			public const string NoMinimize = "NoMinimize";
			public const string NoMinimumValue = "NoMinimumValue";
			public const string NonAvailableValues = "NonAvailableValues";
			public const string None = "None";
			public const string NonEditionable = "NonEditionable";
			public const string NonSchema = "NonSchema";
			public const string NoNullIf = "NoNullIf";
			public const string NoOrder = "NoOrder";
			public const string NoParallel = "NoParallel";
			public const string NoPartition = "NoPartition";
			public const string NoRely = "NoRely";
			public const string NoReplay = "NoReplay";
			public const string Normal = "Normal";
			public const string NoRowDependencies = "NoRowDependencies";
			public const string NoSchemaCheck = "NoSchemaCheck";
			public const string NoSort = "NoSort";
			public const string NoSwitch = "NoSwitch";
			public const string Not = "Not";
			public const string NotFound = "NotFound";
			public const string Nothing = "Nothing";
			public const string NoTrim = "NoTrim";
			public const string NoValidate = "NoValidate";
			public const string Nowait = "Nowait";
			public const string Null = "Null";
			public const string NullIf = "NullIf";
			public const string Nulls = "Nulls";
			public const string Number = "Number";
			public const string NumberLiteral = "NumberLiteral";
			public const string Numeric = "Numeric";
			public const string NVarchar = "NVarchar";
			public const string NVarchar2 = "NVarchar2";
			public const string Object = "Object";
			public const string ObjectAlias = "ObjectAlias";
			public const string ObjectId = "ObjectId";
			public const string ObjectIdentifier = "ObjectIdentifier";
			public const string ObjectIdentifierIndex = "ObjectIdentifierIndex";
			public const string Of = "Of";
			public const string Off = "Off";
			public const string Offline = "Offline";
			public const string Offset = "Offset";
			public const string Old = "Old";
			public const string Oltp = "Oltp";
			public const string Omit = "Omit";
			public const string On = "On";
			public const string One = "One";
			public const string Online = "Online";
			public const string Only = "Only";
			public const string Opaque = "Opaque";
			public const string Open = "Open";
			public const string OperationCode = "OperationCode";
			public const string Operations = "Operations";
			public const string Operator = "Operator";
			public const string OperatorConcatenation = "OperatorConcatenation";
			public const string Option = "Option";
			public const string Optionally = "Optionally";
			public const string OptionalParameterOperator = "OptionalParameterOperator";
			public const string Or = "Or";
			public const string OracleDataPump = "OracleDataPump";
			public const string OracleDate = "OracleDate";
			public const string OracleLoader = "OracleLoader";
			public const string OracleNumber = "OracleNumber";
			public const string Order = "Order";
			public const string Ordinality = "Ordinality";
			public const string Organization = "Organization";
			public const string Out = "Out";
			public const string Outer = "Outer";
			public const string Over = "Over";
			public const string Overflow = "Overflow";
			public const string Overlaps = "Overlaps";
			public const string Override = "Override";
			public const string Overriding = "Overriding";
			public const string Package = "Package";
			public const string Parallel = "Parallel";
			public const string ParallelEnable = "ParallelEnable";
			public const string ParameterFile = "ParameterFile";
			public const string ParameterIdentifier = "ParameterIdentifier";
			public const string Parameters = "Parameters";
			public const string Parent = "Parent";
			public const string Partial = "Partial";
			public const string Partition = "Partition";
			public const string Partitions = "Partitions";
			public const string Passing = "Passing";
			public const string Password = "Password";
			public const string PasswordGraceTime = "PasswordGraceTime";
			public const string PasswordLifeTime = "PasswordLifeTime";
			public const string PasswordLockTime = "PasswordLockTime";
			public const string PasswordReuseMax = "PasswordReuseMax";
			public const string PasswordReuseTime = "PasswordReuseTime";
			public const string PasswordVerifyFunction = "PasswordVerifyFunction";
			public const string Past = "Past";
			public const string Patch = "Patch";
			public const string Path = "Path";
			public const string Pattern = "Pattern";
			public const string Pctfree = "Pctfree";
			public const string Per = "Per";
			public const string Percent = "Percent";
			public const string PercentCharacter = "PercentCharacter";
			public const string PercentFree = "PercentFree";
			public const string PercentileContinuousDistribution = "PercentileContinuousDistribution";
			public const string PercentileDiscreteDistribution = "PercentileDiscreteDistribution";
			public const string PercentIncrease = "PercentIncrease";
			public const string PercentThreshold = "PercentThreshold";
			public const string PercentUsed = "PercentUsed";
			public const string PercentVersion = "PercentVersion";
			public const string Period = "Period";
			public const string Permanent = "Permanent";
			public const string Permute = "Permute";
			public const string Peta = "Peta";
			public const string Pipe = "Pipe";
			public const string Pipelined = "Pipelined";
			public const string Pivot = "Pivot";
			public const string Plan = "Plan";
			public const string PlsInteger = "PlsInteger";
			public const string PlSqlCompilationParameter = "PlSqlCompilationParameter";
			public const string PlSqlConditionalCompilationElse = "PlSqlConditionalCompilationElse";
			public const string PlSqlConditionalCompilationElseIf = "PlSqlConditionalCompilationElseIf";
			public const string PlSqlConditionalCompilationEnd = "PlSqlConditionalCompilationEnd";
			public const string PlSqlConditionalCompilationError = "PlSqlConditionalCompilationError";
			public const string PlSqlConditionalCompilationIf = "PlSqlConditionalCompilationIf";
			public const string PlSqlConditionalCompilationThen = "PlSqlConditionalCompilationThen";
			public const string PlSqlIdentifier = "PlSqlIdentifier";
			public const string Pluggable = "Pluggable";
			public const string Point = "Point";
			public const string Policy = "Policy";
			public const string Position = "Position";
			public const string PostTransaction = "PostTransaction";
			public const string Pragma = "Pragma";
			public const string Precedes = "Precedes";
			public const string Preceding = "Preceding";
			public const string Precision = "Precision";
			public const string Preprocessor = "Preprocessor";
			public const string Preserve = "Preserve";
			public const string Pretty = "Pretty";
			public const string Previous = "Previous";
			public const string Primary = "Primary";
			public const string Prior = "Prior";
			public const string Priority = "Priority";
			public const string PrivateSystemGlobalArea = "PrivateSystemGlobalArea";
			public const string Privileges = "Privileges";
			public const string Procedure = "Procedure";
			public const string Profile = "Profile";
			public const string Public = "Public";
			public const string Purge = "Purge";
			public const string Query = "Query";
			public const string QuestionMark = "QuestionMark";
			public const string Quiesce = "Quiesce";
			public const string Quota = "Quota";
			public const string Raise = "Raise";
			public const string Range = "Range";
			public const string Rank = "Rank";
			public const string Raw = "Raw";
			public const string Read = "Read";
			public const string ReadNoDatabaseState = "ReadNoDatabaseState";
			public const string ReadNoPackageState = "ReadNoPackageState";
			public const string Reads = "Reads";
			public const string ReadSize = "ReadSize";
			public const string Record = "Record";
			public const string Records = "Records";
			public const string RecordsPerBlock = "RecordsPerBlock";
			public const string Recoverable = "Recoverable";
			public const string Recovery = "Recovery";
			public const string Recycle = "Recycle";
			public const string RecycleBin = "RecycleBin";
			public const string Redo = "Redo";
			public const string RedoBlockAddress = "RedoBlockAddress";
			public const string Ref = "Ref";
			public const string Reference = "Reference";
			public const string References = "References";
			public const string Referencing = "Referencing";
			public const string Refresh = "Refresh";
			public const string Register = "Register";
			public const string Reject = "Reject";
			public const string ReKey = "ReKey";
			public const string ReliesOn = "ReliesOn";
			public const string Relocate = "Relocate";
			public const string Rely = "Rely";
			public const string Remove = "Remove";
			public const string Rename = "Rename";
			public const string Repeat = "Repeat";
			public const string Replace = "Replace";
			public const string Required = "Required";
			public const string Reset = "Reset";
			public const string ResetLogs = "ResetLogs";
			public const string Resize = "Resize";
			public const string Resource = "Resource";
			public const string Respect = "Respect";
			public const string Restore = "Restore";
			public const string Restricted = "Restricted";
			public const string RestrictReferences = "RestrictReferences";
			public const string Result = "Result";
			public const string ResultCache = "ResultCache";
			public const string Resumable = "Resumable";
			public const string Resume = "Resume";
			public const string Retention = "Retention";
			public const string Return = "Return";
			public const string Returning = "Returning";
			public const string Reuse = "Reuse";
			public const string Reverse = "Reverse";
			public const string Revoke = "Revoke";
			public const string Rewrite = "Rewrite";
			public const string Right = "Right";
			public const string RightBrace = "RightBrace";
			public const string RightBracket = "RightBracket";
			public const string RightLabelMarker = "RightLabelMarker";
			public const string RightParenthesis = "RightParenthesis";
			public const string RightTrim = "RightTrim";
			public const string Role = "Role";
			public const string Roles = "Roles";
			public const string Rollback = "Rollback";
			public const string Rolling = "Rolling";
			public const string Rollup = "Rollup";
			public const string Row = "Row";
			public const string RowCount = "RowCount";
			public const string RowDependencies = "RowDependencies";
			public const string RowIdDataType = "RowIdDataType";
			public const string RowIdPseudocolumn = "RowIdPseudocolumn";
			public const string RowNumberPseudocolumn = "RowNumberPseudocolumn";
			public const string Rows = "Rows";
			public const string RowType = "RowType";
			public const string Rules = "Rules";
			public const string Running = "Running";
			public const string Salt = "Salt";
			public const string Sample = "Sample";
			public const string Save = "Save";
			public const string Savepoint = "Savepoint";
			public const string Schema = "Schema";
			public const string SchemaCheck = "SchemaCheck";
			public const string SchemaIdentifier = "SchemaIdentifier";
			public const string Scope = "Scope";
			public const string Search = "Search";
			public const string Second = "Second";
			public const string SecureFile = "SecureFile";
			public const string Seed = "Seed";
			public const string Segment = "Segment";
			public const string Select = "Select";
			public const string Self = "Self";
			public const string Semicolon = "Semicolon";
			public const string Sequence = "Sequence";
			public const string Sequential = "Sequential";
			public const string Serializable = "Serializable";
			public const string SeriallyReusable = "SeriallyReusable";
			public const string ServerError = "ServerError";
			public const string ServerParameterFile = "ServerParameterFile";
			public const string Session = "Session";
			public const string SessionId = "SessionId";
			public const string SessionsPerUser = "SessionsPerUser";
			public const string SessionTimezone = "SessionTimezone";
			public const string Set = "Set";
			public const string SetMinus = "SetMinus";
			public const string Sets = "Sets";
			public const string Settings = "Settings";
			public const string Share = "Share";
			public const string Shared = "Shared";
			public const string SharedPool = "SharedPool";
			public const string Show = "Show";
			public const string Shrink = "Shrink";
			public const string Shutdown = "Shutdown";
			public const string Siblings = "Siblings";
			public const string Single = "Single";
			public const string Size = "Size";
			public const string Sizes = "Sizes";
			public const string Skip = "Skip";
			public const string SmallFile = "SmallFile";
			public const string Smallint = "Smallint";
			public const string Snapshot = "Snapshot";
			public const string Some = "Some";
			public const string Sort = "Sort";
			public const string Source = "Source";
			public const string Space = "Space";
			public const string Specification = "Specification";
			public const string SqlLoaderTrim = "SqlLoaderTrim";
			public const string SqlPlusTerminator = "SqlPlusTerminator";
			public const string Standalone = "Standalone";
			public const string StandardDeviation = "StandardDeviation";
			public const string Standby = "Standby";
			public const string Start = "Start";
			public const string StartOf = "StartOf";
			public const string Startup = "Startup";
			public const string Statement = "Statement";
			public const string StatementId = "StatementId";
			public const string Static = "Static";
			public const string Statistics = "Statistics";
			public const string Stop = "Stop";
			public const string Storage = "Storage";
			public const string Store = "Store";
			public const string Strict = "Strict";
			public const string String = "String";
			public const string StringLiteral = "StringLiteral";
			public const string Structure = "Structure";
			public const string SubMultiset = "SubMultiset";
			public const string Subpartition = "Subpartition";
			public const string Subpartitions = "Subpartitions";
			public const string Subset = "Subset";
			public const string Substitutable = "Substitutable";
			public const string SubType = "SubType";
			public const string Successful = "Successful";
			public const string Sum = "Sum";
			public const string Supplemental = "Supplemental";
			public const string Suspend = "Suspend";
			public const string Switch = "Switch";
			public const string Sync = "Sync";
			public const string Synchronous = "Synchronous";
			public const string Synonym = "Synonym";
			public const string System = "System";
			public const string SystemChangeNumber = "SystemChangeNumber";
			public const string SystemDate = "SystemDate";
			public const string Table = "Table";
			public const string Tables = "Tables";
			public const string Tablespace = "Tablespace";
			public const string Tempfile = "Tempfile";
			public const string Template = "Template";
			public const string Temporary = "Temporary";
			public const string Tera = "Tera";
			public const string Terminated = "Terminated";
			public const string Territory = "Territory";
			public const string Than = "Than";
			public const string The = "The";
			public const string Then = "Then";
			public const string These = "These";
			public const string Through = "Through";
			public const string Tier = "Tier";
			public const string Ties = "Ties";
			public const string Time = "Time";
			public const string Timeout = "Timeout";
			public const string Timestamp = "Timestamp";
			public const string TimezoneAbbreviation = "TimezoneAbbreviation";
			public const string TimezoneHour = "TimezoneHour";
			public const string TimezoneMinute = "TimezoneMinute";
			public const string TimezoneRegion = "TimezoneRegion";
			public const string To = "To";
			public const string Trailing = "Trailing";
			public const string Transaction = "Transaction";
			public const string Transforms = "Transforms";
			public const string Treat = "Treat";
			public const string Trigger = "Trigger";
			public const string Triggers = "Triggers";
			public const string Trim = "Trim";
			public const string True = "True";
			public const string Truncate = "Truncate";
			public const string Trust = "Trust";
			public const string Trusted = "Trusted";
			public const string Type = "Type";
			public const string TypeIdentifier = "TypeIdentifier";
			public const string Unbounded = "Unbounded";
			public const string Unconditional = "Unconditional";
			public const string Under = "Under";
			public const string Undo = "Undo";
			public const string Uniform = "Uniform";
			public const string Union = "Union";
			public const string Unique = "Unique";
			public const string UniversalRowId = "UniversalRowId";
			public const string Unlimited = "Unlimited";
			public const string Unlock = "Unlock";
			public const string Unmatched = "Unmatched";
			public const string Unpacked = "Unpacked";
			public const string Unpivot = "Unpivot";
			public const string Unplug = "Unplug";
			public const string Unquiesce = "Unquiesce";
			public const string Unrecoverable = "Unrecoverable";
			public const string Unsigned = "Unsigned";
			public const string Until = "Until";
			public const string Unusable = "Unusable";
			public const string Unused = "Unused";
			public const string Update = "Update";
			public const string Updated = "Updated";
			public const string Updating = "Updating";
			public const string Upgrade = "Upgrade";
			public const string Upsert = "Upsert";
			public const string Usable = "Usable";
			public const string Use = "Use";
			public const string User = "User";
			public const string UserDefinedFunction = "UserDefinedFunction";
			public const string UserId = "UserId";
			public const string Users = "Users";
			public const string Using = "Using";
			public const string Validate = "Validate";
			public const string Value = "Value";
			public const string Values = "Values";
			public const string Varchar = "Varchar";
			public const string Varchar2 = "Varchar2";
			public const string VarcharC = "VarcharC";
			public const string Variable = "Variable";
			public const string VariableElementArray = "VariableElementArray";
			public const string Variance = "Variance";
			public const string Varraw = "Varraw";
			public const string VarrawC = "VarrawC";
			public const string Varying = "Varying";
			public const string Version = "Version";
			public const string Versions = "Versions";
			public const string VerticalBarCharacter = "VerticalBarCharacter";
			public const string View = "View";
			public const string Virtual = "Virtual";
			public const string Visible = "Visible";
			public const string Wait = "Wait";
			public const string Wallet = "Wallet";
			public const string WellFormed = "WellFormed";
			public const string When = "When";
			public const string Whenever = "Whenever";
			public const string Where = "Where";
			public const string While = "While";
			public const string Whitespace = "Whitespace";
			public const string With = "With";
			public const string Within = "Within";
			public const string Without = "Without";
			public const string Work = "Work";
			public const string Wrapped = "Wrapped";
			public const string WrappedToken = "WrappedToken";
			public const string Wrapper = "Wrapper";
			public const string Write = "Write";
			public const string WriteNoDatabaseState = "WriteNoDatabaseState";
			public const string WriteNoPackageState = "WriteNoPackageState";
			public const string Xml = "Xml";
			public const string XmlAggregate = "XmlAggregate";
			public const string XmlAlias = "XmlAlias";
			public const string XmlAttributes = "XmlAttributes";
			public const string XmlCast = "XmlCast";
			public const string XmlColumnValue = "XmlColumnValue";
			public const string XmlElement = "XmlElement";
			public const string XmlExists = "XmlExists";
			public const string XmlForest = "XmlForest";
			public const string XmlNamespaces = "XmlNamespaces";
			public const string XmlParse = "XmlParse";
			public const string XmlQuery = "XmlQuery";
			public const string XmlRoot = "XmlRoot";
			public const string XmlSerialize = "XmlSerialize";
			public const string XmlTable = "XmlTable";
			public const string XmlType = "XmlType";
			public const string Year = "Year";
			public const string Years = "Years";
			public const string YearToMonth = "YearToMonth";
			public const string Yes = "Yes";
			public const string Zone = "Zone";
			public const string Zoned = "Zoned";
			public const string ZoneMap = "ZoneMap";
			
			public static IReadOnlyDictionary<string, string> AllTerminals => AllTerminalsInternal;
		}

		/// <summary>
		/// This class provides all available fixed terminal values.
		/// </summary>
		public static class TerminalValues
		{
			public const string A = "A";
			public const string Access = "ACCESS";
			public const string Accessible = "ACCESSIBLE";
			public const string Account = "ACCOUNT";
			public const string Add = "ADD";
			public const string Admin = "ADMIN";
			public const string Advanced = "ADVANCED";
			public const string Advise = "ADVISE";
			public const string After = "AFTER";
			public const string Aggregate = "AGGREGATE";
			public const string All = "ALL";
			public const string Allocate = "ALLOCATE";
			public const string Allow = "ALLOW";
			public const string Alter = "ALTER";
			public const string Always = "ALWAYS";
			public const string Analyze = "ANALYZE";
			public const string And = "AND";
			public const string Any = "ANY";
			public const string AnySchema = "ANYSCHEMA";
			public const string Apply = "APPLY";
			public const string Archival = "ARCHIVAL";
			public const string Archive = "ARCHIVE";
			public const string Are = "ARE";
			public const string Array = "ARRAY";
			public const string As = "AS";
			public const string Asc = "ASC";
			public const string Ascii = "ASCII";
			public const string AssignmentOperator = ":=";
			public const string Associate = "ASSOCIATE";
			public const string Asterisk = "*";
			public const string Asynchronous = "ASYNCHRONOUS";
			public const string At = "AT";
			public const string AtCharacter = "@";
			public const string Attribute = "ATTRIBUTE";
			public const string Audit = "AUDIT";
			public const string Authenticated = "AUTHENTICATED";
			public const string Authentication = "AUTHENTICATION";
			public const string Authorization = "AUTHORIZATION";
			public const string AuthorizationIdentity = "AUTHID";
			public const string Auto = "AUTO";
			public const string AutoAllocate = "AUTOALLOCATE";
			public const string AutoExtend = "AUTOEXTEND";
			public const string Automatic = "AUTOMATIC";
			public const string AutonomousTransaction = "AUTONOMOUS_TRANSACTION";
			public const string Avg = "AVG";
			public const string Backup = "BACKUP";
			public const string BadFile = "BADFILE";
			public const string Basic = "BASIC";
			public const string BasicFile = "BASICFILE";
			public const string Batch = "BATCH";
			public const string Before = "BEFORE";
			public const string Begin = "BEGIN";
			public const string Beginning = "BEGINNING";
			public const string Bequeath = "BEQUEATH";
			public const string Between = "BETWEEN";
			public const string Big = "BIG";
			public const string BigFile = "BIGFILE";
			public const string BinaryDouble = "BINARY_DOUBLE";
			public const string BinaryFloat = "BINARY_FLOAT";
			public const string BinaryInteger = "BINARY_INTEGER";
			public const string Bitmap = "BITMAP";
			public const string Blanks = "BLANKS";
			public const string Blob = "BLOB";
			public const string Block = "BLOCK";
			public const string BlockSize = "BLOCKSIZE";
			public const string Body = "BODY";
			public const string Both = "BOTH";
			public const string Breadth = "BREADTH";
			public const string BufferCache = "BUFFER_CACHE";
			public const string BufferPool = "BUFFER_POOL";
			public const string Bulk = "BULK";
			public const string BulkRowCount = "BULK_ROWCOUNT";
			public const string By = "BY";
			public const string Byte = "BYTE";
			public const string ByteOrderMark = "BYTEORDERMARK";
			public const string Bytes = "BYTES";
			public const string C = "C";
			public const string Cache = "CACHE";
			public const string Call = "CALL";
			public const string Capacity = "CAPACITY";
			public const string Cascade = "CASCADE";
			public const string Case = "CASE";
			public const string Cast = "CAST";
			public const string CellFlashCache = "CELL_FLASH_CACHE";
			public const string Chained = "CHAINED";
			public const string Change = "CHANGE";
			public const string Char = "CHAR";
			public const string Character = "CHARACTER";
			public const string CharacterCode = "CHR";
			public const string Characters = "CHARACTERS";
			public const string CharacterSet = "CHARACTERSET";
			public const string Check = "CHECK";
			public const string Checkpoint = "CHECKPOINT";
			public const string Chunk = "CHUNK";
			public const string CircumflexCharacter = "^";
			public const string Client = "CLIENT";
			public const string Clob = "CLOB";
			public const string Clone = "CLONE";
			public const string Close = "CLOSE";
			public const string Cluster = "CLUSTER";
			public const string Clustering = "CLUSTERING";
			public const string Coalesce = "COALESCE";
			public const string Collect = "COLLECT";
			public const string Colon = ":";
			public const string Column = "COLUMN";
			public const string Columns = "COLUMNS";
			public const string Comma = ",";
			public const string CommaSeparatedValue = "CSV";
			public const string Comment = "COMMENT";
			public const string Commit = "COMMIT";
			public const string Committed = "COMMITTED";
			public const string Compact = "COMPACT";
			public const string Compatible = "COMPATIBLE";
			public const string Compile = "COMPILE";
			public const string Complete = "COMPLETE";
			public const string CompositeLimit = "COMPOSITE_LIMIT";
			public const string Compound = "COMPOUND";
			public const string Compress = "COMPRESS";
			public const string Compression = "COMPRESSION";
			public const string Compute = "COMPUTE";
			public const string Concat = "CONCAT";
			public const string Conditional = "CONDITIONAL";
			public const string Confirm = "CONFIRM";
			public const string Connect = "CONNECT";
			public const string ConnectByRoot = "CONNECT_BY_ROOT";
			public const string ConnectTime = "CONNECT_TIME";
			public const string Consider = "CONSIDER";
			public const string Constant = "CONSTANT";
			public const string Constraint = "CONSTRAINT";
			public const string Constraints = "CONSTRAINTS";
			public const string Constructor = "CONSTRUCTOR";
			public const string Container = "CONTAINER";
			public const string ContainerData = "CONTAINER_DATA";
			public const string Containers = "CONTAINERS";
			public const string Content = "CONTENT";
			public const string Contents = "CONTENTS";
			public const string Context = "CONTEXT";
			public const string Continue = "CONTINUE";
			public const string ControlFile = "CONTROLFILE";
			public const string Convert = "CONVERT";
			public const string Cost = "COST";
			public const string Count = "COUNT";
			public const string Counted = "COUNTED";
			public const string CountKeyword = "COUNT";
			public const string CpuPerCall = "CPU_PER_CALL";
			public const string CpuPerSession = "CPU_PER_SESSION";
			public const string Create = "CREATE";
			public const string Creation = "CREATION";
			public const string Critical = "CRITICAL";
			public const string Cross = "CROSS";
			public const string CrossEdition = "CROSSEDITION";
			public const string Cube = "CUBE";
			public const string CumulativeDistribution = "CUME_DIST";
			public const string Current = "CURRENT";
			public const string CurrentUser = "CURRENT_USER";
			public const string Cursor = "CURSOR";
			public const string Cycle = "CYCLE";
			public const string Dangling = "DANGLING";
			public const string Data = "DATA";
			public const string Database = "DATABASE";
			public const string DatabaseRoleChange = "DB_ROLE_CHANGE";
			public const string DatabaseTimezone = "DBTIMEZONE";
			public const string DataBlockAddress = "DBA";
			public const string DataDefinitionLanguage = "DDL";
			public const string Datafile = "DATAFILE";
			public const string Datafiles = "DATAFILES";
			public const string DataManipulationLanguage = "DML";
			public const string Date = "DATE";
			public const string DateCache = "DATE_CACHE";
			public const string DateFormat = "DATE_FORMAT";
			public const string Day = "DAY";
			public const string Days = "DAYS";
			public const string DayToSecond = "DAY_TO_SECOND";
			public const string DbaRecycleBin = "DBA_RECYCLEBIN";
			public const string Deallocate = "DEALLOCATE";
			public const string Debug = "DEBUG";
			public const string Dec = "DEC";
			public const string Decimal = "DECIMAL";
			public const string Declare = "DECLARE";
			public const string Decrement = "DECREMENT";
			public const string Decrypt = "DECRYPT";
			public const string Deduplicate = "DEDUPLICATE";
			public const string Default = "DEFAULT";
			public const string DefaultIf = "DEFAULTIF";
			public const string Defaults = "DEFAULTS";
			public const string Deferrable = "DEFERRABLE";
			public const string Deferred = "DEFERRED";
			public const string Define = "DEFINE";
			public const string Definer = "DEFINER";
			public const string Delete = "DELETE";
			public const string DeleteAll = "DELETE_ALL";
			public const string Deleting = "DELETING";
			public const string Delimited = "DELIMITED";
			public const string Demand = "DEMAND";
			public const string DenseRank = "DENSE_RANK";
			public const string Depth = "DEPTH";
			public const string Desc = "DESC";
			public const string Deterministic = "DETERMINISTIC";
			public const string Dimension = "DIMENSION";
			public const string DirectInputOutput = "DIRECTIO";
			public const string DirectLoad = "DIRECT_LOAD";
			public const string DirectNetworkFileSystemDisable = "DNFS_DISABLE";
			public const string DirectNetworkFileSystemEnable = "DNFS_ENABLE";
			public const string DirectNetworkFileSystemReadBuffers = "DNFS_READBUFFERS";
			public const string Directory = "DIRECTORY";
			public const string Disable = "DISABLE";
			public const string DisableAll = "DISABLE_ALL";
			public const string Disabled = "DISABLED";
			public const string DisableDirectoryLinkCheck = "DISABLE_DIRECTORY_LINK_CHECK";
			public const string Disallow = "DISALLOW";
			public const string DiscardFile = "DISCARDFILE";
			public const string Disconnect = "DISCONNECT";
			public const string Dissociate = "DISSOCIATE";
			public const string Distinct = "DISTINCT";
			public const string Distribute = "DISTRIBUTE";
			public const string Distributed = "DISTRIBUTED";
			public const string Document = "DOCUMENT";
			public const string DollarCharacter = "$";
			public const string Dot = ".";
			public const string Double = "DOUBLE";
			public const string DoubleDotOperator = "..";
			public const string Drop = "DROP";
			public const string Dump = "DUMP";
			public const string Duplicate = "DUPLICATE";
			public const string Each = "EACH";
			public const string Edition = "EDITION";
			public const string Editionable = "EDITIONABLE";
			public const string Editioning = "EDITIONING";
			public const string Editions = "EDITIONS";
			public const string Element = "ELEMENT";
			public const string Else = "ELSE";
			public const string ElseIf = "ELSIF";
			public const string Embedded = "EMBEDDED";
			public const string Empty = "EMPTY";
			public const string Enable = "ENABLE";
			public const string EnableAll = "ENABLE_ALL";
			public const string Enabled = "ENABLED";
			public const string Enclosed = "ENCLOSED";
			public const string Encoding = "ENCODING";
			public const string Encrypt = "ENCRYPT";
			public const string Encryption = "ENCRYPTION";
			public const string End = "END";
			public const string Endian = "ENDIAN";
			public const string Enforced = "ENFORCED";
			public const string Enterprise = "ENTERPRISE";
			public const string EntityEscaping = "ENTITYESCAPING";
			public const string Error = "ERROR";
			public const string Errors = "ERRORS";
			public const string Escape = "ESCAPE";
			public const string Estimate = "ESTIMATE";
			public const string Evaluate = "EVALUATE";
			public const string EvaluatedName = "EVALNAME";
			public const string Events = "EVENTS";
			public const string Exa = "E";
			public const string Except = "EXCEPT";
			public const string Exception = "EXCEPTION";
			public const string ExceptionInit = "EXCEPTION_INIT";
			public const string Exceptions = "EXCEPTIONS";
			public const string ExclamationMark = "!";
			public const string Exclude = "EXCLUDE";
			public const string Excluding = "EXCLUDING";
			public const string Exclusive = "EXCLUSIVE";
			public const string Execute = "EXECUTE";
			public const string Exists = "EXISTS";
			public const string Exit = "EXIT";
			public const string Expire = "EXPIRE";
			public const string Explain = "EXPLAIN";
			public const string Extent = "EXTENT";
			public const string External = "EXTERNAL";
			public const string Externally = "EXTERNALLY";
			public const string Extract = "EXTRACT";
			public const string FailedLoginAttempts = "FAILED_LOGIN_ATTEMPTS";
			public const string False = "FALSE";
			public const string Fast = "FAST";
			public const string Fetch = "FETCH";
			public const string Field = "FIELD";
			public const string FieldNames = "FIELD_NAMES";
			public const string Fields = "FIELDS";
			public const string File = "FILE";
			public const string Files = "FILES";
			public const string FileSystemLikeLogging = "FILESYSTEM_LIKE_LOGGING";
			public const string Final = "FINAL";
			public const string First = "FIRST";
			public const string FirstValue = "FIRST_VALUE";
			public const string Fixed = "FIXED";
			public const string Flashback = "FLASHBACK";
			public const string FlashCache = "FLASH_CACHE";
			public const string Float = "FLOAT";
			public const string Flush = "FLUSH";
			public const string Following = "FOLLOWING";
			public const string Follows = "FOLLOWS";
			public const string For = "FOR";
			public const string ForAll = "FORALL";
			public const string Force = "FORCE";
			public const string Foreign = "FOREIGN";
			public const string Format = "FORMAT";
			public const string Forward = "FORWARD";
			public const string Found = "FOUND";
			public const string FreeList = "FREELIST";
			public const string FreeLists = "FREELISTS";
			public const string FreePools = "FREEPOOLS";
			public const string Fresh = "FRESH";
			public const string From = "FROM";
			public const string Full = "FULL";
			public const string Function = "FUNCTION";
			public const string Generated = "GENERATED";
			public const string Giga = "G";
			public const string Global = "GLOBAL";
			public const string Globally = "GLOBALLY";
			public const string GoTo = "GOTO";
			public const string Grant = "GRANT";
			public const string Group = "GROUP";
			public const string Grouping = "GROUPING";
			public const string Groups = "GROUPS";
			public const string Guarantee = "GUARANTEE";
			public const string Guard = "GUARD";
			public const string Hash = "HASH";
			public const string HashKeys = "HASHKEYS";
			public const string Having = "HAVING";
			public const string Heap = "HEAP";
			public const string Hide = "HIDE";
			public const string Hierarchy = "HIERARCHY";
			public const string High = "HIGH";
			public const string Hour = "HOUR";
			public const string Id = "ID";
			public const string Identified = "IDENTIFIED";
			public const string Identity = "IDENTITY";
			public const string IdleTime = "IDLE_TIME";
			public const string If = "IF";
			public const string Ignore = "IGNORE";
			public const string IgnoreCharactersAfterEndOfRecord = "IGNORE_CHARS_AFTER_EOR";
			public const string Immediate = "IMMEDIATE";
			public const string In = "IN";
			public const string Include = "INCLUDE";
			public const string Including = "INCLUDING";
			public const string Increment = "INCREMENT";
			public const string Indent = "INDENT";
			public const string Index = "INDEX";
			public const string Indexed = "INDEXED";
			public const string Indexes = "INDEXES";
			public const string Indexing = "INDEXING";
			public const string IndexType = "INDEXTYPE";
			public const string Indicator = "INDICATOR";
			public const string Indices = "INDICES";
			public const string InformationLifecycleManagement = "ILM";
			public const string Initial = "INITIAL";
			public const string Initially = "INITIALLY";
			public const string InitialTransactions = "INITRANS";
			public const string Inline = "INLINE";
			public const string InMemory = "INMEMORY";
			public const string Inner = "INNER";
			public const string InputOutputOptions = "IO_OPTIONS";
			public const string Insert = "INSERT";
			public const string Inserting = "INSERTING";
			public const string Instance = "INSTANCE";
			public const string Instantiable = "INSTANTIABLE";
			public const string Instead = "INSTEAD";
			public const string Integer = "INTEGER";
			public const string Interleaved = "INTERLEAVED";
			public const string Intersect = "INTERSECT";
			public const string Interval = "INTERVAL";
			public const string Into = "INTO";
			public const string Invalidate = "INVALIDATE";
			public const string Invisible = "INVISIBLE";
			public const string Is = "IS";
			public const string Isolation = "ISOLATION";
			public const string IsOpen = "ISOPEN";
			public const string Iterate = "ITERATE";
			public const string Java = "JAVA";
			public const string Join = "JOIN";
			public const string Json = "JSON";
			public const string JsonExists = "JSON_EXISTS";
			public const string JsonQuery = "JSON_QUERY";
			public const string JsonTable = "JSON_TABLE";
			public const string JsonValue = "JSON_VALUE";
			public const string Keep = "KEEP";
			public const string KeepDuplicates = "KEEP_DUPLICATES";
			public const string Key = "KEY";
			public const string Keys = "KEYS";
			public const string Kill = "KILL";
			public const string Kilo = "K";
			public const string Lag = "LAG";
			public const string Language = "LANGUAGE";
			public const string LargeObject = "LOB";
			public const string LargeObjectFile = "LOBFILE";
			public const string Last = "LAST";
			public const string LastValue = "LAST_VALUE";
			public const string Lateral = "LATERAL";
			public const string Latest = "LATEST";
			public const string Lax = "LAX";
			public const string Layer = "LAYER";
			public const string Lead = "LEAD";
			public const string Leading = "LEADING";
			public const string Left = "LEFT";
			public const string LeftBrace = "{";
			public const string LeftBracket = "[";
			public const string LeftLabelMarker = "<<";
			public const string LeftParenthesis = "(";
			public const string LeftRightTrim = "LRTRIM";
			public const string LeftTrim = "LTRIM";
			public const string Less = "LESS";
			public const string Level = "LEVEL";
			public const string Levels = "LEVELS";
			public const string Library = "LIBRARY";
			public const string Like = "LIKE";
			public const string LikeUcs2 = "LIKE2";
			public const string LikeUcs4 = "LIKE4";
			public const string LikeUnicode = "LIKEC";
			public const string Limit = "LIMIT";
			public const string Linear = "LINEAR";
			public const string Link = "LINK";
			public const string List = "LIST";
			public const string ListAggregation = "LISTAGG";
			public const string Little = "LITTLE";
			public const string Load = "LOAD";
			public const string Local = "LOCAL";
			public const string Location = "LOCATION";
			public const string Locator = "LOCATOR";
			public const string Lock = "LOCK";
			public const string Locked = "LOCKED";
			public const string Locking = "LOCKING";
			public const string Log = "LOG";
			public const string LogFile = "LOGFILE";
			public const string Logging = "LOGGING";
			public const string LogicalReadsPerCall = "LOGICAL_READS_PER_CALL";
			public const string LogicalReadsPerSession = "LOGICAL_READS_PER_SESSION";
			public const string Logoff = "LOGOFF";
			public const string Logon = "LOGON";
			public const string Long = "LONG";
			public const string Loop = "LOOP";
			public const string Low = "LOW";
			public const string Main = "MAIN";
			public const string Management = "MANAGEMENT";
			public const string Manual = "MANUAL";
			public const string Map = "MAP";
			public const string Mapping = "MAPPING";
			public const string Mask = "MASK";
			public const string Master = "MASTER";
			public const string Match = "MATCH";
			public const string Matched = "MATCHED";
			public const string Matches = "MATCHES";
			public const string MatchRecognize = "MATCH_RECOGNIZE";
			public const string Materialized = "MATERIALIZED";
			public const string MathDivide = "/";
			public const string MathEquals = "=";
			public const string MathFactor = "*";
			public const string MathGreatherThan = ">";
			public const string MathGreatherThanOrEquals = ">=";
			public const string MathInfinite = "INFINITE";
			public const string MathLessThan = "<";
			public const string MathLessThanOrEquals = "<=";
			public const string MathMinus = "-";
			public const string MathNotANumber = "NAN";
			public const string MathNotEqualsC = "!=";
			public const string MathNotEqualsCircumflex = "^=";
			public const string MathNotEqualsSql = "<>";
			public const string MathPlus = "+";
			public const string Max = "MAX";
			public const string MaximumExtents = "MAXEXTENTS";
			public const string MaximumSize = "MAXSIZE";
			public const string MaximumTransactions = "MAXTRANS";
			public const string MaximumValue = "MAXVALUE";
			public const string Measures = "MEASURES";
			public const string Medium = "MEDIUM";
			public const string Mega = "M";
			public const string Member = "MEMBER";
			public const string Memory = "MEMORY";
			public const string MemoryCompression = "MEMCOMPRESS";
			public const string Merge = "MERGE";
			public const string Migrate = "MIGRATE";
			public const string Migration = "MIGRATION";
			public const string Min = "MIN";
			public const string Minimize = "MINIMIZE";
			public const string Minimum = "MINIMUM";
			public const string MinimumExtents = "MINEXTENTS";
			public const string MinimumValue = "MINVALUE";
			public const string Mining = "MINING";
			public const string Minute = "MINUTE";
			public const string Missing = "MISSING";
			public const string Mode = "MODE";
			public const string Model = "MODEL";
			public const string Modification = "MODIFICATION";
			public const string Modify = "MODIFY";
			public const string Month = "MONTH";
			public const string Months = "MONTHS";
			public const string Move = "MOVE";
			public const string Movement = "MOVEMENT";
			public const string Multiset = "MULTISET";
			public const string Name = "NAME";
			public const string National = "NATIONAL";
			public const string NationalCharacterSet = "NCHAR_CS";
			public const string Natural = "NATURAL";
			public const string NChar = "NCHAR";
			public const string NegationOrNull = "LNNVL";
			public const string Nested = "NESTED";
			public const string New = "NEW";
			public const string NewLine = "NEWLINE";
			public const string Next = "NEXT";
			public const string No = "NO";
			public const string NoAudit = "NOAUDIT";
			public const string NoBadFile = "NOBADFILE";
			public const string NoCache = "NOCACHE";
			public const string NoCheck = "NOCHECK";
			public const string Nocompress = "NOCOMPRESS";
			public const string NoCompress = "NOCOMPRESS";
			public const string NoCopy = "NOCOPY";
			public const string NoCycle = "NOCYCLE";
			public const string NoDirectInputOutput = "NODIRECTIO";
			public const string NoDiscardFile = "NODISCARDFILE";
			public const string NoEntityEscaping = "NOENTITYESCAPING";
			public const string NoGuarantee = "NOGUARANTEE";
			public const string NoKeep = "NOKEEP";
			public const string NoLogFile = "NOLOGFILE";
			public const string NoLogging = "NOLOGGING";
			public const string NoMapping = "NOMAPPING";
			public const string NoMaximumValue = "NOMAXVALUE";
			public const string NoMinimize = "NOMINIMIZE";
			public const string NoMinimumValue = "NOMINVALUE";
			public const string NonAvailableValues = "NAV";
			public const string None = "NONE";
			public const string NonEditionable = "NONEDITIONABLE";
			public const string NonSchema = "NONSCHEMA";
			public const string NoNullIf = "NONULLIF";
			public const string NoOrder = "NOORDER";
			public const string NoParallel = "NOPARALLEL";
			public const string NoPartition = "NOPARTITION";
			public const string NoRely = "NORELY";
			public const string NoReplay = "NOREPLAY";
			public const string Normal = "NORMAL";
			public const string NoRowDependencies = "NOROWDEPENDENCIES";
			public const string NoSchemaCheck = "NOSCHEMACHECK";
			public const string NoSort = "NOSORT";
			public const string NoSwitch = "NOSWITCH";
			public const string Not = "NOT";
			public const string NotFound = "NOTFOUND";
			public const string Nothing = "NOTHING";
			public const string NoTrim = "NOTRIM";
			public const string NoValidate = "NOVALIDATE";
			public const string Nowait = "NOWAIT";
			public const string Null = "NULL";
			public const string NullIf = "NULLIF";
			public const string Nulls = "NULLS";
			public const string Number = "NUMBER";
			public const string Numeric = "NUMERIC";
			public const string NVarchar = "NVARCHAR";
			public const string NVarchar2 = "NVARCHAR2";
			public const string Object = "OBJECT";
			public const string ObjectId = "OID";
			public const string ObjectIdentifierIndex = "OIDINDEX";
			public const string Of = "OF";
			public const string Off = "OFF";
			public const string Offline = "OFFLINE";
			public const string Offset = "OFFSET";
			public const string Old = "OLD";
			public const string Oltp = "OLTP";
			public const string Omit = "OMIT";
			public const string On = "ON";
			public const string One = "ONE";
			public const string Online = "ONLINE";
			public const string Only = "ONLY";
			public const string Opaque = "OPAQUE";
			public const string Open = "OPEN";
			public const string OperationCode = "OPCODE";
			public const string Operations = "OPERATIONS";
			public const string Operator = "OPERATOR";
			public const string OperatorConcatenation = "||";
			public const string Option = "OPTION";
			public const string Optionally = "OPTIONALLY";
			public const string OptionalParameterOperator = "=>";
			public const string Or = "OR";
			public const string OracleDataPump = "ORACLE_DATAPUMP";
			public const string OracleDate = "ORACLE_DATE";
			public const string OracleLoader = "ORACLE_LOADER";
			public const string OracleNumber = "ORACLE_NUMBER";
			public const string Order = "ORDER";
			public const string Ordinality = "ORDINALITY";
			public const string Organization = "ORGANIZATION";
			public const string Out = "OUT";
			public const string Outer = "OUTER";
			public const string Over = "OVER";
			public const string Overflow = "OVERFLOW";
			public const string Overlaps = "OVERLAPS";
			public const string Override = "OVERRIDE";
			public const string Overriding = "OVERRIDING";
			public const string Package = "PACKAGE";
			public const string Parallel = "PARALLEL";
			public const string ParallelEnable = "PARALLEL_ENABLE";
			public const string ParameterFile = "PFILE";
			public const string Parameters = "PARAMETERS";
			public const string Parent = "PARENT";
			public const string Partial = "PARTIAL";
			public const string Partition = "PARTITION";
			public const string Partitions = "PARTITIONS";
			public const string Passing = "PASSING";
			public const string Password = "PASSWORD";
			public const string PasswordGraceTime = "PASSWORD_GRACE_TIME";
			public const string PasswordLifeTime = "PASSWORD_LIFE_TIME";
			public const string PasswordLockTime = "PASSWORD_LOCK_TIME";
			public const string PasswordReuseMax = "PASSWORD_REUSE_MAX";
			public const string PasswordReuseTime = "PASSWORD_REUSE_TIME";
			public const string PasswordVerifyFunction = "PASSWORD_VERIFY_FUNCTION";
			public const string Past = "PAST";
			public const string Patch = "PATCH";
			public const string Path = "PATH";
			public const string Pattern = "PATTERN";
			public const string Pctfree = "PCTFREE";
			public const string Per = "PER";
			public const string Percent = "PERCENT";
			public const string PercentCharacter = "%";
			public const string PercentFree = "PCTFREE";
			public const string PercentileContinuousDistribution = "PERCENTILE_CONT";
			public const string PercentileDiscreteDistribution = "PERCENTILE_DISC";
			public const string PercentIncrease = "PCTINCREASE";
			public const string PercentThreshold = "PCTTHRESHOLD";
			public const string PercentUsed = "PCTUSED";
			public const string PercentVersion = "PCTVERSION";
			public const string Period = "PERIOD";
			public const string Permanent = "PERMANENT";
			public const string Permute = "PERMUTE";
			public const string Peta = "P";
			public const string Pipe = "PIPE";
			public const string Pipelined = "PIPELINED";
			public const string Pivot = "PIVOT";
			public const string Plan = "PLAN";
			public const string PlsInteger = "PLS_INTEGER";
			public const string PlSqlConditionalCompilationElse = "$ELSE";
			public const string PlSqlConditionalCompilationElseIf = "$ELSIF";
			public const string PlSqlConditionalCompilationEnd = "$END";
			public const string PlSqlConditionalCompilationError = "$ERROR";
			public const string PlSqlConditionalCompilationIf = "$IF";
			public const string PlSqlConditionalCompilationThen = "$THEN";
			public const string Pluggable = "PLUGGABLE";
			public const string Point = "POINT";
			public const string Policy = "POLICY";
			public const string Position = "POSITION";
			public const string PostTransaction = "POST_TRANSACTION";
			public const string Pragma = "PRAGMA";
			public const string Precedes = "PRECEDES";
			public const string Preceding = "PRECEDING";
			public const string Precision = "PRECISION";
			public const string Preprocessor = "PREPROCESSOR";
			public const string Preserve = "PRESERVE";
			public const string Pretty = "PRETTY";
			public const string Previous = "PREV";
			public const string Primary = "PRIMARY";
			public const string Prior = "PRIOR";
			public const string Priority = "PRIORITY";
			public const string PrivateSystemGlobalArea = "PRIVATE_SGA";
			public const string Privileges = "PRIVILEGES";
			public const string Procedure = "PROCEDURE";
			public const string Profile = "PROFILE";
			public const string Public = "PUBLIC";
			public const string Purge = "PURGE";
			public const string Query = "QUERY";
			public const string QuestionMark = "?";
			public const string Quiesce = "QUIESCE";
			public const string Quota = "QUOTA";
			public const string Raise = "RAISE";
			public const string Range = "RANGE";
			public const string Rank = "RANK";
			public const string Raw = "RAW";
			public const string Read = "READ";
			public const string ReadNoDatabaseState = "RNDS";
			public const string ReadNoPackageState = "RNPS";
			public const string Reads = "READS";
			public const string ReadSize = "READSIZE";
			public const string Record = "RECORD";
			public const string Records = "RECORDS";
			public const string RecordsPerBlock = "RECORDS_PER_BLOCK";
			public const string Recoverable = "RECOVERABLE";
			public const string Recovery = "RECOVERY";
			public const string Recycle = "RECYCLE";
			public const string RecycleBin = "RECYCLEBIN";
			public const string Redo = "REDO";
			public const string RedoBlockAddress = "RBA";
			public const string Ref = "REF";
			public const string Reference = "REFERENCE";
			public const string References = "REFERENCES";
			public const string Referencing = "REFERENCING";
			public const string Refresh = "REFRESH";
			public const string Register = "REGISTER";
			public const string Reject = "REJECT";
			public const string ReKey = "REKEY";
			public const string ReliesOn = "RELIES_ON";
			public const string Relocate = "RELOCATE";
			public const string Rely = "RELY";
			public const string Remove = "REMOVE";
			public const string Rename = "RENAME";
			public const string Repeat = "REPEAT";
			public const string Replace = "REPLACE";
			public const string Required = "REQUIRED";
			public const string Reset = "RESET";
			public const string ResetLogs = "RESETLOGS";
			public const string Resize = "RESIZE";
			public const string Resource = "RESOURCE";
			public const string Respect = "RESPECT";
			public const string Restore = "RESTORE";
			public const string Restricted = "RESTRICTED";
			public const string RestrictReferences = "RESTRICT_REFERENCES";
			public const string Result = "RESULT";
			public const string ResultCache = "RESULT_CACHE";
			public const string Resumable = "RESUMABLE";
			public const string Resume = "RESUME";
			public const string Retention = "RETENTION";
			public const string Return = "RETURN";
			public const string Returning = "RETURNING";
			public const string Reuse = "REUSE";
			public const string Reverse = "REVERSE";
			public const string Revoke = "REVOKE";
			public const string Rewrite = "REWRITE";
			public const string Right = "RIGHT";
			public const string RightBrace = "}";
			public const string RightBracket = "]";
			public const string RightLabelMarker = ">>";
			public const string RightParenthesis = ")";
			public const string RightTrim = "RTRIM";
			public const string Role = "ROLE";
			public const string Roles = "ROLES";
			public const string Rollback = "ROLLBACK";
			public const string Rolling = "ROLLING";
			public const string Rollup = "ROLLUP";
			public const string Row = "ROW";
			public const string RowCount = "ROWCOUNT";
			public const string RowDependencies = "ROWDEPENDENCIES";
			public const string RowIdDataType = "ROWID";
			public const string RowIdPseudocolumn = "ROWID";
			public const string RowNumberPseudocolumn = "ROWNUM";
			public const string Rows = "ROWS";
			public const string RowType = "ROWTYPE";
			public const string Rules = "RULES";
			public const string Running = "RUNNING";
			public const string Salt = "SALT";
			public const string Sample = "SAMPLE";
			public const string Save = "SAVE";
			public const string Savepoint = "SAVEPOINT";
			public const string Schema = "SCHEMA";
			public const string SchemaCheck = "SCHEMACHECK";
			public const string Scope = "SCOPE";
			public const string Search = "SEARCH";
			public const string Second = "SECOND";
			public const string SecureFile = "SECUREFILE";
			public const string Seed = "SEED";
			public const string Segment = "SEGMENT";
			public const string Select = "SELECT";
			public const string Self = "SELF";
			public const string Semicolon = ";";
			public const string Sequence = "SEQUENCE";
			public const string Sequential = "SEQUENTIAL";
			public const string Serializable = "SERIALIZABLE";
			public const string SeriallyReusable = "SERIALLY_REUSABLE";
			public const string ServerError = "SERVERERROR";
			public const string ServerParameterFile = "SPFILE";
			public const string Session = "SESSION";
			public const string SessionId = "SID";
			public const string SessionsPerUser = "SESSIONS_PER_USER";
			public const string SessionTimezone = "SESSIONTIMEZONE";
			public const string Set = "SET";
			public const string SetMinus = "MINUS";
			public const string Sets = "SETS";
			public const string Settings = "SETTINGS";
			public const string Share = "SHARE";
			public const string Shared = "SHARED";
			public const string SharedPool = "SHARED_POOL";
			public const string Show = "SHOW";
			public const string Shrink = "SHRINK";
			public const string Shutdown = "SHUTDOWN";
			public const string Siblings = "SIBLINGS";
			public const string Single = "SINGLE";
			public const string Size = "SIZE";
			public const string Sizes = "SIZES";
			public const string Skip = "SKIP";
			public const string SmallFile = "SMALLFILE";
			public const string Smallint = "SMALLINT";
			public const string Snapshot = "SNAPSHOT";
			public const string Some = "SOME";
			public const string Sort = "SORT";
			public const string Source = "SOURCE";
			public const string Specification = "SPECIFICATION";
			public const string SqlLoaderTrim = "LDRTRIM";
			public const string SqlPlusTerminator = "\n/\n";
			public const string Standalone = "STANDALONE";
			public const string StandardDeviation = "STDDEV";
			public const string Standby = "STANDBY";
			public const string Start = "START";
			public const string StartOf = "STARTOF";
			public const string Startup = "STARTUP";
			public const string Statement = "STATEMENT";
			public const string StatementId = "STATEMENT_ID";
			public const string Static = "STATIC";
			public const string Statistics = "STATISTICS";
			public const string Stop = "STOP";
			public const string Storage = "STORAGE";
			public const string Store = "STORE";
			public const string Strict = "STRICT";
			public const string String = "STRING";
			public const string Structure = "STRUCTURE";
			public const string SubMultiset = "SUBMULTISET";
			public const string Subpartition = "SUBPARTITION";
			public const string Subpartitions = "SUBPARTITIONS";
			public const string Subset = "SUBSET";
			public const string Substitutable = "SUBSTITUTABLE";
			public const string SubType = "SUBTYPE";
			public const string Successful = "SUCCESSFUL";
			public const string Sum = "SUM";
			public const string Supplemental = "SUPPLEMENTAL";
			public const string Suspend = "SUSPEND";
			public const string Switch = "SWITCH";
			public const string Sync = "SYNC";
			public const string Synchronous = "SYNCHRONOUS";
			public const string Synonym = "SYNONYM";
			public const string System = "SYSTEM";
			public const string SystemChangeNumber = "SCN";
			public const string SystemDate = "SYSDATE";
			public const string Table = "TABLE";
			public const string Tables = "TABLES";
			public const string Tablespace = "TABLESPACE";
			public const string Tempfile = "TEMPFILE";
			public const string Template = "TEMPLATE";
			public const string Temporary = "TEMPORARY";
			public const string Tera = "T";
			public const string Terminated = "TERMINATED";
			public const string Territory = "TERRITORY";
			public const string Than = "THAN";
			public const string The = "THE";
			public const string Then = "THEN";
			public const string These = "THESE";
			public const string Through = "THROUGH";
			public const string Tier = "TIER";
			public const string Ties = "TIES";
			public const string Time = "TIME";
			public const string Timeout = "TIMEOUT";
			public const string Timestamp = "TIMESTAMP";
			public const string TimezoneAbbreviation = "TIMEZONE_ABBR";
			public const string TimezoneHour = "TIMEZONE_HOUR";
			public const string TimezoneMinute = "TIMEZONE_MINUTE";
			public const string TimezoneRegion = "TIMEZONE_REGION";
			public const string To = "TO";
			public const string Trailing = "TRAILING";
			public const string Transaction = "TRANSACTION";
			public const string Transforms = "TRANSFORMS";
			public const string Treat = "TREAT";
			public const string Trigger = "TRIGGER";
			public const string Triggers = "TRIGGERS";
			public const string Trim = "TRIM";
			public const string True = "TRUE";
			public const string Truncate = "TRUNCATE";
			public const string Trust = "TRUST";
			public const string Trusted = "TRUSTED";
			public const string Type = "TYPE";
			public const string Unbounded = "UNBOUNDED";
			public const string Unconditional = "UNCONDITIONAL";
			public const string Under = "UNDER";
			public const string Undo = "UNDO";
			public const string Uniform = "UNIFORM";
			public const string Union = "UNION";
			public const string Unique = "UNIQUE";
			public const string UniversalRowId = "UROWID";
			public const string Unlimited = "UNLIMITED";
			public const string Unlock = "UNLOCK";
			public const string Unmatched = "UNMATCHED";
			public const string Unpacked = "UNPACKED";
			public const string Unpivot = "UNPIVOT";
			public const string Unplug = "UNPLUG";
			public const string Unquiesce = "UNQUIESCE";
			public const string Unrecoverable = "UNRECOVERABLE";
			public const string Unsigned = "UNSIGNED";
			public const string Until = "UNTIL";
			public const string Unusable = "UNUSABLE";
			public const string Unused = "UNUSED";
			public const string Update = "UPDATE";
			public const string Updated = "UPDATED";
			public const string Updating = "UPDATING";
			public const string Upgrade = "UPGRADE";
			public const string Upsert = "UPSERT";
			public const string Usable = "USABLE";
			public const string Use = "USE";
			public const string User = "USER";
			public const string UserDefinedFunction = "UDF";
			public const string UserId = "UID";
			public const string Users = "USERS";
			public const string Using = "USING";
			public const string Validate = "VALIDATE";
			public const string Value = "VALUE";
			public const string Values = "VALUES";
			public const string Varchar = "VARCHAR";
			public const string Varchar2 = "VARCHAR2";
			public const string VarcharC = "VARCHARC";
			public const string Variable = "VARIABLE";
			public const string VariableElementArray = "VARRAY";
			public const string Variance = "VARIANCE";
			public const string Varraw = "VARRAW";
			public const string VarrawC = "VARRAWC";
			public const string Varying = "VARYING";
			public const string Version = "VERSION";
			public const string Versions = "VERSIONS";
			public const string VerticalBarCharacter = "|";
			public const string View = "VIEW";
			public const string Virtual = "VIRTUAL";
			public const string Visible = "VISIBLE";
			public const string Wait = "WAIT";
			public const string Wallet = "WALLET";
			public const string WellFormed = "WELLFORMED";
			public const string When = "WHEN";
			public const string Whenever = "WHENEVER";
			public const string Where = "WHERE";
			public const string While = "WHILE";
			public const string Whitespace = "WHITESPACE";
			public const string With = "WITH";
			public const string Within = "WITHIN";
			public const string Without = "WITHOUT";
			public const string Work = "WORK";
			public const string Wrapped = "WRAPPED";
			public const string Wrapper = "WRAPPER";
			public const string Write = "WRITE";
			public const string WriteNoDatabaseState = "WNDS";
			public const string WriteNoPackageState = "WNPS";
			public const string Xml = "XML";
			public const string XmlAggregate = "XMLAGG";
			public const string XmlAttributes = "XMLATTRIBUTES";
			public const string XmlCast = "XMLCAST";
			public const string XmlColumnValue = "XMLCOLATTVAL";
			public const string XmlElement = "XMLELEMENT";
			public const string XmlExists = "XMLEXISTS";
			public const string XmlForest = "XMLFOREST";
			public const string XmlNamespaces = "XMLNAMESPACES";
			public const string XmlParse = "XMLPARSE";
			public const string XmlQuery = "XMLQUERY";
			public const string XmlRoot = "XMLROOT";
			public const string XmlSerialize = "XMLSERIALIZE";
			public const string XmlTable = "XMLTABLE";
			public const string XmlType = "XMLTYPE";
			public const string Year = "YEAR";
			public const string Years = "YEARS";
			public const string YearToMonth = "YEAR_TO_MONTH";
			public const string Yes = "YES";
			public const string Zone = "ZONE";
			public const string Zoned = "ZONED";
			public const string ZoneMap = "ZONEMAP";
		}

		private static readonly ReadOnlyDictionary<string, string> AllTerminalsInternal = new ReadOnlyDictionary<string, string>(new Dictionary<string, string> { { Terminals.A, TerminalValues.A }, { Terminals.Access, TerminalValues.Access }, { Terminals.Accessible, TerminalValues.Accessible }, { Terminals.Account, TerminalValues.Account }, { Terminals.Add, TerminalValues.Add }, { Terminals.Admin, TerminalValues.Admin }, { Terminals.Advanced, TerminalValues.Advanced }, { Terminals.Advise, TerminalValues.Advise }, { Terminals.After, TerminalValues.After }, { Terminals.Aggregate, TerminalValues.Aggregate }, { Terminals.All, TerminalValues.All }, { Terminals.Allocate, TerminalValues.Allocate }, { Terminals.Allow, TerminalValues.Allow }, { Terminals.Alter, TerminalValues.Alter }, { Terminals.Always, TerminalValues.Always }, { Terminals.Analyze, TerminalValues.Analyze }, { Terminals.And, TerminalValues.And }, { Terminals.Any, TerminalValues.Any }, { Terminals.AnySchema, TerminalValues.AnySchema }, { Terminals.Apply, TerminalValues.Apply }, { Terminals.Archival, TerminalValues.Archival }, { Terminals.Archive, TerminalValues.Archive }, { Terminals.Are, TerminalValues.Are }, { Terminals.Array, TerminalValues.Array }, { Terminals.As, TerminalValues.As }, { Terminals.Asc, TerminalValues.Asc }, { Terminals.Ascii, TerminalValues.Ascii }, { Terminals.AssignmentOperator, TerminalValues.AssignmentOperator }, { Terminals.Associate, TerminalValues.Associate }, { Terminals.Asterisk, TerminalValues.Asterisk }, { Terminals.Asynchronous, TerminalValues.Asynchronous }, { Terminals.At, TerminalValues.At }, { Terminals.AtCharacter, TerminalValues.AtCharacter }, { Terminals.Attribute, TerminalValues.Attribute }, { Terminals.Audit, TerminalValues.Audit }, { Terminals.Authenticated, TerminalValues.Authenticated }, { Terminals.Authentication, TerminalValues.Authentication }, { Terminals.Authorization, TerminalValues.Authorization }, { Terminals.AuthorizationIdentity, TerminalValues.AuthorizationIdentity }, { Terminals.Auto, TerminalValues.Auto }, { Terminals.AutoAllocate, TerminalValues.AutoAllocate }, { Terminals.AutoExtend, TerminalValues.AutoExtend }, { Terminals.Automatic, TerminalValues.Automatic }, { Terminals.AutonomousTransaction, TerminalValues.AutonomousTransaction }, { Terminals.Avg, TerminalValues.Avg }, { Terminals.Backup, TerminalValues.Backup }, { Terminals.BadFile, TerminalValues.BadFile }, { Terminals.Basic, TerminalValues.Basic }, { Terminals.BasicFile, TerminalValues.BasicFile }, { Terminals.Batch, TerminalValues.Batch }, { Terminals.Before, TerminalValues.Before }, { Terminals.Begin, TerminalValues.Begin }, { Terminals.Beginning, TerminalValues.Beginning }, { Terminals.Bequeath, TerminalValues.Bequeath }, { Terminals.Between, TerminalValues.Between }, { Terminals.Big, TerminalValues.Big }, { Terminals.BigFile, TerminalValues.BigFile }, { Terminals.BinaryDouble, TerminalValues.BinaryDouble }, { Terminals.BinaryFloat, TerminalValues.BinaryFloat }, { Terminals.BinaryInteger, TerminalValues.BinaryInteger }, { Terminals.BindVariableIdentifier, null }, { Terminals.Bitmap, TerminalValues.Bitmap }, { Terminals.Blanks, TerminalValues.Blanks }, { Terminals.Blob, TerminalValues.Blob }, { Terminals.Block, TerminalValues.Block }, { Terminals.BlockSize, TerminalValues.BlockSize }, { Terminals.Body, TerminalValues.Body }, { Terminals.Both, TerminalValues.Both }, { Terminals.Breadth, TerminalValues.Breadth }, { Terminals.BufferCache, TerminalValues.BufferCache }, { Terminals.BufferPool, TerminalValues.BufferPool }, { Terminals.Bulk, TerminalValues.Bulk }, { Terminals.BulkRowCount, TerminalValues.BulkRowCount }, { Terminals.By, TerminalValues.By }, { Terminals.Byte, TerminalValues.Byte }, { Terminals.ByteOrderMark, TerminalValues.ByteOrderMark }, { Terminals.Bytes, TerminalValues.Bytes }, { Terminals.C, TerminalValues.C }, { Terminals.Cache, TerminalValues.Cache }, { Terminals.Call, TerminalValues.Call }, { Terminals.Capacity, TerminalValues.Capacity }, { Terminals.Cascade, TerminalValues.Cascade }, { Terminals.Case, TerminalValues.Case }, { Terminals.Cast, TerminalValues.Cast }, { Terminals.CellFlashCache, TerminalValues.CellFlashCache }, { Terminals.Chained, TerminalValues.Chained }, { Terminals.Change, TerminalValues.Change }, { Terminals.Char, TerminalValues.Char }, { Terminals.Character, TerminalValues.Character }, { Terminals.CharacterCode, TerminalValues.CharacterCode }, { Terminals.Characters, TerminalValues.Characters }, { Terminals.CharacterSet, TerminalValues.CharacterSet }, { Terminals.Check, TerminalValues.Check }, { Terminals.Checkpoint, TerminalValues.Checkpoint }, { Terminals.Chunk, TerminalValues.Chunk }, { Terminals.CircumflexCharacter, TerminalValues.CircumflexCharacter }, { Terminals.Client, TerminalValues.Client }, { Terminals.Clob, TerminalValues.Clob }, { Terminals.Clone, TerminalValues.Clone }, { Terminals.Close, TerminalValues.Close }, { Terminals.Cluster, TerminalValues.Cluster }, { Terminals.Clustering, TerminalValues.Clustering }, { Terminals.Coalesce, TerminalValues.Coalesce }, { Terminals.Collect, TerminalValues.Collect }, { Terminals.Colon, TerminalValues.Colon }, { Terminals.Column, TerminalValues.Column }, { Terminals.ColumnAlias, null }, { Terminals.Columns, TerminalValues.Columns }, { Terminals.Comma, TerminalValues.Comma }, { Terminals.CommaSeparatedValue, TerminalValues.CommaSeparatedValue }, { Terminals.Comment, TerminalValues.Comment }, { Terminals.Commit, TerminalValues.Commit }, { Terminals.Committed, TerminalValues.Committed }, { Terminals.Compact, TerminalValues.Compact }, { Terminals.Compatible, TerminalValues.Compatible }, { Terminals.Compile, TerminalValues.Compile }, { Terminals.Complete, TerminalValues.Complete }, { Terminals.CompositeLimit, TerminalValues.CompositeLimit }, { Terminals.Compound, TerminalValues.Compound }, { Terminals.Compress, TerminalValues.Compress }, { Terminals.Compression, TerminalValues.Compression }, { Terminals.Compute, TerminalValues.Compute }, { Terminals.Concat, TerminalValues.Concat }, { Terminals.Conditional, TerminalValues.Conditional }, { Terminals.Confirm, TerminalValues.Confirm }, { Terminals.Connect, TerminalValues.Connect }, { Terminals.ConnectByRoot, TerminalValues.ConnectByRoot }, { Terminals.ConnectTime, TerminalValues.ConnectTime }, { Terminals.Consider, TerminalValues.Consider }, { Terminals.Constant, TerminalValues.Constant }, { Terminals.Constraint, TerminalValues.Constraint }, { Terminals.Constraints, TerminalValues.Constraints }, { Terminals.Constructor, TerminalValues.Constructor }, { Terminals.Container, TerminalValues.Container }, { Terminals.ContainerData, TerminalValues.ContainerData }, { Terminals.Containers, TerminalValues.Containers }, { Terminals.Content, TerminalValues.Content }, { Terminals.Contents, TerminalValues.Contents }, { Terminals.Context, TerminalValues.Context }, { Terminals.Continue, TerminalValues.Continue }, { Terminals.ControlFile, TerminalValues.ControlFile }, { Terminals.Convert, TerminalValues.Convert }, { Terminals.Cost, TerminalValues.Cost }, { Terminals.Count, TerminalValues.Count }, { Terminals.Counted, TerminalValues.Counted }, { Terminals.CountKeyword, TerminalValues.CountKeyword }, { Terminals.CpuPerCall, TerminalValues.CpuPerCall }, { Terminals.CpuPerSession, TerminalValues.CpuPerSession }, { Terminals.Create, TerminalValues.Create }, { Terminals.Creation, TerminalValues.Creation }, { Terminals.Critical, TerminalValues.Critical }, { Terminals.Cross, TerminalValues.Cross }, { Terminals.CrossEdition, TerminalValues.CrossEdition }, { Terminals.Cube, TerminalValues.Cube }, { Terminals.CumulativeDistribution, TerminalValues.CumulativeDistribution }, { Terminals.Current, TerminalValues.Current }, { Terminals.CurrentUser, TerminalValues.CurrentUser }, { Terminals.Cursor, TerminalValues.Cursor }, { Terminals.CursorIdentifier, null }, { Terminals.Cycle, TerminalValues.Cycle }, { Terminals.Dangling, TerminalValues.Dangling }, { Terminals.Data, TerminalValues.Data }, { Terminals.Database, TerminalValues.Database }, { Terminals.DatabaseLinkIdentifier, null }, { Terminals.DatabaseRoleChange, TerminalValues.DatabaseRoleChange }, { Terminals.DatabaseTimezone, TerminalValues.DatabaseTimezone }, { Terminals.DataBlockAddress, TerminalValues.DataBlockAddress }, { Terminals.DataDefinitionLanguage, TerminalValues.DataDefinitionLanguage }, { Terminals.Datafile, TerminalValues.Datafile }, { Terminals.Datafiles, TerminalValues.Datafiles }, { Terminals.DataManipulationLanguage, TerminalValues.DataManipulationLanguage }, { Terminals.DataTypeIdentifier, null }, { Terminals.Date, TerminalValues.Date }, { Terminals.DateCache, TerminalValues.DateCache }, { Terminals.DateFormat, TerminalValues.DateFormat }, { Terminals.Day, TerminalValues.Day }, { Terminals.Days, TerminalValues.Days }, { Terminals.DayToSecond, TerminalValues.DayToSecond }, { Terminals.DbaRecycleBin, TerminalValues.DbaRecycleBin }, { Terminals.Deallocate, TerminalValues.Deallocate }, { Terminals.Debug, TerminalValues.Debug }, { Terminals.Dec, TerminalValues.Dec }, { Terminals.Decimal, TerminalValues.Decimal }, { Terminals.Declare, TerminalValues.Declare }, { Terminals.Decrement, TerminalValues.Decrement }, { Terminals.Decrypt, TerminalValues.Decrypt }, { Terminals.Deduplicate, TerminalValues.Deduplicate }, { Terminals.Default, TerminalValues.Default }, { Terminals.DefaultIf, TerminalValues.DefaultIf }, { Terminals.Defaults, TerminalValues.Defaults }, { Terminals.Deferrable, TerminalValues.Deferrable }, { Terminals.Deferred, TerminalValues.Deferred }, { Terminals.Define, TerminalValues.Define }, { Terminals.Definer, TerminalValues.Definer }, { Terminals.Delete, TerminalValues.Delete }, { Terminals.DeleteAll, TerminalValues.DeleteAll }, { Terminals.Deleting, TerminalValues.Deleting }, { Terminals.Delimited, TerminalValues.Delimited }, { Terminals.Demand, TerminalValues.Demand }, { Terminals.DenseRank, TerminalValues.DenseRank }, { Terminals.Depth, TerminalValues.Depth }, { Terminals.Desc, TerminalValues.Desc }, { Terminals.Deterministic, TerminalValues.Deterministic }, { Terminals.Dimension, TerminalValues.Dimension }, { Terminals.DirectInputOutput, TerminalValues.DirectInputOutput }, { Terminals.DirectLoad, TerminalValues.DirectLoad }, { Terminals.DirectNetworkFileSystemDisable, TerminalValues.DirectNetworkFileSystemDisable }, { Terminals.DirectNetworkFileSystemEnable, TerminalValues.DirectNetworkFileSystemEnable }, { Terminals.DirectNetworkFileSystemReadBuffers, TerminalValues.DirectNetworkFileSystemReadBuffers }, { Terminals.Directory, TerminalValues.Directory }, { Terminals.Disable, TerminalValues.Disable }, { Terminals.DisableAll, TerminalValues.DisableAll }, { Terminals.Disabled, TerminalValues.Disabled }, { Terminals.DisableDirectoryLinkCheck, TerminalValues.DisableDirectoryLinkCheck }, { Terminals.Disallow, TerminalValues.Disallow }, { Terminals.DiscardFile, TerminalValues.DiscardFile }, { Terminals.Disconnect, TerminalValues.Disconnect }, { Terminals.Dissociate, TerminalValues.Dissociate }, { Terminals.Distinct, TerminalValues.Distinct }, { Terminals.Distribute, TerminalValues.Distribute }, { Terminals.Distributed, TerminalValues.Distributed }, { Terminals.Document, TerminalValues.Document }, { Terminals.DollarCharacter, TerminalValues.DollarCharacter }, { Terminals.Dot, TerminalValues.Dot }, { Terminals.Double, TerminalValues.Double }, { Terminals.DoubleDotOperator, TerminalValues.DoubleDotOperator }, { Terminals.DoubleQuotedStringLiteral, null }, { Terminals.Drop, TerminalValues.Drop }, { Terminals.Dump, TerminalValues.Dump }, { Terminals.Duplicate, TerminalValues.Duplicate }, { Terminals.Each, TerminalValues.Each }, { Terminals.Edition, TerminalValues.Edition }, { Terminals.Editionable, TerminalValues.Editionable }, { Terminals.Editioning, TerminalValues.Editioning }, { Terminals.Editions, TerminalValues.Editions }, { Terminals.Element, TerminalValues.Element }, { Terminals.Else, TerminalValues.Else }, { Terminals.ElseIf, TerminalValues.ElseIf }, { Terminals.Embedded, TerminalValues.Embedded }, { Terminals.Empty, TerminalValues.Empty }, { Terminals.Enable, TerminalValues.Enable }, { Terminals.EnableAll, TerminalValues.EnableAll }, { Terminals.Enabled, TerminalValues.Enabled }, { Terminals.Enclosed, TerminalValues.Enclosed }, { Terminals.Encoding, TerminalValues.Encoding }, { Terminals.Encrypt, TerminalValues.Encrypt }, { Terminals.Encryption, TerminalValues.Encryption }, { Terminals.End, TerminalValues.End }, { Terminals.Endian, TerminalValues.Endian }, { Terminals.Enforced, TerminalValues.Enforced }, { Terminals.Enterprise, TerminalValues.Enterprise }, { Terminals.EntityEscaping, TerminalValues.EntityEscaping }, { Terminals.Error, TerminalValues.Error }, { Terminals.Errors, TerminalValues.Errors }, { Terminals.Escape, TerminalValues.Escape }, { Terminals.Estimate, TerminalValues.Estimate }, { Terminals.Evaluate, TerminalValues.Evaluate }, { Terminals.EvaluatedName, TerminalValues.EvaluatedName }, { Terminals.Events, TerminalValues.Events }, { Terminals.Exa, TerminalValues.Exa }, { Terminals.Except, TerminalValues.Except }, { Terminals.Exception, TerminalValues.Exception }, { Terminals.ExceptionIdentifier, null }, { Terminals.ExceptionInit, TerminalValues.ExceptionInit }, { Terminals.Exceptions, TerminalValues.Exceptions }, { Terminals.ExclamationMark, TerminalValues.ExclamationMark }, { Terminals.Exclude, TerminalValues.Exclude }, { Terminals.Excluding, TerminalValues.Excluding }, { Terminals.Exclusive, TerminalValues.Exclusive }, { Terminals.Execute, TerminalValues.Execute }, { Terminals.Exists, TerminalValues.Exists }, { Terminals.Exit, TerminalValues.Exit }, { Terminals.Expire, TerminalValues.Expire }, { Terminals.Explain, TerminalValues.Explain }, { Terminals.Extent, TerminalValues.Extent }, { Terminals.External, TerminalValues.External }, { Terminals.Externally, TerminalValues.Externally }, { Terminals.Extract, TerminalValues.Extract }, { Terminals.FailedLoginAttempts, TerminalValues.FailedLoginAttempts }, { Terminals.False, TerminalValues.False }, { Terminals.Fast, TerminalValues.Fast }, { Terminals.Fetch, TerminalValues.Fetch }, { Terminals.Field, TerminalValues.Field }, { Terminals.FieldNames, TerminalValues.FieldNames }, { Terminals.Fields, TerminalValues.Fields }, { Terminals.File, TerminalValues.File }, { Terminals.Files, TerminalValues.Files }, { Terminals.FileSystemLikeLogging, TerminalValues.FileSystemLikeLogging }, { Terminals.Final, TerminalValues.Final }, { Terminals.First, TerminalValues.First }, { Terminals.FirstValue, TerminalValues.FirstValue }, { Terminals.Fixed, TerminalValues.Fixed }, { Terminals.Flashback, TerminalValues.Flashback }, { Terminals.FlashCache, TerminalValues.FlashCache }, { Terminals.Float, TerminalValues.Float }, { Terminals.Flush, TerminalValues.Flush }, { Terminals.Following, TerminalValues.Following }, { Terminals.Follows, TerminalValues.Follows }, { Terminals.For, TerminalValues.For }, { Terminals.ForAll, TerminalValues.ForAll }, { Terminals.Force, TerminalValues.Force }, { Terminals.Foreign, TerminalValues.Foreign }, { Terminals.Format, TerminalValues.Format }, { Terminals.Forward, TerminalValues.Forward }, { Terminals.Found, TerminalValues.Found }, { Terminals.FreeList, TerminalValues.FreeList }, { Terminals.FreeLists, TerminalValues.FreeLists }, { Terminals.FreePools, TerminalValues.FreePools }, { Terminals.Fresh, TerminalValues.Fresh }, { Terminals.From, TerminalValues.From }, { Terminals.Full, TerminalValues.Full }, { Terminals.Function, TerminalValues.Function }, { Terminals.Generated, TerminalValues.Generated }, { Terminals.Giga, TerminalValues.Giga }, { Terminals.Global, TerminalValues.Global }, { Terminals.Globally, TerminalValues.Globally }, { Terminals.GoTo, TerminalValues.GoTo }, { Terminals.Grant, TerminalValues.Grant }, { Terminals.Group, TerminalValues.Group }, { Terminals.Grouping, TerminalValues.Grouping }, { Terminals.Groups, TerminalValues.Groups }, { Terminals.Guarantee, TerminalValues.Guarantee }, { Terminals.Guard, TerminalValues.Guard }, { Terminals.Hash, TerminalValues.Hash }, { Terminals.HashKeys, TerminalValues.HashKeys }, { Terminals.Having, TerminalValues.Having }, { Terminals.Heap, TerminalValues.Heap }, { Terminals.Hide, TerminalValues.Hide }, { Terminals.Hierarchy, TerminalValues.Hierarchy }, { Terminals.High, TerminalValues.High }, { Terminals.Hour, TerminalValues.Hour }, { Terminals.Id, TerminalValues.Id }, { Terminals.Identified, TerminalValues.Identified }, { Terminals.Identifier, null }, { Terminals.Identity, TerminalValues.Identity }, { Terminals.IdleTime, TerminalValues.IdleTime }, { Terminals.If, TerminalValues.If }, { Terminals.Ignore, TerminalValues.Ignore }, { Terminals.IgnoreCharactersAfterEndOfRecord, TerminalValues.IgnoreCharactersAfterEndOfRecord }, { Terminals.Immediate, TerminalValues.Immediate }, { Terminals.In, TerminalValues.In }, { Terminals.Include, TerminalValues.Include }, { Terminals.Including, TerminalValues.Including }, { Terminals.Increment, TerminalValues.Increment }, { Terminals.Indent, TerminalValues.Indent }, { Terminals.Index, TerminalValues.Index }, { Terminals.Indexed, TerminalValues.Indexed }, { Terminals.Indexes, TerminalValues.Indexes }, { Terminals.Indexing, TerminalValues.Indexing }, { Terminals.IndexType, TerminalValues.IndexType }, { Terminals.Indicator, TerminalValues.Indicator }, { Terminals.IndicatorVariableIdentifier, null }, { Terminals.Indices, TerminalValues.Indices }, { Terminals.InformationLifecycleManagement, TerminalValues.InformationLifecycleManagement }, { Terminals.Initial, TerminalValues.Initial }, { Terminals.Initially, TerminalValues.Initially }, { Terminals.InitialTransactions, TerminalValues.InitialTransactions }, { Terminals.Inline, TerminalValues.Inline }, { Terminals.InMemory, TerminalValues.InMemory }, { Terminals.Inner, TerminalValues.Inner }, { Terminals.InputOutputOptions, TerminalValues.InputOutputOptions }, { Terminals.Insert, TerminalValues.Insert }, { Terminals.Inserting, TerminalValues.Inserting }, { Terminals.Instance, TerminalValues.Instance }, { Terminals.Instantiable, TerminalValues.Instantiable }, { Terminals.Instead, TerminalValues.Instead }, { Terminals.Integer, TerminalValues.Integer }, { Terminals.IntegerLiteral, null }, { Terminals.Interleaved, TerminalValues.Interleaved }, { Terminals.Intersect, TerminalValues.Intersect }, { Terminals.Interval, TerminalValues.Interval }, { Terminals.Into, TerminalValues.Into }, { Terminals.Invalidate, TerminalValues.Invalidate }, { Terminals.Invisible, TerminalValues.Invisible }, { Terminals.Is, TerminalValues.Is }, { Terminals.Isolation, TerminalValues.Isolation }, { Terminals.IsOpen, TerminalValues.IsOpen }, { Terminals.Iterate, TerminalValues.Iterate }, { Terminals.Java, TerminalValues.Java }, { Terminals.Join, TerminalValues.Join }, { Terminals.Json, TerminalValues.Json }, { Terminals.JsonExists, TerminalValues.JsonExists }, { Terminals.JsonQuery, TerminalValues.JsonQuery }, { Terminals.JsonTable, TerminalValues.JsonTable }, { Terminals.JsonValue, TerminalValues.JsonValue }, { Terminals.Keep, TerminalValues.Keep }, { Terminals.KeepDuplicates, TerminalValues.KeepDuplicates }, { Terminals.Key, TerminalValues.Key }, { Terminals.Keys, TerminalValues.Keys }, { Terminals.Kill, TerminalValues.Kill }, { Terminals.Kilo, TerminalValues.Kilo }, { Terminals.LabelIdentifier, null }, { Terminals.Lag, TerminalValues.Lag }, { Terminals.Language, TerminalValues.Language }, { Terminals.LargeObject, TerminalValues.LargeObject }, { Terminals.LargeObjectFile, TerminalValues.LargeObjectFile }, { Terminals.Last, TerminalValues.Last }, { Terminals.LastValue, TerminalValues.LastValue }, { Terminals.Lateral, TerminalValues.Lateral }, { Terminals.Latest, TerminalValues.Latest }, { Terminals.Lax, TerminalValues.Lax }, { Terminals.Layer, TerminalValues.Layer }, { Terminals.Lead, TerminalValues.Lead }, { Terminals.Leading, TerminalValues.Leading }, { Terminals.Left, TerminalValues.Left }, { Terminals.LeftBrace, TerminalValues.LeftBrace }, { Terminals.LeftBracket, TerminalValues.LeftBracket }, { Terminals.LeftLabelMarker, TerminalValues.LeftLabelMarker }, { Terminals.LeftParenthesis, TerminalValues.LeftParenthesis }, { Terminals.LeftRightTrim, TerminalValues.LeftRightTrim }, { Terminals.LeftTrim, TerminalValues.LeftTrim }, { Terminals.Less, TerminalValues.Less }, { Terminals.Level, TerminalValues.Level }, { Terminals.Levels, TerminalValues.Levels }, { Terminals.Library, TerminalValues.Library }, { Terminals.Like, TerminalValues.Like }, { Terminals.LikeUcs2, TerminalValues.LikeUcs2 }, { Terminals.LikeUcs4, TerminalValues.LikeUcs4 }, { Terminals.LikeUnicode, TerminalValues.LikeUnicode }, { Terminals.Limit, TerminalValues.Limit }, { Terminals.Linear, TerminalValues.Linear }, { Terminals.Link, TerminalValues.Link }, { Terminals.List, TerminalValues.List }, { Terminals.ListAggregation, TerminalValues.ListAggregation }, { Terminals.Little, TerminalValues.Little }, { Terminals.Load, TerminalValues.Load }, { Terminals.Local, TerminalValues.Local }, { Terminals.Location, TerminalValues.Location }, { Terminals.Locator, TerminalValues.Locator }, { Terminals.Lock, TerminalValues.Lock }, { Terminals.Locked, TerminalValues.Locked }, { Terminals.Locking, TerminalValues.Locking }, { Terminals.Log, TerminalValues.Log }, { Terminals.LogFile, TerminalValues.LogFile }, { Terminals.Logging, TerminalValues.Logging }, { Terminals.LogicalReadsPerCall, TerminalValues.LogicalReadsPerCall }, { Terminals.LogicalReadsPerSession, TerminalValues.LogicalReadsPerSession }, { Terminals.Logoff, TerminalValues.Logoff }, { Terminals.Logon, TerminalValues.Logon }, { Terminals.Long, TerminalValues.Long }, { Terminals.Loop, TerminalValues.Loop }, { Terminals.Low, TerminalValues.Low }, { Terminals.Main, TerminalValues.Main }, { Terminals.Management, TerminalValues.Management }, { Terminals.Manual, TerminalValues.Manual }, { Terminals.Map, TerminalValues.Map }, { Terminals.Mapping, TerminalValues.Mapping }, { Terminals.Mask, TerminalValues.Mask }, { Terminals.Master, TerminalValues.Master }, { Terminals.Match, TerminalValues.Match }, { Terminals.Matched, TerminalValues.Matched }, { Terminals.Matches, TerminalValues.Matches }, { Terminals.MatchRecognize, TerminalValues.MatchRecognize }, { Terminals.Materialized, TerminalValues.Materialized }, { Terminals.MathDivide, TerminalValues.MathDivide }, { Terminals.MathEquals, TerminalValues.MathEquals }, { Terminals.MathFactor, TerminalValues.MathFactor }, { Terminals.MathGreatherThan, TerminalValues.MathGreatherThan }, { Terminals.MathGreatherThanOrEquals, TerminalValues.MathGreatherThanOrEquals }, { Terminals.MathInfinite, TerminalValues.MathInfinite }, { Terminals.MathLessThan, TerminalValues.MathLessThan }, { Terminals.MathLessThanOrEquals, TerminalValues.MathLessThanOrEquals }, { Terminals.MathMinus, TerminalValues.MathMinus }, { Terminals.MathNotANumber, TerminalValues.MathNotANumber }, { Terminals.MathNotEqualsC, TerminalValues.MathNotEqualsC }, { Terminals.MathNotEqualsCircumflex, TerminalValues.MathNotEqualsCircumflex }, { Terminals.MathNotEqualsSql, TerminalValues.MathNotEqualsSql }, { Terminals.MathPlus, TerminalValues.MathPlus }, { Terminals.Max, TerminalValues.Max }, { Terminals.MaximumExtents, TerminalValues.MaximumExtents }, { Terminals.MaximumSize, TerminalValues.MaximumSize }, { Terminals.MaximumTransactions, TerminalValues.MaximumTransactions }, { Terminals.MaximumValue, TerminalValues.MaximumValue }, { Terminals.Measures, TerminalValues.Measures }, { Terminals.Medium, TerminalValues.Medium }, { Terminals.Mega, TerminalValues.Mega }, { Terminals.Member, TerminalValues.Member }, { Terminals.MemberFunctionIdentifier, null }, { Terminals.Memory, TerminalValues.Memory }, { Terminals.MemoryCompression, TerminalValues.MemoryCompression }, { Terminals.Merge, TerminalValues.Merge }, { Terminals.Migrate, TerminalValues.Migrate }, { Terminals.Migration, TerminalValues.Migration }, { Terminals.Min, TerminalValues.Min }, { Terminals.Minimize, TerminalValues.Minimize }, { Terminals.Minimum, TerminalValues.Minimum }, { Terminals.MinimumExtents, TerminalValues.MinimumExtents }, { Terminals.MinimumValue, TerminalValues.MinimumValue }, { Terminals.Mining, TerminalValues.Mining }, { Terminals.Minute, TerminalValues.Minute }, { Terminals.Missing, TerminalValues.Missing }, { Terminals.Mode, TerminalValues.Mode }, { Terminals.Model, TerminalValues.Model }, { Terminals.Modification, TerminalValues.Modification }, { Terminals.Modify, TerminalValues.Modify }, { Terminals.Month, TerminalValues.Month }, { Terminals.Months, TerminalValues.Months }, { Terminals.Move, TerminalValues.Move }, { Terminals.Movement, TerminalValues.Movement }, { Terminals.Multiset, TerminalValues.Multiset }, { Terminals.Name, TerminalValues.Name }, { Terminals.National, TerminalValues.National }, { Terminals.NationalCharacterSet, TerminalValues.NationalCharacterSet }, { Terminals.Natural, TerminalValues.Natural }, { Terminals.NChar, TerminalValues.NChar }, { Terminals.NegationOrNull, TerminalValues.NegationOrNull }, { Terminals.Nested, TerminalValues.Nested }, { Terminals.New, TerminalValues.New }, { Terminals.NewLine, TerminalValues.NewLine }, { Terminals.Next, TerminalValues.Next }, { Terminals.No, TerminalValues.No }, { Terminals.NoAudit, TerminalValues.NoAudit }, { Terminals.NoBadFile, TerminalValues.NoBadFile }, { Terminals.NoCache, TerminalValues.NoCache }, { Terminals.NoCheck, TerminalValues.NoCheck }, { Terminals.Nocompress, TerminalValues.Nocompress }, { Terminals.NoCompress, TerminalValues.NoCompress }, { Terminals.NoCopy, TerminalValues.NoCopy }, { Terminals.NoCycle, TerminalValues.NoCycle }, { Terminals.NoDirectInputOutput, TerminalValues.NoDirectInputOutput }, { Terminals.NoDiscardFile, TerminalValues.NoDiscardFile }, { Terminals.NoEntityEscaping, TerminalValues.NoEntityEscaping }, { Terminals.NoGuarantee, TerminalValues.NoGuarantee }, { Terminals.NoKeep, TerminalValues.NoKeep }, { Terminals.NoLogFile, TerminalValues.NoLogFile }, { Terminals.NoLogging, TerminalValues.NoLogging }, { Terminals.NoMapping, TerminalValues.NoMapping }, { Terminals.NoMaximumValue, TerminalValues.NoMaximumValue }, { Terminals.NoMinimize, TerminalValues.NoMinimize }, { Terminals.NoMinimumValue, TerminalValues.NoMinimumValue }, { Terminals.NonAvailableValues, TerminalValues.NonAvailableValues }, { Terminals.None, TerminalValues.None }, { Terminals.NonEditionable, TerminalValues.NonEditionable }, { Terminals.NonSchema, TerminalValues.NonSchema }, { Terminals.NoNullIf, TerminalValues.NoNullIf }, { Terminals.NoOrder, TerminalValues.NoOrder }, { Terminals.NoParallel, TerminalValues.NoParallel }, { Terminals.NoPartition, TerminalValues.NoPartition }, { Terminals.NoRely, TerminalValues.NoRely }, { Terminals.NoReplay, TerminalValues.NoReplay }, { Terminals.Normal, TerminalValues.Normal }, { Terminals.NoRowDependencies, TerminalValues.NoRowDependencies }, { Terminals.NoSchemaCheck, TerminalValues.NoSchemaCheck }, { Terminals.NoSort, TerminalValues.NoSort }, { Terminals.NoSwitch, TerminalValues.NoSwitch }, { Terminals.Not, TerminalValues.Not }, { Terminals.NotFound, TerminalValues.NotFound }, { Terminals.Nothing, TerminalValues.Nothing }, { Terminals.NoTrim, TerminalValues.NoTrim }, { Terminals.NoValidate, TerminalValues.NoValidate }, { Terminals.Nowait, TerminalValues.Nowait }, { Terminals.Null, TerminalValues.Null }, { Terminals.NullIf, TerminalValues.NullIf }, { Terminals.Nulls, TerminalValues.Nulls }, { Terminals.Number, TerminalValues.Number }, { Terminals.NumberLiteral, null }, { Terminals.Numeric, TerminalValues.Numeric }, { Terminals.NVarchar, TerminalValues.NVarchar }, { Terminals.NVarchar2, TerminalValues.NVarchar2 }, { Terminals.Object, TerminalValues.Object }, { Terminals.ObjectAlias, null }, { Terminals.ObjectId, TerminalValues.ObjectId }, { Terminals.ObjectIdentifier, null }, { Terminals.ObjectIdentifierIndex, TerminalValues.ObjectIdentifierIndex }, { Terminals.Of, TerminalValues.Of }, { Terminals.Off, TerminalValues.Off }, { Terminals.Offline, TerminalValues.Offline }, { Terminals.Offset, TerminalValues.Offset }, { Terminals.Old, TerminalValues.Old }, { Terminals.Oltp, TerminalValues.Oltp }, { Terminals.Omit, TerminalValues.Omit }, { Terminals.On, TerminalValues.On }, { Terminals.One, TerminalValues.One }, { Terminals.Online, TerminalValues.Online }, { Terminals.Only, TerminalValues.Only }, { Terminals.Opaque, TerminalValues.Opaque }, { Terminals.Open, TerminalValues.Open }, { Terminals.OperationCode, TerminalValues.OperationCode }, { Terminals.Operations, TerminalValues.Operations }, { Terminals.Operator, TerminalValues.Operator }, { Terminals.OperatorConcatenation, TerminalValues.OperatorConcatenation }, { Terminals.Option, TerminalValues.Option }, { Terminals.Optionally, TerminalValues.Optionally }, { Terminals.OptionalParameterOperator, TerminalValues.OptionalParameterOperator }, { Terminals.Or, TerminalValues.Or }, { Terminals.OracleDataPump, TerminalValues.OracleDataPump }, { Terminals.OracleDate, TerminalValues.OracleDate }, { Terminals.OracleLoader, TerminalValues.OracleLoader }, { Terminals.OracleNumber, TerminalValues.OracleNumber }, { Terminals.Order, TerminalValues.Order }, { Terminals.Ordinality, TerminalValues.Ordinality }, { Terminals.Organization, TerminalValues.Organization }, { Terminals.Out, TerminalValues.Out }, { Terminals.Outer, TerminalValues.Outer }, { Terminals.Over, TerminalValues.Over }, { Terminals.Overflow, TerminalValues.Overflow }, { Terminals.Overlaps, TerminalValues.Overlaps }, { Terminals.Override, TerminalValues.Override }, { Terminals.Overriding, TerminalValues.Overriding }, { Terminals.Package, TerminalValues.Package }, { Terminals.Parallel, TerminalValues.Parallel }, { Terminals.ParallelEnable, TerminalValues.ParallelEnable }, { Terminals.ParameterFile, TerminalValues.ParameterFile }, { Terminals.ParameterIdentifier, null }, { Terminals.Parameters, TerminalValues.Parameters }, { Terminals.Parent, TerminalValues.Parent }, { Terminals.Partial, TerminalValues.Partial }, { Terminals.Partition, TerminalValues.Partition }, { Terminals.Partitions, TerminalValues.Partitions }, { Terminals.Passing, TerminalValues.Passing }, { Terminals.Password, TerminalValues.Password }, { Terminals.PasswordGraceTime, TerminalValues.PasswordGraceTime }, { Terminals.PasswordLifeTime, TerminalValues.PasswordLifeTime }, { Terminals.PasswordLockTime, TerminalValues.PasswordLockTime }, { Terminals.PasswordReuseMax, TerminalValues.PasswordReuseMax }, { Terminals.PasswordReuseTime, TerminalValues.PasswordReuseTime }, { Terminals.PasswordVerifyFunction, TerminalValues.PasswordVerifyFunction }, { Terminals.Past, TerminalValues.Past }, { Terminals.Patch, TerminalValues.Patch }, { Terminals.Path, TerminalValues.Path }, { Terminals.Pattern, TerminalValues.Pattern }, { Terminals.Pctfree, TerminalValues.Pctfree }, { Terminals.Per, TerminalValues.Per }, { Terminals.Percent, TerminalValues.Percent }, { Terminals.PercentCharacter, TerminalValues.PercentCharacter }, { Terminals.PercentFree, TerminalValues.PercentFree }, { Terminals.PercentileContinuousDistribution, TerminalValues.PercentileContinuousDistribution }, { Terminals.PercentileDiscreteDistribution, TerminalValues.PercentileDiscreteDistribution }, { Terminals.PercentIncrease, TerminalValues.PercentIncrease }, { Terminals.PercentThreshold, TerminalValues.PercentThreshold }, { Terminals.PercentUsed, TerminalValues.PercentUsed }, { Terminals.PercentVersion, TerminalValues.PercentVersion }, { Terminals.Period, TerminalValues.Period }, { Terminals.Permanent, TerminalValues.Permanent }, { Terminals.Permute, TerminalValues.Permute }, { Terminals.Peta, TerminalValues.Peta }, { Terminals.Pipe, TerminalValues.Pipe }, { Terminals.Pipelined, TerminalValues.Pipelined }, { Terminals.Pivot, TerminalValues.Pivot }, { Terminals.Plan, TerminalValues.Plan }, { Terminals.PlsInteger, TerminalValues.PlsInteger }, { Terminals.PlSqlCompilationParameter, null }, { Terminals.PlSqlConditionalCompilationElse, TerminalValues.PlSqlConditionalCompilationElse }, { Terminals.PlSqlConditionalCompilationElseIf, TerminalValues.PlSqlConditionalCompilationElseIf }, { Terminals.PlSqlConditionalCompilationEnd, TerminalValues.PlSqlConditionalCompilationEnd }, { Terminals.PlSqlConditionalCompilationError, TerminalValues.PlSqlConditionalCompilationError }, { Terminals.PlSqlConditionalCompilationIf, TerminalValues.PlSqlConditionalCompilationIf }, { Terminals.PlSqlConditionalCompilationThen, TerminalValues.PlSqlConditionalCompilationThen }, { Terminals.PlSqlIdentifier, null }, { Terminals.Pluggable, TerminalValues.Pluggable }, { Terminals.Point, TerminalValues.Point }, { Terminals.Policy, TerminalValues.Policy }, { Terminals.Position, TerminalValues.Position }, { Terminals.PostTransaction, TerminalValues.PostTransaction }, { Terminals.Pragma, TerminalValues.Pragma }, { Terminals.Precedes, TerminalValues.Precedes }, { Terminals.Preceding, TerminalValues.Preceding }, { Terminals.Precision, TerminalValues.Precision }, { Terminals.Preprocessor, TerminalValues.Preprocessor }, { Terminals.Preserve, TerminalValues.Preserve }, { Terminals.Pretty, TerminalValues.Pretty }, { Terminals.Previous, TerminalValues.Previous }, { Terminals.Primary, TerminalValues.Primary }, { Terminals.Prior, TerminalValues.Prior }, { Terminals.Priority, TerminalValues.Priority }, { Terminals.PrivateSystemGlobalArea, TerminalValues.PrivateSystemGlobalArea }, { Terminals.Privileges, TerminalValues.Privileges }, { Terminals.Procedure, TerminalValues.Procedure }, { Terminals.Profile, TerminalValues.Profile }, { Terminals.Public, TerminalValues.Public }, { Terminals.Purge, TerminalValues.Purge }, { Terminals.Query, TerminalValues.Query }, { Terminals.QuestionMark, TerminalValues.QuestionMark }, { Terminals.Quiesce, TerminalValues.Quiesce }, { Terminals.Quota, TerminalValues.Quota }, { Terminals.Raise, TerminalValues.Raise }, { Terminals.Range, TerminalValues.Range }, { Terminals.Rank, TerminalValues.Rank }, { Terminals.Raw, TerminalValues.Raw }, { Terminals.Read, TerminalValues.Read }, { Terminals.ReadNoDatabaseState, TerminalValues.ReadNoDatabaseState }, { Terminals.ReadNoPackageState, TerminalValues.ReadNoPackageState }, { Terminals.Reads, TerminalValues.Reads }, { Terminals.ReadSize, TerminalValues.ReadSize }, { Terminals.Record, TerminalValues.Record }, { Terminals.Records, TerminalValues.Records }, { Terminals.RecordsPerBlock, TerminalValues.RecordsPerBlock }, { Terminals.Recoverable, TerminalValues.Recoverable }, { Terminals.Recovery, TerminalValues.Recovery }, { Terminals.Recycle, TerminalValues.Recycle }, { Terminals.RecycleBin, TerminalValues.RecycleBin }, { Terminals.Redo, TerminalValues.Redo }, { Terminals.RedoBlockAddress, TerminalValues.RedoBlockAddress }, { Terminals.Ref, TerminalValues.Ref }, { Terminals.Reference, TerminalValues.Reference }, { Terminals.References, TerminalValues.References }, { Terminals.Referencing, TerminalValues.Referencing }, { Terminals.Refresh, TerminalValues.Refresh }, { Terminals.Register, TerminalValues.Register }, { Terminals.Reject, TerminalValues.Reject }, { Terminals.ReKey, TerminalValues.ReKey }, { Terminals.ReliesOn, TerminalValues.ReliesOn }, { Terminals.Relocate, TerminalValues.Relocate }, { Terminals.Rely, TerminalValues.Rely }, { Terminals.Remove, TerminalValues.Remove }, { Terminals.Rename, TerminalValues.Rename }, { Terminals.Repeat, TerminalValues.Repeat }, { Terminals.Replace, TerminalValues.Replace }, { Terminals.Required, TerminalValues.Required }, { Terminals.Reset, TerminalValues.Reset }, { Terminals.ResetLogs, TerminalValues.ResetLogs }, { Terminals.Resize, TerminalValues.Resize }, { Terminals.Resource, TerminalValues.Resource }, { Terminals.Respect, TerminalValues.Respect }, { Terminals.Restore, TerminalValues.Restore }, { Terminals.Restricted, TerminalValues.Restricted }, { Terminals.RestrictReferences, TerminalValues.RestrictReferences }, { Terminals.Result, TerminalValues.Result }, { Terminals.ResultCache, TerminalValues.ResultCache }, { Terminals.Resumable, TerminalValues.Resumable }, { Terminals.Resume, TerminalValues.Resume }, { Terminals.Retention, TerminalValues.Retention }, { Terminals.Return, TerminalValues.Return }, { Terminals.Returning, TerminalValues.Returning }, { Terminals.Reuse, TerminalValues.Reuse }, { Terminals.Reverse, TerminalValues.Reverse }, { Terminals.Revoke, TerminalValues.Revoke }, { Terminals.Rewrite, TerminalValues.Rewrite }, { Terminals.Right, TerminalValues.Right }, { Terminals.RightBrace, TerminalValues.RightBrace }, { Terminals.RightBracket, TerminalValues.RightBracket }, { Terminals.RightLabelMarker, TerminalValues.RightLabelMarker }, { Terminals.RightParenthesis, TerminalValues.RightParenthesis }, { Terminals.RightTrim, TerminalValues.RightTrim }, { Terminals.Role, TerminalValues.Role }, { Terminals.Roles, TerminalValues.Roles }, { Terminals.Rollback, TerminalValues.Rollback }, { Terminals.Rolling, TerminalValues.Rolling }, { Terminals.Rollup, TerminalValues.Rollup }, { Terminals.Row, TerminalValues.Row }, { Terminals.RowCount, TerminalValues.RowCount }, { Terminals.RowDependencies, TerminalValues.RowDependencies }, { Terminals.RowIdDataType, TerminalValues.RowIdDataType }, { Terminals.RowIdPseudocolumn, TerminalValues.RowIdPseudocolumn }, { Terminals.RowNumberPseudocolumn, TerminalValues.RowNumberPseudocolumn }, { Terminals.Rows, TerminalValues.Rows }, { Terminals.RowType, TerminalValues.RowType }, { Terminals.Rules, TerminalValues.Rules }, { Terminals.Running, TerminalValues.Running }, { Terminals.Salt, TerminalValues.Salt }, { Terminals.Sample, TerminalValues.Sample }, { Terminals.Save, TerminalValues.Save }, { Terminals.Savepoint, TerminalValues.Savepoint }, { Terminals.Schema, TerminalValues.Schema }, { Terminals.SchemaCheck, TerminalValues.SchemaCheck }, { Terminals.SchemaIdentifier, null }, { Terminals.Scope, TerminalValues.Scope }, { Terminals.Search, TerminalValues.Search }, { Terminals.Second, TerminalValues.Second }, { Terminals.SecureFile, TerminalValues.SecureFile }, { Terminals.Seed, TerminalValues.Seed }, { Terminals.Segment, TerminalValues.Segment }, { Terminals.Select, TerminalValues.Select }, { Terminals.Self, TerminalValues.Self }, { Terminals.Semicolon, TerminalValues.Semicolon }, { Terminals.Sequence, TerminalValues.Sequence }, { Terminals.Sequential, TerminalValues.Sequential }, { Terminals.Serializable, TerminalValues.Serializable }, { Terminals.SeriallyReusable, TerminalValues.SeriallyReusable }, { Terminals.ServerError, TerminalValues.ServerError }, { Terminals.ServerParameterFile, TerminalValues.ServerParameterFile }, { Terminals.Session, TerminalValues.Session }, { Terminals.SessionId, TerminalValues.SessionId }, { Terminals.SessionsPerUser, TerminalValues.SessionsPerUser }, { Terminals.SessionTimezone, TerminalValues.SessionTimezone }, { Terminals.Set, TerminalValues.Set }, { Terminals.SetMinus, TerminalValues.SetMinus }, { Terminals.Sets, TerminalValues.Sets }, { Terminals.Settings, TerminalValues.Settings }, { Terminals.Share, TerminalValues.Share }, { Terminals.Shared, TerminalValues.Shared }, { Terminals.SharedPool, TerminalValues.SharedPool }, { Terminals.Show, TerminalValues.Show }, { Terminals.Shrink, TerminalValues.Shrink }, { Terminals.Shutdown, TerminalValues.Shutdown }, { Terminals.Siblings, TerminalValues.Siblings }, { Terminals.Single, TerminalValues.Single }, { Terminals.Size, TerminalValues.Size }, { Terminals.Sizes, TerminalValues.Sizes }, { Terminals.Skip, TerminalValues.Skip }, { Terminals.SmallFile, TerminalValues.SmallFile }, { Terminals.Smallint, TerminalValues.Smallint }, { Terminals.Snapshot, TerminalValues.Snapshot }, { Terminals.Some, TerminalValues.Some }, { Terminals.Sort, TerminalValues.Sort }, { Terminals.Source, TerminalValues.Source }, { Terminals.Space, null }, { Terminals.Specification, TerminalValues.Specification }, { Terminals.SqlLoaderTrim, TerminalValues.SqlLoaderTrim }, { Terminals.SqlPlusTerminator, TerminalValues.SqlPlusTerminator }, { Terminals.Standalone, TerminalValues.Standalone }, { Terminals.StandardDeviation, TerminalValues.StandardDeviation }, { Terminals.Standby, TerminalValues.Standby }, { Terminals.Start, TerminalValues.Start }, { Terminals.StartOf, TerminalValues.StartOf }, { Terminals.Startup, TerminalValues.Startup }, { Terminals.Statement, TerminalValues.Statement }, { Terminals.StatementId, TerminalValues.StatementId }, { Terminals.Static, TerminalValues.Static }, { Terminals.Statistics, TerminalValues.Statistics }, { Terminals.Stop, TerminalValues.Stop }, { Terminals.Storage, TerminalValues.Storage }, { Terminals.Store, TerminalValues.Store }, { Terminals.Strict, TerminalValues.Strict }, { Terminals.String, TerminalValues.String }, { Terminals.StringLiteral, null }, { Terminals.Structure, TerminalValues.Structure }, { Terminals.SubMultiset, TerminalValues.SubMultiset }, { Terminals.Subpartition, TerminalValues.Subpartition }, { Terminals.Subpartitions, TerminalValues.Subpartitions }, { Terminals.Subset, TerminalValues.Subset }, { Terminals.Substitutable, TerminalValues.Substitutable }, { Terminals.SubType, TerminalValues.SubType }, { Terminals.Successful, TerminalValues.Successful }, { Terminals.Sum, TerminalValues.Sum }, { Terminals.Supplemental, TerminalValues.Supplemental }, { Terminals.Suspend, TerminalValues.Suspend }, { Terminals.Switch, TerminalValues.Switch }, { Terminals.Sync, TerminalValues.Sync }, { Terminals.Synchronous, TerminalValues.Synchronous }, { Terminals.Synonym, TerminalValues.Synonym }, { Terminals.System, TerminalValues.System }, { Terminals.SystemChangeNumber, TerminalValues.SystemChangeNumber }, { Terminals.SystemDate, TerminalValues.SystemDate }, { Terminals.Table, TerminalValues.Table }, { Terminals.Tables, TerminalValues.Tables }, { Terminals.Tablespace, TerminalValues.Tablespace }, { Terminals.Tempfile, TerminalValues.Tempfile }, { Terminals.Template, TerminalValues.Template }, { Terminals.Temporary, TerminalValues.Temporary }, { Terminals.Tera, TerminalValues.Tera }, { Terminals.Terminated, TerminalValues.Terminated }, { Terminals.Territory, TerminalValues.Territory }, { Terminals.Than, TerminalValues.Than }, { Terminals.The, TerminalValues.The }, { Terminals.Then, TerminalValues.Then }, { Terminals.These, TerminalValues.These }, { Terminals.Through, TerminalValues.Through }, { Terminals.Tier, TerminalValues.Tier }, { Terminals.Ties, TerminalValues.Ties }, { Terminals.Time, TerminalValues.Time }, { Terminals.Timeout, TerminalValues.Timeout }, { Terminals.Timestamp, TerminalValues.Timestamp }, { Terminals.TimezoneAbbreviation, TerminalValues.TimezoneAbbreviation }, { Terminals.TimezoneHour, TerminalValues.TimezoneHour }, { Terminals.TimezoneMinute, TerminalValues.TimezoneMinute }, { Terminals.TimezoneRegion, TerminalValues.TimezoneRegion }, { Terminals.To, TerminalValues.To }, { Terminals.Trailing, TerminalValues.Trailing }, { Terminals.Transaction, TerminalValues.Transaction }, { Terminals.Transforms, TerminalValues.Transforms }, { Terminals.Treat, TerminalValues.Treat }, { Terminals.Trigger, TerminalValues.Trigger }, { Terminals.Triggers, TerminalValues.Triggers }, { Terminals.Trim, TerminalValues.Trim }, { Terminals.True, TerminalValues.True }, { Terminals.Truncate, TerminalValues.Truncate }, { Terminals.Trust, TerminalValues.Trust }, { Terminals.Trusted, TerminalValues.Trusted }, { Terminals.Type, TerminalValues.Type }, { Terminals.TypeIdentifier, null }, { Terminals.Unbounded, TerminalValues.Unbounded }, { Terminals.Unconditional, TerminalValues.Unconditional }, { Terminals.Under, TerminalValues.Under }, { Terminals.Undo, TerminalValues.Undo }, { Terminals.Uniform, TerminalValues.Uniform }, { Terminals.Union, TerminalValues.Union }, { Terminals.Unique, TerminalValues.Unique }, { Terminals.UniversalRowId, TerminalValues.UniversalRowId }, { Terminals.Unlimited, TerminalValues.Unlimited }, { Terminals.Unlock, TerminalValues.Unlock }, { Terminals.Unmatched, TerminalValues.Unmatched }, { Terminals.Unpacked, TerminalValues.Unpacked }, { Terminals.Unpivot, TerminalValues.Unpivot }, { Terminals.Unplug, TerminalValues.Unplug }, { Terminals.Unquiesce, TerminalValues.Unquiesce }, { Terminals.Unrecoverable, TerminalValues.Unrecoverable }, { Terminals.Unsigned, TerminalValues.Unsigned }, { Terminals.Until, TerminalValues.Until }, { Terminals.Unusable, TerminalValues.Unusable }, { Terminals.Unused, TerminalValues.Unused }, { Terminals.Update, TerminalValues.Update }, { Terminals.Updated, TerminalValues.Updated }, { Terminals.Updating, TerminalValues.Updating }, { Terminals.Upgrade, TerminalValues.Upgrade }, { Terminals.Upsert, TerminalValues.Upsert }, { Terminals.Usable, TerminalValues.Usable }, { Terminals.Use, TerminalValues.Use }, { Terminals.User, TerminalValues.User }, { Terminals.UserDefinedFunction, TerminalValues.UserDefinedFunction }, { Terminals.UserId, TerminalValues.UserId }, { Terminals.Users, TerminalValues.Users }, { Terminals.Using, TerminalValues.Using }, { Terminals.Validate, TerminalValues.Validate }, { Terminals.Value, TerminalValues.Value }, { Terminals.Values, TerminalValues.Values }, { Terminals.Varchar, TerminalValues.Varchar }, { Terminals.Varchar2, TerminalValues.Varchar2 }, { Terminals.VarcharC, TerminalValues.VarcharC }, { Terminals.Variable, TerminalValues.Variable }, { Terminals.VariableElementArray, TerminalValues.VariableElementArray }, { Terminals.Variance, TerminalValues.Variance }, { Terminals.Varraw, TerminalValues.Varraw }, { Terminals.VarrawC, TerminalValues.VarrawC }, { Terminals.Varying, TerminalValues.Varying }, { Terminals.Version, TerminalValues.Version }, { Terminals.Versions, TerminalValues.Versions }, { Terminals.VerticalBarCharacter, TerminalValues.VerticalBarCharacter }, { Terminals.View, TerminalValues.View }, { Terminals.Virtual, TerminalValues.Virtual }, { Terminals.Visible, TerminalValues.Visible }, { Terminals.Wait, TerminalValues.Wait }, { Terminals.Wallet, TerminalValues.Wallet }, { Terminals.WellFormed, TerminalValues.WellFormed }, { Terminals.When, TerminalValues.When }, { Terminals.Whenever, TerminalValues.Whenever }, { Terminals.Where, TerminalValues.Where }, { Terminals.While, TerminalValues.While }, { Terminals.Whitespace, TerminalValues.Whitespace }, { Terminals.With, TerminalValues.With }, { Terminals.Within, TerminalValues.Within }, { Terminals.Without, TerminalValues.Without }, { Terminals.Work, TerminalValues.Work }, { Terminals.Wrapped, TerminalValues.Wrapped }, { Terminals.WrappedToken, null }, { Terminals.Wrapper, TerminalValues.Wrapper }, { Terminals.Write, TerminalValues.Write }, { Terminals.WriteNoDatabaseState, TerminalValues.WriteNoDatabaseState }, { Terminals.WriteNoPackageState, TerminalValues.WriteNoPackageState }, { Terminals.Xml, TerminalValues.Xml }, { Terminals.XmlAggregate, TerminalValues.XmlAggregate }, { Terminals.XmlAlias, null }, { Terminals.XmlAttributes, TerminalValues.XmlAttributes }, { Terminals.XmlCast, TerminalValues.XmlCast }, { Terminals.XmlColumnValue, TerminalValues.XmlColumnValue }, { Terminals.XmlElement, TerminalValues.XmlElement }, { Terminals.XmlExists, TerminalValues.XmlExists }, { Terminals.XmlForest, TerminalValues.XmlForest }, { Terminals.XmlNamespaces, TerminalValues.XmlNamespaces }, { Terminals.XmlParse, TerminalValues.XmlParse }, { Terminals.XmlQuery, TerminalValues.XmlQuery }, { Terminals.XmlRoot, TerminalValues.XmlRoot }, { Terminals.XmlSerialize, TerminalValues.XmlSerialize }, { Terminals.XmlTable, TerminalValues.XmlTable }, { Terminals.XmlType, TerminalValues.XmlType }, { Terminals.Year, TerminalValues.Year }, { Terminals.Years, TerminalValues.Years }, { Terminals.YearToMonth, TerminalValues.YearToMonth }, { Terminals.Yes, TerminalValues.Yes }, { Terminals.Zone, TerminalValues.Zone }, { Terminals.Zoned, TerminalValues.Zoned }, { Terminals.ZoneMap, TerminalValues.ZoneMap } });
			
		private static readonly HashSet<string> IdentifiersInternal = new HashSet<string> { Terminals.BindVariableIdentifier, Terminals.CursorIdentifier, Terminals.DatabaseLinkIdentifier, Terminals.DataTypeIdentifier, Terminals.ExceptionIdentifier, Terminals.Identifier, Terminals.IndicatorVariableIdentifier, Terminals.LabelIdentifier, Terminals.MemberFunctionIdentifier, Terminals.ObjectIdentifier, Terminals.ObjectIdentifierIndex, Terminals.ParameterIdentifier, Terminals.PlSqlIdentifier, Terminals.SchemaIdentifier, Terminals.TypeIdentifier };

		internal static readonly ICollection<string> ReservedWordsSql = new HashSet<string> { "ACCESS", "ADD", "ALL", "ALTER", "AND", "ANY", "ASC", "AUDIT", "BETWEEN", "BY", "CHAR", "CHECK", "CLUSTER", "COLUMN", "COMMENT", "COMPRESS", "CONNECT", "CREATE", "CURRENT", "DATE", "DECIMAL", "DEFAULT", "DELETE", "DESC", "DISTINCT", "DROP", "ELSE", "EXCLUSIVE", "EXISTS", "FILE", "FLOAT", "FOR", "FROM", "GRANT", "GROUP", "HAVING", "IDENTIFIED", "IMMEDIATE", "IN", "INCREMENT", "INDEX", "INITIAL", "INSERT", "INTEGER", "INTERSECT", "INTO", "IS", "LEVEL", "LIKE", "LOCK", "LONG", "MAXEXTENTS", "MINUS", "MODE", "MODIFY", "NOAUDIT", "NOCOMPRESS", "NOT", "NOWAIT", "NULL", "NUMBER", "OF", "OFFLINE", "ON", "ONLINE", "OPTION", "OR", "ORDER", "PCTFREE", "PRIOR", "PUBLIC", "RAW", "RENAME", "RESOURCE", "REVOKE", "ROW", "ROWID", "ROWNUM", "ROWS", "SELECT", "SESSION", "SET", "SHARE", "SIZE", "SMALLINT", "SOME", "START", "SUCCESSFUL", "SYNONYM", "SYSDATE", "TABLE", "THEN", "TO", "TRIGGER", "UID", "UNION", "UNIQUE", "UPDATE", "USER", "VALIDATE", "VALUES", "VARCHAR", "VARCHAR2", "VIEW", "WHENEVER", "WHERE", "WITH" };
		
		internal static readonly ICollection<string> ReservedWordsPlSqlDeclaration = new HashSet<string> { "AS", "AT", "BEGIN", "CASE", "COLUMNS", "CURSOR", "DECLARE", "END", "EXCEPTION", "FETCH", "FUNCTION", "GOTO", "IF", "INDEXES", "OVERLAPS", "PRAGMA", "PROCEDURE", "SUBTYPE", "TYPE", "WHEN" };
		
		internal static readonly ICollection<string> ReservedWordsPlSqlBody = new HashSet<string> { "AS", "AT", "BEGIN", "CASE", "CLOSE", "COLUMNS", "COMMIT", "DECLARE", "END", "EXCEPTION", "EXIT", "FETCH", "GOTO", "IF", "INDEXES", "LOOP", "OPEN", "OVERLAPS", "PRAGMA", "PROCEDURE", "RAISE", "RETURN", "ROLLBACK", "SAVEPOINT", "WHEN", "WHILE" };
		
		internal static readonly ICollection<string> ReservedWordsPlSql = new HashSet<string> { "AS", "AT", "BEGIN", "CASE", "COLUMNS", "DECLARE", "END", "EXCEPTION", "FETCH", "GOTO", "IF", "INDEXES", "OVERLAPS", "PRAGMA", "PROCEDURE", "WHEN" };
		
		private static readonly HashSet<string> LiteralsInternal = new HashSet<string> { Terminals.DoubleQuotedStringLiteral, Terminals.IntegerLiteral, Terminals.NumberLiteral, Terminals.StringLiteral };

		private static readonly HashSet<string> ZeroOffsetTerminalIdsInternal =
			new HashSet<string>
			{
				Terminals.Asterisk,
				Terminals.Dot,
				Terminals.Comma,
				Terminals.OperatorConcatenation,
				Terminals.LeftParenthesis,
				Terminals.RightParenthesis,
				Terminals.MathDivide,
				Terminals.MathEquals,
				Terminals.MathFactor,
				Terminals.MathGreatherThan,
				Terminals.MathGreatherThanOrEquals,
				Terminals.MathLessThan,
				Terminals.MathLessThanOrEquals,
				Terminals.MathMinus,
				Terminals.MathNotEqualsC,
				Terminals.MathNotEqualsCircumflex,
				Terminals.MathNotEqualsSql,
				Terminals.MathPlus
			};

		private static readonly HashSet<string> MathTerminalsInternal =
			new HashSet<string>
			{
				Terminals.MathFactor,
				Terminals.MathDivide,
				Terminals.MathPlus,
				Terminals.MathMinus,
				Terminals.OperatorConcatenation
			};

		public static ICollection<string> MathTerminals => MathTerminalsInternal;

		public static ICollection<string> Identifiers => IdentifiersInternal;

		public static bool IsReservedWord(this string value, ReservedWordScope scope = ReservedWordScope.Sql)
		{
			var invariantString = value.ToUpperInvariant();
			var isSqlReserved = ReservedWordsSql.Contains(invariantString);
			return isSqlReserved ||
				   (scope == ReservedWordScope.PlSqlDeclaration && ReservedWordsPlSqlDeclaration.Contains(invariantString)) ||
				   (scope == ReservedWordScope.PlSqlBody && ReservedWordsPlSqlBody.Contains(invariantString));
		}

		public static bool IsIdentifier(this string terminalId)
		{
			return IdentifiersInternal.Contains(terminalId);
		}

		public static bool IsZeroOffsetTerminalId(this string terminalId)
		{
			return ZeroOffsetTerminalIdsInternal.Contains(terminalId);
		}

		public static bool IsAlias(this string terminalId)
		{
			return terminalId == "ColumnAlias" || terminalId == "ObjectAlias" || terminalId == "XmlAlias";
		}

		public static bool IsIdentifierOrAlias(this string terminalId)
		{
			return terminalId.IsIdentifier() || terminalId.IsAlias();
		}

		public static bool IsLiteral(this string terminalId)
		{
			return LiteralsInternal.Contains(terminalId);
		}
	}
}
